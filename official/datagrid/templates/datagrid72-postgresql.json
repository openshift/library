{
    "apiVersion": "v1",
    "kind": "Template",
    "labels": {
        "template": "datagrid72-postgresql",
        "xpaas": "1.4.12"
    },
    "message": "A new data grid service (using PostgreSQL) has been created in your project. It supports connector type(s) \"${INFINISPAN_CONNECTORS}\". The username/password for accessing the MySQL database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.",
    "metadata": {
        "annotations": {
            "description": "An exampleRed Hat JBoss Data Grid application with a PostgreSQL database. For more information about using this template, see https://github.com/jboss-openshift/application-templates.",
            "iconClass": "icon-datagrid",
            "openshift.io/display-name": "Red Hat JBoss Data Grid 7.2 + PostgreSQL (Ephemeral with https)",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "tags": "datagrid,jboss,hidden",
            "template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/",
            "template.openshift.io/long-description": "This template defines resources needed to develop Red Hat JBoss Data Grid 7.2 based application, including a deployment configuration, using PostgreSQL database using ephemeral (temporary) storage and secure communication using https.",
            "template.openshift.io/support-url": "https://access.redhat.com",
            "version": "1.4.12"
        },
        "name": "datagrid72-postgresql"
    },
    "objects": [
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The web server's HTTP port.",
                    "service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The web server's HTTPS port.",
                    "service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "secure-${APPLICATION_NAME}"
            },
            "spec": {
                "ports": [
                    {
                        "port": 8443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "Memcached service for clustered applications."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-memcached"
            },
            "spec": {
                "ports": [
                    {
                        "port": 11211,
                        "targetPort": 11211
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "Hot Rod service for clustered applications."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-hotrod"
            },
            "spec": {
                "ports": [
                    {
                        "port": 11333,
                        "targetPort": 11333
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The database server's port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-postgresql"
            },
            "spec": {
                "ports": [
                    {
                        "port": 5432,
                        "targetPort": 5432
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The JGroups ping port for clustering.",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-ping"
            },
            "spec": {
                "clusterIP": "None",
                "ports": [
                    {
                        "name": "ping",
                        "port": 8888
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for application's HTTP service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-https",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for application's HTTPS service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "secure-${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTPS}",
                "tls": {
                    "termination": "passthrough"
                },
                "to": {
                    "name": "secure-${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}"
                        },
                        "name": "${APPLICATION_NAME}"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "USERNAME",
                                        "value": "${USERNAME}"
                                    },
                                    {
                                        "name": "PASSWORD",
                                        "value": "${PASSWORD}"
                                    },
                                    {
                                        "name": "ADMIN_GROUP",
                                        "value": "${ADMIN_GROUP}"
                                    },
                                    {
                                        "name": "HOTROD_AUTHENTICATION",
                                        "value": "${HOTROD_AUTHENTICATION}"
                                    },
                                    {
                                        "name": "CONTAINER_SECURITY_ROLE_MAPPER",
                                        "value": "${CONTAINER_SECURITY_ROLE_MAPPER}"
                                    },
                                    {
                                        "name": "CONTAINER_SECURITY_ROLES",
                                        "value": "${CONTAINER_SECURITY_ROLES}"
                                    },
                                    {
                                        "name": "HTTPS_KEYSTORE_DIR",
                                        "value": "/etc/datagrid-secret-volume"
                                    },
                                    {
                                        "name": "HTTPS_KEYSTORE",
                                        "value": "${HTTPS_KEYSTORE}"
                                    },
                                    {
                                        "name": "HTTPS_NAME",
                                        "value": "${HTTPS_NAME}"
                                    },
                                    {
                                        "name": "HTTPS_PASSWORD",
                                        "value": "${HTTPS_PASSWORD}"
                                    },
                                    {
                                        "name": "DB_SERVICE_PREFIX_MAPPING",
                                        "value": "${APPLICATION_NAME}-postgresql=DB"
                                    },
                                    {
                                        "name": "DB_JNDI",
                                        "value": "${DB_JNDI}"
                                    },
                                    {
                                        "name": "DB_USERNAME",
                                        "value": "${DB_USERNAME}"
                                    },
                                    {
                                        "name": "DB_PASSWORD",
                                        "value": "${DB_PASSWORD}"
                                    },
                                    {
                                        "name": "DB_DATABASE",
                                        "value": "${DB_DATABASE}"
                                    },
                                    {
                                        "name": "TX_DATABASE_PREFIX_MAPPING",
                                        "value": "${APPLICATION_NAME}-postgresql=DB"
                                    },
                                    {
                                        "name": "DB_MIN_POOL_SIZE",
                                        "value": "${DB_MIN_POOL_SIZE}"
                                    },
                                    {
                                        "name": "DB_MAX_POOL_SIZE",
                                        "value": "${DB_MAX_POOL_SIZE}"
                                    },
                                    {
                                        "name": "DB_TX_ISOLATION",
                                        "value": "${DB_TX_ISOLATION}"
                                    },
                                    {
                                        "name": "DEFAULT_JDBC_STORE_TYPE",
                                        "value": "string"
                                    },
                                    {
                                        "name": "DEFAULT_JDBC_STORE_DATASOURCE",
                                        "value": "${DB_JNDI}"
                                    },
                                    {
                                        "name": "MEMCACHED_JDBC_STORE_TYPE",
                                        "value": "string"
                                    },
                                    {
                                        "name": "MEMCACHED_JDBC_STORE_DATASOURCE",
                                        "value": "${DB_JNDI}"
                                    },
                                    {
                                        "name": "JGROUPS_PING_PROTOCOL",
                                        "value": "openshift.DNS_PING"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_NAME",
                                        "value": "${APPLICATION_NAME}-ping"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_PORT",
                                        "value": "8888"
                                    },
                                    {
                                        "name": "INFINISPAN_CONNECTORS",
                                        "value": "${INFINISPAN_CONNECTORS}"
                                    },
                                    {
                                        "name": "CACHE_NAMES",
                                        "value": "${CACHE_NAMES}"
                                    },
                                    {
                                        "name": "DATAVIRT_CACHE_NAMES",
                                        "value": "${DATAVIRT_CACHE_NAMES}"
                                    },
                                    {
                                        "name": "CACHE_TYPE_DEFAULT",
                                        "value": "${CACHE_TYPE_DEFAULT}"
                                    },
                                    {
                                        "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
                                        "value": "${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"
                                    },
                                    {
                                        "name": "HOTROD_SERVICE_NAME",
                                        "value": "${APPLICATION_NAME}-hotrod"
                                    },
                                    {
                                        "name": "HOTROD_ENCRYPTION",
                                        "value": "${HTTPS_NAME}"
                                    },
                                    {
                                        "name": "MEMCACHED_CACHE",
                                        "value": "${MEMCACHED_CACHE}"
                                    },
                                    {
                                        "name": "REST_SECURITY_DOMAIN",
                                        "value": "${REST_SECURITY_DOMAIN}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_SECRET",
                                        "value": "${JGROUPS_ENCRYPT_SECRET}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_KEYSTORE",
                                        "value": "${JGROUPS_ENCRYPT_KEYSTORE}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_KEYSTORE_DIR",
                                        "value": "/etc/jgroups-encrypt-secret-volume"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_NAME",
                                        "value": "${JGROUPS_ENCRYPT_NAME}"
                                    },
                                    {
                                        "name": "JGROUPS_ENCRYPT_PASSWORD",
                                        "value": "${JGROUPS_ENCRYPT_PASSWORD}"
                                    },
                                    {
                                        "name": "JGROUPS_CLUSTER_PASSWORD",
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                    }
                                ],
                                "image": "jboss-datagrid72-openshift",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/datagrid/bin/livenessProbe.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 60
                                },
                                "name": "${APPLICATION_NAME}",
                                "ports": [
                                    {
                                        "containerPort": 8778,
                                        "name": "jolokia",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8888,
                                        "name": "ping",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 11211,
                                        "name": "memcached",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 11222,
                                        "name": "hotrod-internal",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 11333,
                                        "name": "hotrod",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/datagrid/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "${MEMORY_LIMIT}"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/datagrid-secret-volume",
                                        "name": "datagrid-keystore-volume",
                                        "readOnly": true
                                    },
                                    {
                                        "mountPath": "/etc/jgroups-encrypt-secret-volume",
                                        "name": "datagrid-jgroups-keystore-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "terminationGracePeriodSeconds": 60,
                        "volumes": [
                            {
                                "name": "datagrid-keystore-volume",
                                "secret": {
                                    "secretName": "${HTTPS_SECRET}"
                                }
                            },
                            {
                                "name": "datagrid-jgroups-keystore-volume",
                                "secret": {
                                    "secretName": "${JGROUPS_ENCRYPT_SECRET}"
                                }
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "jboss-datagrid72-openshift:1.0",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-postgresql"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                        },
                        "name": "${APPLICATION_NAME}-postgresql"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POSTGRESQL_USER",
                                        "value": "${DB_USERNAME}"
                                    },
                                    {
                                        "name": "POSTGRESQL_PASSWORD",
                                        "value": "${DB_PASSWORD}"
                                    },
                                    {
                                        "name": "POSTGRESQL_DATABASE",
                                        "value": "${DB_DATABASE}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_CONNECTIONS",
                                        "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
                                        "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                                    },
                                    {
                                        "name": "POSTGRESQL_SHARED_BUFFERS",
                                        "value": "${POSTGRESQL_SHARED_BUFFERS}"
                                    }
                                ],
                                "image": "postgresql",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "initialDelaySeconds": 30,
                                    "tcpSocket": {
                                        "port": 5432
                                    },
                                    "timeoutSeconds": 1
                                },
                                "name": "${APPLICATION_NAME}-postgresql",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/sh",
                                            "-i",
                                            "-c",
                                            "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
                                        ]
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/pgsql/data",
                                        "name": "${APPLICATION_NAME}-data"
                                    }
                                ]
                            }
                        ],
                        "volumes": [
                            {
                                "emptyDir": {
                                    "medium": ""
                                },
                                "name": "${APPLICATION_NAME}-data"
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}-postgresql"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}",
                                "namespace": "${IMAGE_STREAM_NAMESPACE}"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        }
    ],
    "parameters": [
        {
            "description": "The name for the application.",
            "displayName": "Application Name",
            "name": "APPLICATION_NAME",
            "required": true,
            "value": "datagrid-app"
        },
        {
            "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: <application-name>-<project>.<default-domain-suffix>",
            "displayName": "Custom http Route Hostname",
            "name": "HOSTNAME_HTTP",
            "required": false,
            "value": ""
        },
        {
            "description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>",
            "displayName": "Custom https Route Hostname",
            "name": "HOSTNAME_HTTPS",
            "required": false,
            "value": ""
        },
        {
            "description": "User name for JDG user.",
            "displayName": "Username",
            "name": "USERNAME",
            "required": false,
            "value": ""
        },
        {
            "description": "The password to access the JDG Caches. Must be different than username; must not be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)",
            "displayName": "Password",
            "name": "PASSWORD",
            "required": false,
            "value": ""
        },
        {
            "description": "Comma delimited list of roles/groups associated with the JDG user",
            "displayName": "JDG User Roles/Groups",
            "name": "ADMIN_GROUP",
            "required": false,
            "value": ""
        },
        {
            "description": "Enable Hotrod Authentication",
            "displayName": "Hotrod Authentication",
            "name": "HOTROD_AUTHENTICATION",
            "required": false,
            "value": ""
        },
        {
            "description": "Defines which role mapper to use for cache authentication",
            "displayName": "Container Security Role Mapper",
            "name": "CONTAINER_SECURITY_ROLE_MAPPER",
            "required": false,
            "value": ""
        },
        {
            "description": "Comma delimited list of role names and assigned permissions",
            "displayName": "Container Security Roles",
            "name": "CONTAINER_SECURITY_ROLES",
            "required": false,
            "value": ""
        },
        {
            "description": "The name of the secret containing the keystore file",
            "displayName": "Server Keystore Secret Name",
            "name": "HTTPS_SECRET",
            "required": true,
            "value": "datagrid-app-secret"
        },
        {
            "description": "The name of the keystore file within the secret",
            "displayName": "Server Keystore Filename",
            "name": "HTTPS_KEYSTORE",
            "required": false,
            "value": "keystore.jks"
        },
        {
            "description": "The name associated with the server certificate",
            "displayName": "Server Certificate Name",
            "name": "HTTPS_NAME",
            "required": false,
            "value": ""
        },
        {
            "description": "The password for the keystore and certificate",
            "displayName": "Server Keystore Password",
            "name": "HTTPS_PASSWORD",
            "required": false,
            "value": ""
        },
        {
            "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql",
            "displayName": "Database JNDI Name",
            "name": "DB_JNDI",
            "required": false,
            "value": "java:jboss/datasources/postgresql"
        },
        {
            "description": "Database name",
            "displayName": "Database Name",
            "name": "DB_DATABASE",
            "required": true,
            "value": "root"
        },
        {
            "description": "Database user name",
            "displayName": "Database Username",
            "from": "user[a-zA-Z0-9]{3}",
            "generate": "expression",
            "name": "DB_USERNAME",
            "required": true
        },
        {
            "description": "Database user password",
            "displayName": "Database Password",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "DB_PASSWORD",
            "required": true
        },
        {
            "description": "Sets xa-pool/min-pool-size for the configured datasource.",
            "displayName": "Datasource Minimum Pool Size",
            "name": "DB_MIN_POOL_SIZE",
            "required": false
        },
        {
            "description": "Sets xa-pool/max-pool-size for the configured datasource.",
            "displayName": "Datasource Maximum Pool Size",
            "name": "DB_MAX_POOL_SIZE",
            "required": false
        },
        {
            "description": "Sets transaction-isolation for the configured datasource.",
            "displayName": "Datasource Transaction Isolation",
            "name": "DB_TX_ISOLATION",
            "required": false
        },
        {
            "description": "The maximum number of client connections allowed. This also sets the maximum number of prepared transactions.",
            "displayName": "PostgreSQL Maximum number of connections",
            "name": "POSTGRESQL_MAX_CONNECTIONS",
            "required": false
        },
        {
            "description": "Configures how much memory is dedicated to PostgreSQL for caching data.",
            "displayName": "PostgreSQL Shared Buffers",
            "name": "POSTGRESQL_SHARED_BUFFERS",
            "required": false
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "displayName": "ImageStream Namespace",
            "name": "IMAGE_STREAM_NAMESPACE",
            "required": true,
            "value": "openshift"
        },
        {
            "description": "Comma-separated list of connector types that should be configured (defaults to 'memcached,hotrod,rest')",
            "displayName": "Infinispan Connectors",
            "name": "INFINISPAN_CONNECTORS",
            "required": false,
            "value": "hotrod,memcached,rest"
        },
        {
            "description": "Comma-separated list of caches to configure.  By default, a distributed-cache, with a mode of SYNC will be configurd for each entry.",
            "displayName": "Cache Names",
            "name": "CACHE_NAMES",
            "required": false,
            "value": ""
        },
        {
            "description": "Comma-separated list of caches to configure for use by Red Hat JBoss Data Virtualization for materialization of views.  Three caches will be created for each named cache: <name>, <name>_staging and <name>_alias.",
            "displayName": "Datavirt Cache Names",
            "name": "DATAVIRT_CACHE_NAMES",
            "required": false,
            "value": ""
        },
        {
            "description": "Default cache type for all caches. If empty then distributed will be the default",
            "displayName": "Default Cache Type",
            "name": "CACHE_TYPE_DEFAULT",
            "required": false,
            "value": ""
        },
        {
            "description": "",
            "displayName": "Encryption Requires SSL Client Authentication?",
            "name": "ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH",
            "required": false,
            "value": ""
        },
        {
            "description": "The name of the cache to expose through this memcached connector (defaults to 'default')",
            "displayName": "Memcached Cache Name",
            "name": "MEMCACHED_CACHE",
            "required": false,
            "value": "default"
        },
        {
            "description": "The domain, declared in the security subsystem, that should be used to authenticate access to the REST endpoint",
            "displayName": "REST Security Domain",
            "name": "REST_SECURITY_DOMAIN",
            "required": false,
            "value": ""
        },
        {
            "description": "The name of the secret containing the keystore file",
            "displayName": "JGroups Secret Name",
            "name": "JGROUPS_ENCRYPT_SECRET",
            "required": false,
            "value": "datagrid-app-secret"
        },
        {
            "description": "The name of the keystore file within the secret",
            "displayName": "JGroups Keystore Filename",
            "name": "JGROUPS_ENCRYPT_KEYSTORE",
            "required": false,
            "value": "jgroups.jceks"
        },
        {
            "description": "The name associated with the server certificate",
            "displayName": "JGroups Certificate Name",
            "name": "JGROUPS_ENCRYPT_NAME",
            "required": false,
            "value": ""
        },
        {
            "description": "The password for the keystore and certificate",
            "displayName": "JGroups Keystore Password",
            "name": "JGROUPS_ENCRYPT_PASSWORD",
            "required": false,
            "value": ""
        },
        {
            "description": "JGroups cluster password",
            "displayName": "JGroups Cluster Password",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "required": true
        },
        {
            "description": "The tag to use for the \"postgresql\" image stream.  Typically, this aligns with the major.minor version of PostgreSQL.",
            "displayName": "PostgreSQL Image Stream Tag",
            "name": "POSTGRESQL_IMAGE_STREAM_TAG",
            "required": true,
            "value": "9.5"
        },
        {
            "description": "Container memory limit",
            "name": "MEMORY_LIMIT",
            "required": false,
            "value": "1Gi"
        }
    ]
}