{
	"kind": "Template",
	"apiVersion": "template.openshift.io/v1",
	"metadata": {
		"name": "decisionserver64-amq-s2i",
		"creationTimestamp": null,
		"annotations": {
			"description": "An example BRMS decision server A-MQ application. For more information about using this template, see https://github.com/jboss-openshift/application-templates.",
			"iconClass": "icon-decisionserver",
			"openshift.io/display-name": "JBoss BRMS 6.4 decision server + A-MQ (with https)",
			"openshift.io/provider-display-name": "Red Hat, Inc.",
			"tags": "decisionserver,jboss",
			"template.openshift.io/bindable": "false",
			"template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en/red-hat-jboss-brms/",
			"template.openshift.io/long-description": "This template defines resources needed to develop Red Hat JBoss BRMS 6.4 decision server with A-MQ application, including a build configuration and application deployment configuration.",
			"template.openshift.io/support-url": "https://access.redhat.com",
			"version": "1.4.17"
		}
	},
	"message": "A new BRMS/A-MQ application with SSL support has been created in your project. The username/password for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the A-MQ service use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure to create the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving secure content.",
	"objects": [
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The web server's HTTP port.",
					"service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"ports": [
					{
						"port": 8080,
						"targetPort": 8080
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The web server's HTTPS port.",
					"service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "secure-${APPLICATION_NAME}"
			},
			"spec": {
				"ports": [
					{
						"port": 8443,
						"targetPort": 8443
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The broker's OpenWire port."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-amq-tcp"
			},
			"spec": {
				"ports": [
					{
						"port": 61616,
						"targetPort": 61616
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-amq"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "Supports node discovery for mesh formation.",
					"service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-amq-mesh"
			},
			"spec": {
				"clusterIP": "None",
				"ports": [
					{
						"name": "mesh",
						"port": 61616,
						"targetPort": 6166
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-amq"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for application's HTTP service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"host": "${HOSTNAME_HTTP}",
				"to": {
					"name": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for application's HTTPS service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "secure-${APPLICATION_NAME}"
			},
			"spec": {
				"host": "${HOSTNAME_HTTPS}",
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "secure-${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "ImageStream",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			}
		},
		{
			"apiVersion": "v1",
			"kind": "BuildConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"output": {
					"to": {
						"kind": "ImageStreamTag",
						"name": "${APPLICATION_NAME}:latest"
					}
				},
				"source": {
					"contextDir": "${CONTEXT_DIR}",
					"git": {
						"ref": "${SOURCE_REPOSITORY_REF}",
						"uri": "${SOURCE_REPOSITORY_URL}"
					},
					"type": "Git"
				},
				"strategy": {
					"sourceStrategy": {
						"env": [
							{
								"name": "KIE_CONTAINER_DEPLOYMENT",
								"value": "${KIE_CONTAINER_DEPLOYMENT}"
							},
							{
								"name": "MAVEN_MIRROR_URL",
								"value": "${MAVEN_MIRROR_URL}"
							},
							{
								"name": "ARTIFACT_DIR",
								"value": "${ARTIFACT_DIR}"
							}
						],
						"forcePull": true,
						"from": {
							"kind": "ImageStreamTag",
							"name": "jboss-decisionserver64-openshift:1.6",
							"namespace": "${IMAGE_STREAM_NAMESPACE}"
						}
					},
					"type": "Source"
				},
				"triggers": [
					{
						"github": {
							"secret": "${GITHUB_WEBHOOK_SECRET}"
						},
						"type": "GitHub"
					},
					{
						"generic": {
							"secret": "${GENERIC_WEBHOOK_SECRET}"
						},
						"type": "Generic"
					},
					{
						"imageChange": {},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"replicas": 1,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				},
				"strategy": {
					"type": "Recreate"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"deploymentConfig": "${APPLICATION_NAME}"
						},
						"name": "${APPLICATION_NAME}"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "KIE_CONTAINER_DEPLOYMENT",
										"value": "${KIE_CONTAINER_DEPLOYMENT}"
									},
									{
										"name": "KIE_SERVER_USER",
										"value": "${KIE_SERVER_USER}"
									},
									{
										"name": "KIE_SERVER_PASSWORD",
										"value": "${KIE_SERVER_PASSWORD}"
									},
									{
										"name": "KIE_SERVER_DOMAIN",
										"value": "${KIE_SERVER_DOMAIN}"
									},
									{
										"name": "KIE_SERVER_JMS_QUEUES_REQUEST",
										"value": "${KIE_SERVER_JMS_QUEUES_REQUEST}"
									},
									{
										"name": "KIE_SERVER_JMS_QUEUES_RESPONSE",
										"value": "${KIE_SERVER_JMS_QUEUES_RESPONSE}"
									},
									{
										"name": "MQ_SERVICE_PREFIX_MAPPING",
										"value": "${APPLICATION_NAME}-amq=MQ"
									},
									{
										"name": "MQ_JNDI",
										"value": "${MQ_JNDI}"
									},
									{
										"name": "MQ_USERNAME",
										"value": "${MQ_USERNAME}"
									},
									{
										"name": "MQ_PASSWORD",
										"value": "${MQ_PASSWORD}"
									},
									{
										"name": "MQ_PROTOCOL",
										"value": "tcp"
									},
									{
										"name": "MQ_QUEUES",
										"value": "${MQ_QUEUES}"
									},
									{
										"name": "MQ_TOPICS",
										"value": "${MQ_TOPICS}"
									},
									{
										"name": "HTTPS_KEYSTORE_DIR",
										"value": "/etc/decisionserver-secret-volume"
									},
									{
										"name": "HTTPS_KEYSTORE",
										"value": "${HTTPS_KEYSTORE}"
									},
									{
										"name": "HTTPS_NAME",
										"value": "${HTTPS_NAME}"
									},
									{
										"name": "HTTPS_PASSWORD",
										"value": "${HTTPS_PASSWORD}"
									}
								],
								"image": "${APPLICATION_NAME}",
								"imagePullPolicy": "Always",
								"livenessProbe": {
									"exec": {
										"command": [
											"/bin/bash",
											"-c",
											"/opt/eap/bin/livenessProbe.sh"
										]
									},
									"initialDelaySeconds": 60
								},
								"name": "${APPLICATION_NAME}",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8443,
										"name": "https",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"exec": {
										"command": [
											"/bin/bash",
											"-c",
											"/opt/eap/bin/readinessProbe.sh"
										]
									}
								},
								"resources": {
									"limits": {
										"memory": "${MEMORY_LIMIT}"
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/etc/decisionserver-secret-volume",
										"name": "decisionserver-keystore-volume",
										"readOnly": true
									}
								]
							}
						],
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "decisionserver-keystore-volume",
								"secret": {
									"secretName": "${HTTPS_SECRET}"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}"
							],
							"from": {
								"kind": "ImageStream",
								"name": "${APPLICATION_NAME}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-amq"
				},
				"name": "${APPLICATION_NAME}-amq"
			},
			"spec": {
				"replicas": 1,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-amq"
				},
				"strategy": {
					"type": "Recreate"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"deploymentConfig": "${APPLICATION_NAME}-amq"
						},
						"name": "${APPLICATION_NAME}-amq"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "AMQ_USER",
										"value": "${MQ_USERNAME}"
									},
									{
										"name": "AMQ_PASSWORD",
										"value": "${MQ_PASSWORD}"
									},
									{
										"name": "AMQ_TRANSPORTS",
										"value": "${MQ_PROTOCOL}"
									},
									{
										"name": "AMQ_MESH_DISCOVERY_TYPE",
										"value": "${AMQ_MESH_DISCOVERY_TYPE}"
									},
									{
										"name": "AMQ_MESH_SERVICE_NAME",
										"value": "${APPLICATION_NAME}-amq-mesh"
									},
									{
										"name": "AMQ_MESH_SERVICE_NAMESPACE",
										"valueFrom": {
											"fieldRef": {
												"fieldPath": "metadata.namespace"
											}
										}
									},
									{
										"name": "AMQ_STORAGE_USAGE_LIMIT",
										"value": "${AMQ_STORAGE_USAGE_LIMIT}"
									}
								],
								"image": "jboss-amq-63",
								"imagePullPolicy": "Always",
								"name": "${APPLICATION_NAME}-amq",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 5672,
										"name": "amqp",
										"protocol": "TCP"
									},
									{
										"containerPort": 5671,
										"name": "amqp-ssl",
										"protocol": "TCP"
									},
									{
										"containerPort": 1883,
										"name": "mqtt",
										"protocol": "TCP"
									},
									{
										"containerPort": 61613,
										"name": "stomp",
										"protocol": "TCP"
									},
									{
										"containerPort": 61612,
										"name": "stomp-ssl",
										"protocol": "TCP"
									},
									{
										"containerPort": 61616,
										"name": "tcp",
										"protocol": "TCP"
									},
									{
										"containerPort": 61617,
										"name": "tcp-ssl",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"exec": {
										"command": [
											"/bin/bash",
											"-c",
											"/opt/amq/bin/readinessProbe.sh"
										]
									}
								}
							}
						],
						"terminationGracePeriodSeconds": 60
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-amq"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "jboss-amq-63:1.4",
								"namespace": "${IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		}
	],
	"parameters": [
		{
			"name": "KIE_CONTAINER_DEPLOYMENT",
			"displayName": "KIE Container Deployment",
			"description": "The KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2",
			"value": "decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.4.0.Final"
		},
		{
			"name": "KIE_SERVER_USER",
			"displayName": "KIE Server Username",
			"description": "The user name to access the KIE Server REST or JMS interface.",
			"value": "kieserver"
		},
		{
			"name": "KIE_SERVER_PASSWORD",
			"displayName": "KIE Server Password",
			"description": "The password to access the KIE Server REST or JMS interface. Must be different than username; must not be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric symbol(s).",
			"generate": "expression",
			"from": "[a-zA-Z]{6}[0-9]{1}!"
		},
		{
			"name": "KIE_SERVER_DOMAIN",
			"displayName": "KIE Server Domain",
			"description": "JAAS LoginContext domain that shall be used to authenticate users when using JMS.",
			"value": "other"
		},
		{
			"name": "KIE_SERVER_JMS_QUEUES_REQUEST",
			"displayName": "KIE Server JMS Queues Request",
			"description": "JNDI name of request queue for JMS.",
			"value": "queue/KIE.SERVER.REQUEST"
		},
		{
			"name": "KIE_SERVER_JMS_QUEUES_RESPONSE",
			"displayName": "KIE Server JMS Queues Response",
			"description": "JNDI name of response queue for JMS.",
			"value": "queue/KIE.SERVER.RESPONSE"
		},
		{
			"name": "APPLICATION_NAME",
			"displayName": "Application Name",
			"description": "The name for the application.",
			"value": "kie-app",
			"required": true
		},
		{
			"name": "HOSTNAME_HTTP",
			"displayName": "Custom http Route Hostname",
			"description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "HOSTNAME_HTTPS",
			"displayName": "Custom https Route Hostname",
			"description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "SOURCE_REPOSITORY_URL",
			"displayName": "Git Repository URL",
			"description": "Git source URI for application",
			"value": "https://github.com/jboss-openshift/openshift-quickstarts.git",
			"required": true
		},
		{
			"name": "SOURCE_REPOSITORY_REF",
			"displayName": "Git Reference",
			"description": "Git branch/tag reference",
			"value": "1.4"
		},
		{
			"name": "CONTEXT_DIR",
			"displayName": "Context Directory",
			"description": "Path within Git project to build; empty for root project directory.",
			"value": "decisionserver/hellorules"
		},
		{
			"name": "MQ_JNDI",
			"displayName": "JMS Connection Factory JNDI Name",
			"description": "JNDI name for connection factory used by applications to connect to the broker, e.g. java:/JmsXA",
			"value": "java:/JmsXA"
		},
		{
			"name": "MQ_PROTOCOL",
			"displayName": "A-MQ Protocols",
			"description": "Broker protocols to configure, separated by commas. Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.",
			"value": "openwire"
		},
		{
			"name": "MQ_QUEUES",
			"displayName": "Queues",
			"description": "Queue names, separated by commas. These queues will be automatically created when the broker starts. Also, they will be made accessible as JNDI resources in EAP.",
			"value": "KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE"
		},
		{
			"name": "MQ_TOPICS",
			"displayName": "Topics",
			"description": "Topic names, separated by commas. These topics will be automatically created when the broker starts. Also, they will be made accessible as JNDI resources in EAP."
		},
		{
			"name": "HTTPS_SECRET",
			"displayName": "Server Keystore Secret Name",
			"description": "The name of the secret containing the keystore file",
			"value": "decisionserver-app-secret"
		},
		{
			"name": "HTTPS_KEYSTORE",
			"displayName": "Server Keystore Filename",
			"description": "The name of the keystore file within the secret",
			"value": "keystore.jks"
		},
		{
			"name": "HTTPS_NAME",
			"displayName": "Server Certificate Name",
			"description": "The name associated with the server certificate",
			"value": "jboss"
		},
		{
			"name": "HTTPS_PASSWORD",
			"displayName": "Server Keystore Password",
			"description": "The password for the keystore and certificate",
			"value": "mykeystorepass"
		},
		{
			"name": "MQ_USERNAME",
			"displayName": "A-MQ Username",
			"description": "User name for standard broker user. It is required for connecting to the broker. If left empty, it will be generated.",
			"generate": "expression",
			"from": "user[a-zA-Z0-9]{3}"
		},
		{
			"name": "MQ_PASSWORD",
			"displayName": "A-MQ Password",
			"description": "Password for standard broker user. It is required for connecting to the broker. If left empty, it will be generated.",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}"
		},
		{
			"name": "AMQ_MESH_DISCOVERY_TYPE",
			"displayName": "A-MQ Mesh Discovery Type",
			"description": "The discovery agent type to use for discovering mesh endpoints.  'dns' will use OpenShift's DNS service to resolve endpoints.  'kube' will use Kubernetes REST API to resolve service endpoints.  If using 'kube' the service account for the pod must have the 'view' role, which can be added via 'oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default' where \u003cnamespace\u003e is the project namespace.",
			"value": "dns"
		},
		{
			"name": "AMQ_STORAGE_USAGE_LIMIT",
			"displayName": "A-MQ Storage Limit",
			"description": "The A-MQ storage usage limit",
			"value": "100 gb"
		},
		{
			"name": "GITHUB_WEBHOOK_SECRET",
			"displayName": "Github Webhook Secret",
			"description": "GitHub trigger secret",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "GENERIC_WEBHOOK_SECRET",
			"displayName": "Generic Webhook Secret",
			"description": "Generic build trigger secret",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_NAMESPACE",
			"displayName": "ImageStream Namespace",
			"description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
			"value": "openshift",
			"required": true
		},
		{
			"name": "MAVEN_MIRROR_URL",
			"displayName": "Maven mirror URL",
			"description": "Maven mirror to use for S2I builds"
		},
		{
			"name": "ARTIFACT_DIR",
			"displayName": "List of directories from which archives will be copied into the deployment folder.",
			"description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied."
		},
		{
			"name": "MEMORY_LIMIT",
			"displayName": "Container memory limit",
			"description": "Container memory limit",
			"value": "1Gi"
		}
	],
	"labels": {
		"template": "decisionserver64-amq-s2i",
		"xpaas": "1.4.17"
	}
}
