{
	"kind": "Template",
	"apiVersion": "v1",
	"metadata": {
		"name": "rhpam713-prod",
		"creationTimestamp": null,
		"annotations": {
			"description": "Application template for a managed HA production runtime environment, for Red Hat Process Automation Manager 7.13 - Deprecated",
			"iconClass": "icon-jboss",
			"openshift.io/display-name": "Red Hat Process Automation Manager 7.13 production environment",
			"openshift.io/provider-display-name": "Red Hat, Inc.",
			"tags": "rhpam,processserver,jboss,prod",
			"template.openshift.io/bindable": "false",
			"template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.13/html/deploying_a_red_hat_process_automation_manager_7.13_authoring_environment_on_red_hat_openshift_container_platform/",
			"template.openshift.io/long-description": "This template defines resources needed for a HA production runtime environment for Red Hat Process Automation Manager 7.13, including application deployment configuration, secure and insecure http communication and persistent volume to store data that needs to survive a restart. Template for Red Hat OpenShift Container Platform version 3.11. Deprecated since Red Hat Process Automation Manager version 7.5; consider using the Red Hat Business Automation Operator.",
			"template.openshift.io/support-url": "https://access.redhat.com",
			"version": "7.13"
		}
	},
	"message": "A new environment has been set up for Red Hat Process Automation Manager 7.\nThe username/password needed for accessing the application are stored in \"${CREDENTIALS_SECRET}\" secret as\nKIE_ADMIN_USER and KIE_ADMIN_PWD\n\nYou must create the secret named \"${CREDENTIALS_SECRET}\" containing the KIE_ADMIN_USER and KIE_ADMIN_PWD values and the secrets named \"${BUSINESS_CENTRAL_HTTPS_SECRET}\", \"${KIE_SERVER_HTTPS_SECRET}\" and\n\"${KIE_SERVER_ROUTER_HTTPS_SECRET}\" containing the ${BUSINESS_CENTRAL_HTTPS_KEYSTORE}, ${KIE_SERVER_HTTPS_KEYSTORE} and\n${KIE_SERVER_ROUTER_HTTPS_KEYSTORE} files used for serving secure content.",
	"objects": [
		{
			"apiVersion": "v1",
			"kind": "ServiceAccount",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			}
		},
		{
			"apiVersion": "v1",
			"kind": "RoleBinding",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-kieserver-view"
			},
			"roleRef": {
				"name": "view"
			},
			"subjects": [
				{
					"kind": "ServiceAccount",
					"name": "${APPLICATION_NAME}-kieserver"
				}
			]
		},
		{
			"apiVersion": "v1",
			"kind": "ServiceAccount",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-smartrouter"
			}
		},
		{
			"apiVersion": "v1",
			"kind": "RoleBinding",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-smartrouter-view"
			},
			"roleRef": {
				"name": "view"
			},
			"subjects": [
				{
					"kind": "ServiceAccount",
					"name": "${APPLICATION_NAME}-smartrouter"
				}
			]
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "All the Business Central Monitoring web server's ports."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-rhpamcentrmon"
				},
				"name": "${APPLICATION_NAME}-rhpamcentrmon"
			},
			"spec": {
				"ports": [
					{
						"name": "http",
						"port": 8080,
						"targetPort": 8080
					},
					{
						"name": "https",
						"port": 8443,
						"targetPort": 8443
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-rhpamcentrmon"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The smart router server http and https ports."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-smartrouter"
				},
				"name": "${APPLICATION_NAME}-smartrouter"
			},
			"spec": {
				"ports": [
					{
						"name": "http",
						"port": 9000,
						"targetPort": 9000
					},
					{
						"name": "https",
						"port": 9443,
						"targetPort": 9443
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-smartrouter"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "All the KIE Server web server's ports. (First KIE Server)"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver-1"
				},
				"name": "${APPLICATION_NAME}-kieserver-1"
			},
			"spec": {
				"ports": [
					{
						"name": "http",
						"port": 8080,
						"targetPort": 8080
					},
					{
						"name": "https",
						"port": 8443,
						"targetPort": 8443
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver-1"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "All the KIE Server web server's ports. (Second KIE Server)"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver-2"
				},
				"name": "${APPLICATION_NAME}-kieserver-2"
			},
			"spec": {
				"ports": [
					{
						"name": "http",
						"port": 8080,
						"targetPort": 8080
					},
					{
						"name": "https",
						"port": 8443,
						"targetPort": 8443
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver-2"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The first database server's port."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-postgresql-1"
				},
				"name": "${APPLICATION_NAME}-postgresql-1"
			},
			"spec": {
				"ports": [
					{
						"port": 5432,
						"targetPort": 5432
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-postgresql-1"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The second database server's port."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-postgresql-2"
				},
				"name": "${APPLICATION_NAME}-postgresql-2"
			},
			"spec": {
				"ports": [
					{
						"port": 5432,
						"targetPort": 5432
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-postgresql-2"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-rhpamcentrmon-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for Business Central Monitoring's http service.",
					"haproxy.router.openshift.io/timeout": "1h"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-rhpamcentrmon"
				},
				"name": "${APPLICATION_NAME}-rhpamcentrmon"
			},
			"spec": {
				"host": "${BUSINESS_CENTRAL_HOSTNAME_HTTP}",
				"port": {
					"targetPort": "http"
				},
				"to": {
					"name": "${APPLICATION_NAME}-rhpamcentrmon"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-rhpamcentrmon-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for Business Central Monitoring's https service.",
					"haproxy.router.openshift.io/timeout": "1h"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-rhpamcentrmon"
				},
				"name": "secure-${APPLICATION_NAME}-rhpamcentrmon"
			},
			"spec": {
				"host": "${BUSINESS_CENTRAL_HOSTNAME_HTTPS}",
				"port": {
					"targetPort": "https"
				},
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "${APPLICATION_NAME}-rhpamcentrmon"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-kieserver-1-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for First KIE Server's http service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver-1"
				},
				"name": "${APPLICATION_NAME}-kieserver-1"
			},
			"spec": {
				"host": "${KIE_SERVER1_HOSTNAME_HTTP}",
				"port": {
					"targetPort": "http"
				},
				"to": {
					"name": "${APPLICATION_NAME}-kieserver-1"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-kieserver-1-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for First KIE Server's https service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver-1"
				},
				"name": "secure-${APPLICATION_NAME}-kieserver-1"
			},
			"spec": {
				"host": "${KIE_SERVER1_HOSTNAME_HTTPS}",
				"port": {
					"targetPort": "https"
				},
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "${APPLICATION_NAME}-kieserver-1"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-kieserver-2-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for Second KIE Server's http service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver-2"
				},
				"name": "${APPLICATION_NAME}-kieserver-2"
			},
			"spec": {
				"host": "${KIE_SERVER2_HOSTNAME_HTTP}",
				"port": {
					"targetPort": "http"
				},
				"to": {
					"name": "${APPLICATION_NAME}-kieserver-2"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-kieserver-2-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for Second KIE Server's https service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver-2"
				},
				"name": "secure-${APPLICATION_NAME}-kieserver-2"
			},
			"spec": {
				"host": "${KIE_SERVER2_HOSTNAME_HTTPS}",
				"port": {
					"targetPort": "https"
				},
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "${APPLICATION_NAME}-kieserver-2"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-smartrouter-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for Smart Router's http service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-smartrouter"
				},
				"name": "${APPLICATION_NAME}-smartrouter"
			},
			"spec": {
				"host": "${SMART_ROUTER_HOSTNAME_HTTP}",
				"port": {
					"targetPort": "http"
				},
				"to": {
					"name": "${APPLICATION_NAME}-smartrouter"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-smartrouter-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for Smart Router's https service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-smartrouter"
				},
				"name": "secure-${APPLICATION_NAME}-smartrouter"
			},
			"spec": {
				"host": "${SMART_ROUTER_HOSTNAME_HTTPS}",
				"port": {
					"targetPort": "https"
				},
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "${APPLICATION_NAME}-smartrouter"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-rhpamcentrmon"
				},
				"name": "${APPLICATION_NAME}-rhpamcentrmon"
			},
			"spec": {
				"replicas": "${{BUSINESS_CENTRAL_MONITORING_CONTAINER_REPLICAS}}",
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-rhpamcentrmon"
				},
				"strategy": {
					"rollingParams": {
						"maxSurge": "100%",
						"maxUnavailable": 0
					},
					"type": "Rolling"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"cluster": "jgrp.k8s.${APPLICATION_NAME}.rhpamcentrmon",
							"deploymentConfig": "${APPLICATION_NAME}-rhpamcentrmon",
							"service": "${APPLICATION_NAME}-rhpamcentrmon"
						},
						"name": "${APPLICATION_NAME}-rhpamcentrmon"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "APPLICATION_USERS_PROPERTIES",
										"value": "/opt/kie/data/configuration/application-users.properties"
									},
									{
										"name": "APPLICATION_ROLES_PROPERTIES",
										"value": "/opt/kie/data/configuration/application-roles.properties"
									},
									{
										"name": "KIE_ADMIN_USER",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_ADMIN_PWD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "MAVEN_MIRROR_URL",
										"value": "${MAVEN_MIRROR_URL}"
									},
									{
										"name": "MAVEN_REPO_ID",
										"value": "${MAVEN_REPO_ID}"
									},
									{
										"name": "MAVEN_REPO_URL",
										"value": "${MAVEN_REPO_URL}"
									},
									{
										"name": "MAVEN_REPO_USERNAME",
										"value": "${MAVEN_REPO_USERNAME}"
									},
									{
										"name": "MAVEN_REPO_PASSWORD",
										"value": "${MAVEN_REPO_PASSWORD}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_TOKEN",
										"value": "${KIE_SERVER_CONTROLLER_TOKEN}"
									},
									{
										"name": "HTTPS_KEYSTORE_DIR",
										"value": "/etc/businesscentral-secret-volume"
									},
									{
										"name": "HTTPS_KEYSTORE",
										"value": "${BUSINESS_CENTRAL_HTTPS_KEYSTORE}"
									},
									{
										"name": "HTTPS_NAME",
										"value": "${BUSINESS_CENTRAL_HTTPS_NAME}"
									},
									{
										"name": "HTTPS_PASSWORD",
										"value": "${BUSINESS_CENTRAL_HTTPS_PASSWORD}"
									},
									{
										"name": "JGROUPS_PING_PROTOCOL",
										"value": "kubernetes.KUBE_PING"
									},
									{
										"name": "KUBERNETES_NAMESPACE",
										"valueFrom": {
											"fieldRef": {
												"fieldPath": "metadata.namespace"
											}
										}
									},
									{
										"name": "KUBERNETES_LABELS",
										"value": "cluster=jgrp.k8s.${APPLICATION_NAME}.rhpamcentrmon"
									},
									{
										"name": "SSO_URL",
										"value": "${SSO_URL}"
									},
									{
										"name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
										"value": "ROOT.war"
									},
									{
										"name": "SSO_REALM",
										"value": "${SSO_REALM}"
									},
									{
										"name": "SSO_SECRET",
										"value": "${BUSINESS_CENTRAL_SSO_SECRET}"
									},
									{
										"name": "SSO_CLIENT",
										"value": "${BUSINESS_CENTRAL_SSO_CLIENT}"
									},
									{
										"name": "SSO_USERNAME",
										"value": "${SSO_USERNAME}"
									},
									{
										"name": "SSO_PASSWORD",
										"value": "${SSO_PASSWORD}"
									},
									{
										"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
										"value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"
									},
									{
										"name": "SSO_PRINCIPAL_ATTRIBUTE",
										"value": "${SSO_PRINCIPAL_ATTRIBUTE}"
									},
									{
										"name": "HOSTNAME_HTTP",
										"value": "${BUSINESS_CENTRAL_HOSTNAME_HTTP}"
									},
									{
										"name": "HOSTNAME_HTTPS",
										"value": "${BUSINESS_CENTRAL_HOSTNAME_HTTPS}"
									},
									{
										"name": "AUTH_LDAP_URL",
										"value": "${AUTH_LDAP_URL}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_MODULE",
										"value": "${AUTH_LDAP_LOGIN_MODULE}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_FAILOVER",
										"value": "${AUTH_LDAP_LOGIN_FAILOVER}"
									},
									{
										"name": "AUTH_LDAP_BIND_DN",
										"value": "${AUTH_LDAP_BIND_DN}"
									},
									{
										"name": "AUTH_LDAP_BIND_CREDENTIAL",
										"value": "${AUTH_LDAP_BIND_CREDENTIAL}"
									},
									{
										"name": "AUTH_LDAP_ALLOW_EMPTY_PASSWORDS",
										"value": "${AUTH_LDAP_ALLOW_EMPTY_PASSWORDS}"
									},
									{
										"name": "AUTH_LDAP_BASE_CTX_DN",
										"value": "${AUTH_LDAP_BASE_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_BASE_FILTER",
										"value": "${AUTH_LDAP_BASE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_RECURSIVE_SEARCH",
										"value": "${AUTH_LDAP_RECURSIVE_SEARCH}"
									},
									{
										"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
										"value": "${AUTH_LDAP_SEARCH_TIME_LIMIT}"
									},
									{
										"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
										"value": "${AUTH_LDAP_ROLE_ATTRIBUTE_ID}"
									},
									{
										"name": "AUTH_LDAP_ROLES_CTX_DN",
										"value": "${AUTH_LDAP_ROLES_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_ROLE_FILTER",
										"value": "${AUTH_LDAP_ROLE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_ROLE_RECURSION",
										"value": "${AUTH_LDAP_ROLE_RECURSION}"
									},
									{
										"name": "AUTH_LDAP_DEFAULT_ROLE",
										"value": "${AUTH_LDAP_DEFAULT_ROLE}"
									},
									{
										"name": "AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES",
										"value": "${AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES}"
									},
									{
										"name": "AUTH_LDAP_REFERRAL_MODE",
										"value": "${AUTH_LDAP_REFERRAL_MODE}"
									},
									{
										"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
										"value": "${AUTH_ROLE_MAPPER_ROLES_PROPERTIES}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_MAPPED}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_NON_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_NON_MAPPED}"
									}
								],
								"image": "rhpam-businesscentral-monitoring-rhel8",
								"imagePullPolicy": "Always",
								"livenessProbe": {
									"failureThreshold": 36,
									"httpGet": {
										"path": "/rest/healthy",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 180,
									"periodSeconds": 15,
									"timeoutSeconds": 2
								},
								"name": "${APPLICATION_NAME}-rhpamcentrmon",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8443,
										"name": "https",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"failureThreshold": 36,
									"httpGet": {
										"path": "/rest/ready",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 60,
									"periodSeconds": 5,
									"timeoutSeconds": 2
								},
								"resources": {
									"limits": {
										"cpu": "${BUSINESS_CENTRAL_CPU_LIMIT}",
										"memory": "${BUSINESS_CENTRAL_MEMORY_LIMIT}"
									},
									"requests": {
										"cpu": "${BUSINESS_CENTRAL_CPU_REQUEST}",
										"memory": "${BUSINESS_CENTRAL_MEMORY_REQUEST}"
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/etc/businesscentral-secret-volume",
										"name": "businesscentral-keystore-volume",
										"readOnly": true
									},
									{
										"mountPath": "/opt/kie/data",
										"name": "${APPLICATION_NAME}-rhpamcentr-pvol"
									}
								]
							}
						],
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "businesscentral-keystore-volume",
								"secret": {
									"secretName": "${BUSINESS_CENTRAL_HTTPS_SECRET}"
								}
							},
							{
								"name": "${APPLICATION_NAME}-rhpamcentr-pvol",
								"persistentVolumeClaim": {
									"claimName": "${APPLICATION_NAME}-rhpamcentr-claim"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-rhpamcentrmon"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "rhpam-businesscentral-monitoring-rhel8:${IMAGE_STREAM_TAG}",
								"namespace": "${IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-smartrouter"
				},
				"name": "${APPLICATION_NAME}-smartrouter"
			},
			"spec": {
				"replicas": "${{SMART_ROUTER_CONTAINER_REPLICAS}}",
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-smartrouter"
				},
				"strategy": {
					"rollingParams": {
						"maxSurge": "100%",
						"maxUnavailable": 0
					},
					"type": "Rolling"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"cluster": "jgrp.k8s.${APPLICATION_NAME}.kieserver",
							"deploymentConfig": "${APPLICATION_NAME}-smartrouter",
							"service": "${APPLICATION_NAME}-smartrouter"
						},
						"name": "${APPLICATION_NAME}-smartrouter"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "KIE_ADMIN_USER",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_ADMIN_PWD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_SERVER_ROUTER_HOST",
										"valueFrom": {
											"fieldRef": {
												"fieldPath": "status.podIP"
											}
										}
									},
									{
										"name": "KIE_SERVER_ROUTER_PORT",
										"value": "9000"
									},
									{
										"name": "KIE_SERVER_ROUTER_PORT_TLS",
										"value": "9443"
									},
									{
										"name": "KIE_SERVER_ROUTER_URL_EXTERNAL",
										"value": "${KIE_SERVER_ROUTER_URL_EXTERNAL}"
									},
									{
										"name": "KIE_SERVER_ROUTER_ID",
										"value": "${KIE_SERVER_ROUTER_ID}"
									},
									{
										"name": "KIE_SERVER_ROUTER_NAME",
										"value": "${KIE_SERVER_ROUTER_NAME}"
									},
									{
										"name": "KIE_SERVER_ROUTER_ROUTE_NAME",
										"value": "${APPLICATION_NAME}-smartrouter"
									},
									{
										"name": "KIE_SERVER_ROUTER_SERVICE",
										"value": "${APPLICATION_NAME}-smartrouter"
									},
									{
										"name": "KIE_SERVER_ROUTER_PROTOCOL",
										"value": "${KIE_SERVER_ROUTER_PROTOCOL}"
									},
									{
										"name": "KIE_SERVER_ROUTER_TLS_KEYSTORE_KEYALIAS",
										"value": "${KIE_SERVER_ROUTER_HTTPS_NAME}"
									},
									{
										"name": "KIE_SERVER_ROUTER_TLS_KEYSTORE_PASSWORD",
										"value": "${KIE_SERVER_ROUTER_HTTPS_PASSWORD}"
									},
									{
										"name": "KIE_SERVER_ROUTER_TLS_KEYSTORE",
										"value": "/etc/smartrouter-secret-volume/${KIE_SERVER_ROUTER_HTTPS_KEYSTORE}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_TOKEN",
										"value": "${KIE_SERVER_CONTROLLER_TOKEN}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_SERVICE",
										"value": "${APPLICATION_NAME}-rhpamcentrmon"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_PROTOCOL",
										"value": "http"
									},
									{
										"name": "KIE_SERVER_ROUTER_REPO",
										"value": "/opt/rhpam-smartrouter/data"
									},
									{
										"name": "KIE_SERVER_ROUTER_CONFIG_WATCHER_ENABLED",
										"value": "true"
									}
								],
								"image": "rhpam-smartrouter-rhel8",
								"imagePullPolicy": "Always",
								"name": "${APPLICATION_NAME}-smartrouter",
								"ports": [
									{
										"containerPort": 9000,
										"name": "http",
										"protocol": "TCP"
									}
								],
								"resources": {
									"limits": {
										"memory": "${SMART_ROUTER_MEMORY_LIMIT}"
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/opt/rhpam-smartrouter/data",
										"name": "${APPLICATION_NAME}-smartrouter"
									},
									{
										"mountPath": "/etc/smartrouter-secret-volume",
										"name": "smartrouter-keystore-volume",
										"readOnly": true
									}
								]
							}
						],
						"serviceAccountName": "${APPLICATION_NAME}-smartrouter",
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "${APPLICATION_NAME}-smartrouter",
								"persistentVolumeClaim": {
									"claimName": "${APPLICATION_NAME}-smartrouter-claim"
								}
							},
							{
								"name": "smartrouter-keystore-volume",
								"secret": {
									"secretName": "${KIE_SERVER_ROUTER_HTTPS_SECRET}"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-smartrouter"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "rhpam-smartrouter-rhel8:${IMAGE_STREAM_TAG}",
								"namespace": "${IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver-1"
				},
				"name": "${APPLICATION_NAME}-kieserver-1"
			},
			"spec": {
				"replicas": "${{KIE_SERVER_CONTAINER_REPLICAS}}",
				"revisionHistoryLimit": 10,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver-1"
				},
				"strategy": {
					"rollingParams": {
						"maxSurge": "100%",
						"maxUnavailable": 0
					},
					"type": "Rolling"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"cluster": "jgrp.k8s.${APPLICATION_NAME}.kieserver",
							"deploymentConfig": "${APPLICATION_NAME}-kieserver-1",
							"service": "${APPLICATION_NAME}-kieserver-1"
						},
						"name": "${APPLICATION_NAME}-kieserver-1"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "KIE_ADMIN_USER",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_ADMIN_PWD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_SERVER_MODE",
										"value": "${KIE_SERVER_MODE}"
									},
									{
										"name": "KIE_MBEANS",
										"value": "${KIE_MBEANS}"
									},
									{
										"name": "DROOLS_SERVER_FILTER_CLASSES",
										"value": "${DROOLS_SERVER_FILTER_CLASSES}"
									},
									{
										"name": "PROMETHEUS_SERVER_EXT_DISABLED",
										"value": "${PROMETHEUS_SERVER_EXT_DISABLED}"
									},
									{
										"name": "KIE_SERVER_BYPASS_AUTH_USER",
										"value": "${KIE_SERVER_BYPASS_AUTH_USER}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_TOKEN",
										"value": "${KIE_SERVER_CONTROLLER_TOKEN}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_SERVICE",
										"value": "${APPLICATION_NAME}-rhpamcentrmon"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_PROTOCOL",
										"value": "ws"
									},
									{
										"name": "KIE_SERVER_ID",
										"value": "${APPLICATION_NAME}-kieserver-1"
									},
									{
										"name": "KIE_SERVER_ROUTE_NAME",
										"value": "${APPLICATION_NAME}-kieserver-1"
									},
									{
										"name": "KIE_SERVER_USE_SECURE_ROUTE_NAME",
										"value": "${KIE_SERVER1_USE_SECURE_ROUTE_NAME}"
									},
									{
										"name": "KIE_SERVER_CONTAINER_DEPLOYMENT",
										"value": ""
									},
									{
										"name": "MAVEN_MIRROR_URL",
										"value": "${MAVEN_MIRROR_URL}"
									},
									{
										"name": "MAVEN_MIRROR_OF",
										"value": "${MAVEN_MIRROR_OF}"
									},
									{
										"name": "MAVEN_REPOS",
										"value": "RHPAMCENTR,EXTERNAL"
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_ID",
										"value": "repo-rhpamcentr"
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_SERVICE",
										"value": "${BUSINESS_CENTRAL_MAVEN_SERVICE}"
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_PATH",
										"value": "/maven2/"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_ID",
										"value": "${MAVEN_REPO_ID}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_URL",
										"value": "${MAVEN_REPO_URL}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_USERNAME",
										"value": "${MAVEN_REPO_USERNAME}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_PASSWORD",
										"value": "${MAVEN_REPO_PASSWORD}"
									},
									{
										"name": "KIE_SERVER_ROUTER_SERVICE",
										"value": "${APPLICATION_NAME}-smartrouter"
									},
									{
										"name": "KIE_SERVER_ROUTER_PORT",
										"value": "9000"
									},
									{
										"name": "KIE_SERVER_ROUTER_PROTOCOL",
										"value": "${KIE_SERVER_ROUTER_PROTOCOL}"
									},
									{
										"name": "KIE_SERVER_PERSISTENCE_DS",
										"value": "${KIE_SERVER_PERSISTENCE_DS}"
									},
									{
										"name": "DATASOURCES",
										"value": "RHPAM"
									},
									{
										"name": "RHPAM_JNDI",
										"value": "${KIE_SERVER_PERSISTENCE_DS}"
									},
									{
										"name": "RHPAM_JTA",
										"value": "true"
									},
									{
										"name": "RHPAM_DATABASE",
										"value": "${KIE_SERVER_POSTGRESQL_DB}"
									},
									{
										"name": "RHPAM_DRIVER",
										"value": "postgresql"
									},
									{
										"name": "KIE_SERVER_PERSISTENCE_DIALECT",
										"value": "${KIE_SERVER_POSTGRESQL_DIALECT}"
									},
									{
										"name": "RHPAM_USERNAME",
										"value": "${KIE_SERVER_POSTGRESQL_USER}"
									},
									{
										"name": "RHPAM_PASSWORD",
										"value": "${KIE_SERVER_POSTGRESQL_PWD}"
									},
									{
										"name": "RHPAM_SERVICE_HOST",
										"value": "${APPLICATION_NAME}-postgresql-1"
									},
									{
										"name": "RHPAM_SERVICE_PORT",
										"value": "5432"
									},
									{
										"name": "TIMER_SERVICE_DATA_STORE",
										"value": "${APPLICATION_NAME}-postgresql-1"
									},
									{
										"name": "TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL",
										"value": "${TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL}"
									},
									{
										"name": "HTTPS_KEYSTORE_DIR",
										"value": "/etc/kieserver-secret-volume"
									},
									{
										"name": "HTTPS_KEYSTORE",
										"value": "${KIE_SERVER_HTTPS_KEYSTORE}"
									},
									{
										"name": "HTTPS_NAME",
										"value": "${KIE_SERVER_HTTPS_NAME}"
									},
									{
										"name": "HTTPS_PASSWORD",
										"value": "${KIE_SERVER_HTTPS_PASSWORD}"
									},
									{
										"name": "JGROUPS_PING_PROTOCOL",
										"value": "kubernetes.KUBE_PING"
									},
									{
										"name": "KUBERNETES_NAMESPACE",
										"valueFrom": {
											"fieldRef": {
												"fieldPath": "metadata.namespace"
											}
										}
									},
									{
										"name": "KUBERNETES_LABELS",
										"value": "cluster=jgrp.k8s.${APPLICATION_NAME}.kieserver"
									},
									{
										"name": "SSO_URL",
										"value": "${SSO_URL}"
									},
									{
										"name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
										"value": "ROOT.war"
									},
									{
										"name": "SSO_REALM",
										"value": "${SSO_REALM}"
									},
									{
										"name": "SSO_SECRET",
										"value": "${KIE_SERVER1_SSO_SECRET}"
									},
									{
										"name": "SSO_CLIENT",
										"value": "${KIE_SERVER1_SSO_CLIENT}"
									},
									{
										"name": "SSO_USERNAME",
										"value": "${SSO_USERNAME}"
									},
									{
										"name": "SSO_PASSWORD",
										"value": "${SSO_PASSWORD}"
									},
									{
										"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
										"value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"
									},
									{
										"name": "SSO_PRINCIPAL_ATTRIBUTE",
										"value": "${SSO_PRINCIPAL_ATTRIBUTE}"
									},
									{
										"name": "HOSTNAME_HTTP",
										"value": "${KIE_SERVER1_HOSTNAME_HTTP}"
									},
									{
										"name": "HOSTNAME_HTTPS",
										"value": "${KIE_SERVER1_HOSTNAME_HTTPS}"
									},
									{
										"name": "AUTH_LDAP_URL",
										"value": "${AUTH_LDAP_URL}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_MODULE",
										"value": "${AUTH_LDAP_LOGIN_MODULE}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_FAILOVER",
										"value": "${AUTH_LDAP_LOGIN_FAILOVER}"
									},
									{
										"name": "AUTH_LDAP_BIND_DN",
										"value": "${AUTH_LDAP_BIND_DN}"
									},
									{
										"name": "AUTH_LDAP_BIND_CREDENTIAL",
										"value": "${AUTH_LDAP_BIND_CREDENTIAL}"
									},
									{
										"name": "AUTH_LDAP_ALLOW_EMPTY_PASSWORDS",
										"value": "${AUTH_LDAP_ALLOW_EMPTY_PASSWORDS}"
									},
									{
										"name": "AUTH_LDAP_BASE_CTX_DN",
										"value": "${AUTH_LDAP_BASE_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_BASE_FILTER",
										"value": "${AUTH_LDAP_BASE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_RECURSIVE_SEARCH",
										"value": "${AUTH_LDAP_RECURSIVE_SEARCH}"
									},
									{
										"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
										"value": "${AUTH_LDAP_SEARCH_TIME_LIMIT}"
									},
									{
										"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
										"value": "${AUTH_LDAP_ROLE_ATTRIBUTE_ID}"
									},
									{
										"name": "AUTH_LDAP_ROLES_CTX_DN",
										"value": "${AUTH_LDAP_ROLES_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_ROLE_FILTER",
										"value": "${AUTH_LDAP_ROLE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_ROLE_RECURSION",
										"value": "${AUTH_LDAP_ROLE_RECURSION}"
									},
									{
										"name": "AUTH_LDAP_DEFAULT_ROLE",
										"value": "${AUTH_LDAP_DEFAULT_ROLE}"
									},
									{
										"name": "AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES",
										"value": "${AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES}"
									},
									{
										"name": "AUTH_LDAP_REFERRAL_MODE",
										"value": "${AUTH_LDAP_REFERRAL_MODE}"
									},
									{
										"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
										"value": "${AUTH_ROLE_MAPPER_ROLES_PROPERTIES}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_MAPPED}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_NON_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_NON_MAPPED}"
									}
								],
								"image": "${KIE_SERVER_IMAGE_STREAM_NAME}",
								"imagePullPolicy": "Always",
								"livenessProbe": {
									"failureThreshold": 3,
									"httpGet": {
										"path": "/services/rest/server/healthcheck",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 180,
									"periodSeconds": 15,
									"timeoutSeconds": 2
								},
								"name": "${APPLICATION_NAME}-kieserver-1",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8443,
										"name": "https",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"failureThreshold": 36,
									"httpGet": {
										"path": "/services/rest/server/readycheck",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 30,
									"periodSeconds": 5,
									"timeoutSeconds": 2
								},
								"resources": {
									"limits": {
										"cpu": "${KIE_SERVER_CPU_LIMIT}",
										"memory": "${KIE_SERVER_MEMORY_LIMIT}"
									},
									"requests": {
										"cpu": "${KIE_SERVER_CPU_REQUEST}",
										"memory": "${KIE_SERVER_MEMORY_REQUEST}"
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/etc/kieserver-secret-volume",
										"name": "kieserver-keystore-volume",
										"readOnly": true
									}
								]
							}
						],
						"initContainers": [
							{
								"command": [
									"/bin/bash",
									"-c",
									"replicas=$(oc get dc ${APPLICATION_NAME}-postgresql-1 -o=jsonpath='{.status.availableReplicas}'); until \"[\" $replicas -gt 0 \"]\"; do echo waiting for ${APPLICATION_NAME}-postgresql-1; replicas=$(oc get dc ${APPLICATION_NAME}-postgresql-1 -o=jsonpath='{.status.availableReplicas}'); sleep 2; done;"
								],
								"image": "registry.redhat.io/openshift3/ose-cli",
								"imagePullPolicy": "IfNotPresent",
								"name": "${APPLICATION_NAME}-postgresql-init-1",
								"terminationMessagePolicy": "FallbackToLogsOnError"
							}
						],
						"serviceAccountName": "${APPLICATION_NAME}-kieserver",
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "kieserver-keystore-volume",
								"secret": {
									"secretName": "${KIE_SERVER_HTTPS_SECRET}"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-kieserver-1"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${KIE_SERVER_IMAGE_STREAM_NAME}:${IMAGE_STREAM_TAG}",
								"namespace": "${IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-postgresql-1"
				},
				"name": "${APPLICATION_NAME}-postgresql-1"
			},
			"spec": {
				"replicas": 1,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-postgresql-1"
				},
				"strategy": {
					"type": "Recreate"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"deploymentConfig": "${APPLICATION_NAME}-postgresql-1",
							"service": "${APPLICATION_NAME}-postgresql-1"
						},
						"name": "${APPLICATION_NAME}-postgresql-1"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "POSTGRESQL_USER",
										"value": "${KIE_SERVER_POSTGRESQL_USER}"
									},
									{
										"name": "POSTGRESQL_PASSWORD",
										"value": "${KIE_SERVER_POSTGRESQL_PWD}"
									},
									{
										"name": "POSTGRESQL_DATABASE",
										"value": "${KIE_SERVER_POSTGRESQL_DB}"
									},
									{
										"name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
										"value": "${POSTGRESQL_MAX_PREPARED_TRANSACTIONS}"
									}
								],
								"image": "postgresql",
								"imagePullPolicy": "Always",
								"livenessProbe": {
									"exec": {
										"command": [
											"/usr/libexec/check-container",
											"--live"
										]
									},
									"initialDelaySeconds": 120,
									"timeoutSeconds": 10
								},
								"name": "${APPLICATION_NAME}-postgresql-1",
								"ports": [
									{
										"containerPort": 5432,
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"exec": {
										"command": [
											"/usr/libexec/check-container"
										]
									},
									"initialDelaySeconds": 5,
									"timeoutSeconds": 1
								},
								"volumeMounts": [
									{
										"mountPath": "/var/lib/pgsql/data",
										"name": "${APPLICATION_NAME}-postgresql-pvol"
									}
								]
							}
						],
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "${APPLICATION_NAME}-postgresql-pvol",
								"persistentVolumeClaim": {
									"claimName": "${APPLICATION_NAME}-postgresql-claim-1"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-postgresql-1"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}",
								"namespace": "${POSTGRESQL_IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver-2"
				},
				"name": "${APPLICATION_NAME}-kieserver-2"
			},
			"spec": {
				"replicas": "${{KIE_SERVER_CONTAINER_REPLICAS}}",
				"revisionHistoryLimit": 10,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver-2"
				},
				"strategy": {
					"rollingParams": {
						"maxSurge": "100%",
						"maxUnavailable": 0
					},
					"type": "Rolling"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"cluster": "jgrp.k8s.${APPLICATION_NAME}.kieserver",
							"deploymentConfig": "${APPLICATION_NAME}-kieserver-2",
							"service": "${APPLICATION_NAME}-kieserver-2"
						},
						"name": "${APPLICATION_NAME}-kieserver-2"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "KIE_ADMIN_USER",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_ADMIN_PWD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_SERVER_MODE",
										"value": "${KIE_SERVER_MODE}"
									},
									{
										"name": "KIE_MBEANS",
										"value": "${KIE_MBEANS}"
									},
									{
										"name": "DROOLS_SERVER_FILTER_CLASSES",
										"value": "${DROOLS_SERVER_FILTER_CLASSES}"
									},
									{
										"name": "PROMETHEUS_SERVER_EXT_DISABLED",
										"value": "${PROMETHEUS_SERVER_EXT_DISABLED}"
									},
									{
										"name": "KIE_SERVER_BYPASS_AUTH_USER",
										"value": "${KIE_SERVER_BYPASS_AUTH_USER}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_TOKEN",
										"value": "${KIE_SERVER_CONTROLLER_TOKEN}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_SERVICE",
										"value": "${APPLICATION_NAME}-rhpamcentrmon"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_PROTOCOL",
										"value": "ws"
									},
									{
										"name": "KIE_SERVER_ID",
										"value": "${APPLICATION_NAME}-kieserver-2"
									},
									{
										"name": "KIE_SERVER_ROUTE_NAME",
										"value": "${APPLICATION_NAME}-kieserver-2"
									},
									{
										"name": "KIE_SERVER_USE_SECURE_ROUTE_NAME",
										"value": "${KIE_SERVER2_USE_SECURE_ROUTE_NAME}"
									},
									{
										"name": "KIE_SERVER_CONTAINER_DEPLOYMENT",
										"value": ""
									},
									{
										"name": "MAVEN_MIRROR_URL",
										"value": "${MAVEN_MIRROR_URL}"
									},
									{
										"name": "MAVEN_MIRROR_OF",
										"value": "${MAVEN_MIRROR_OF}"
									},
									{
										"name": "MAVEN_REPOS",
										"value": "RHPAMCENTR,EXTERNAL"
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_ID",
										"value": "repo-rhpamcentr"
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_SERVICE",
										"value": "${BUSINESS_CENTRAL_MAVEN_SERVICE}"
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_PATH",
										"value": "/maven2/"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_ID",
										"value": "${MAVEN_REPO_ID}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_URL",
										"value": "${MAVEN_REPO_URL}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_USERNAME",
										"value": "${MAVEN_REPO_USERNAME}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_PASSWORD",
										"value": "${MAVEN_REPO_PASSWORD}"
									},
									{
										"name": "KIE_SERVER_ROUTER_SERVICE",
										"value": "${APPLICATION_NAME}-smartrouter"
									},
									{
										"name": "KIE_SERVER_ROUTER_PORT",
										"value": "9000"
									},
									{
										"name": "KIE_SERVER_ROUTER_PROTOCOL",
										"value": "${KIE_SERVER_ROUTER_PROTOCOL}"
									},
									{
										"name": "KIE_SERVER_PERSISTENCE_DS",
										"value": "${KIE_SERVER_PERSISTENCE_DS}"
									},
									{
										"name": "DATASOURCES",
										"value": "RHPAM"
									},
									{
										"name": "RHPAM_JNDI",
										"value": "${KIE_SERVER_PERSISTENCE_DS}"
									},
									{
										"name": "RHPAM_JTA",
										"value": "true"
									},
									{
										"name": "RHPAM_DATABASE",
										"value": "${KIE_SERVER_POSTGRESQL_DB}"
									},
									{
										"name": "RHPAM_DRIVER",
										"value": "postgresql"
									},
									{
										"name": "KIE_SERVER_PERSISTENCE_DIALECT",
										"value": "${KIE_SERVER_POSTGRESQL_DIALECT}"
									},
									{
										"name": "RHPAM_USERNAME",
										"value": "${KIE_SERVER_POSTGRESQL_USER}"
									},
									{
										"name": "RHPAM_PASSWORD",
										"value": "${KIE_SERVER_POSTGRESQL_PWD}"
									},
									{
										"name": "RHPAM_SERVICE_HOST",
										"value": "${APPLICATION_NAME}-postgresql-2"
									},
									{
										"name": "RHPAM_SERVICE_PORT",
										"value": "5432"
									},
									{
										"name": "TIMER_SERVICE_DATA_STORE",
										"value": "${APPLICATION_NAME}-postgresql-2"
									},
									{
										"name": "TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL",
										"value": "${TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL}"
									},
									{
										"name": "HTTPS_KEYSTORE_DIR",
										"value": "/etc/kieserver-secret-volume"
									},
									{
										"name": "HTTPS_KEYSTORE",
										"value": "${KIE_SERVER_HTTPS_KEYSTORE}"
									},
									{
										"name": "HTTPS_NAME",
										"value": "${KIE_SERVER_HTTPS_NAME}"
									},
									{
										"name": "HTTPS_PASSWORD",
										"value": "${KIE_SERVER_HTTPS_PASSWORD}"
									},
									{
										"name": "JGROUPS_PING_PROTOCOL",
										"value": "kubernetes.KUBE_PING"
									},
									{
										"name": "KUBERNETES_NAMESPACE",
										"valueFrom": {
											"fieldRef": {
												"fieldPath": "metadata.namespace"
											}
										}
									},
									{
										"name": "KUBERNETES_LABELS",
										"value": "cluster=jgrp.k8s.${APPLICATION_NAME}.kieserver"
									},
									{
										"name": "SSO_URL",
										"value": "${SSO_URL}"
									},
									{
										"name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
										"value": "ROOT.war"
									},
									{
										"name": "SSO_REALM",
										"value": "${SSO_REALM}"
									},
									{
										"name": "SSO_SECRET",
										"value": "${KIE_SERVER2_SSO_SECRET}"
									},
									{
										"name": "SSO_CLIENT",
										"value": "${KIE_SERVER2_SSO_CLIENT}"
									},
									{
										"name": "SSO_USERNAME",
										"value": "${SSO_USERNAME}"
									},
									{
										"name": "SSO_PASSWORD",
										"value": "${SSO_PASSWORD}"
									},
									{
										"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
										"value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"
									},
									{
										"name": "SSO_PRINCIPAL_ATTRIBUTE",
										"value": "${SSO_PRINCIPAL_ATTRIBUTE}"
									},
									{
										"name": "HOSTNAME_HTTP",
										"value": "${KIE_SERVER2_HOSTNAME_HTTP}"
									},
									{
										"name": "HOSTNAME_HTTPS",
										"value": "${KIE_SERVER2_HOSTNAME_HTTPS}"
									},
									{
										"name": "AUTH_LDAP_URL",
										"value": "${AUTH_LDAP_URL}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_MODULE",
										"value": "${AUTH_LDAP_LOGIN_MODULE}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_FAILOVER",
										"value": "${AUTH_LDAP_LOGIN_FAILOVER}"
									},
									{
										"name": "AUTH_LDAP_BIND_DN",
										"value": "${AUTH_LDAP_BIND_DN}"
									},
									{
										"name": "AUTH_LDAP_BIND_CREDENTIAL",
										"value": "${AUTH_LDAP_BIND_CREDENTIAL}"
									},
									{
										"name": "AUTH_LDAP_ALLOW_EMPTY_PASSWORDS",
										"value": "${AUTH_LDAP_ALLOW_EMPTY_PASSWORDS}"
									},
									{
										"name": "AUTH_LDAP_BASE_CTX_DN",
										"value": "${AUTH_LDAP_BASE_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_BASE_FILTER",
										"value": "${AUTH_LDAP_BASE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_RECURSIVE_SEARCH",
										"value": "${AUTH_LDAP_RECURSIVE_SEARCH}"
									},
									{
										"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
										"value": "${AUTH_LDAP_SEARCH_TIME_LIMIT}"
									},
									{
										"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
										"value": "${AUTH_LDAP_ROLE_ATTRIBUTE_ID}"
									},
									{
										"name": "AUTH_LDAP_ROLES_CTX_DN",
										"value": "${AUTH_LDAP_ROLES_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_ROLE_FILTER",
										"value": "${AUTH_LDAP_ROLE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_ROLE_RECURSION",
										"value": "${AUTH_LDAP_ROLE_RECURSION}"
									},
									{
										"name": "AUTH_LDAP_DEFAULT_ROLE",
										"value": "${AUTH_LDAP_DEFAULT_ROLE}"
									},
									{
										"name": "AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES",
										"value": "${AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES}"
									},
									{
										"name": "AUTH_LDAP_REFERRAL_MODE",
										"value": "${AUTH_LDAP_REFERRAL_MODE}"
									},
									{
										"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
										"value": "${AUTH_ROLE_MAPPER_ROLES_PROPERTIES}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_MAPPED}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_NON_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_NON_MAPPED}"
									}
								],
								"image": "${KIE_SERVER_IMAGE_STREAM_NAME}",
								"imagePullPolicy": "Always",
								"livenessProbe": {
									"failureThreshold": 3,
									"httpGet": {
										"path": "/services/rest/server/healthcheck",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 180,
									"periodSeconds": 15,
									"timeoutSeconds": 2
								},
								"name": "${APPLICATION_NAME}-kieserver-2",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8443,
										"name": "https",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"failureThreshold": 36,
									"httpGet": {
										"path": "/services/rest/server/readycheck",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 30,
									"periodSeconds": 5,
									"timeoutSeconds": 2
								},
								"resources": {
									"limits": {
										"cpu": "${KIE_SERVER_CPU_LIMIT}",
										"memory": "${KIE_SERVER_MEMORY_LIMIT}"
									},
									"requests": {
										"cpu": "${KIE_SERVER_CPU_REQUEST}",
										"memory": "${KIE_SERVER_MEMORY_REQUEST}"
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/etc/kieserver-secret-volume",
										"name": "kieserver-keystore-volume",
										"readOnly": true
									}
								]
							}
						],
						"initContainers": [
							{
								"command": [
									"/bin/bash",
									"-c",
									"replicas=$(oc get dc ${APPLICATION_NAME}-postgresql-2 -o=jsonpath='{.status.availableReplicas}'); until \"[\" $replicas -gt 0 \"]\"; do echo waiting for ${APPLICATION_NAME}-postgresql-2; replicas=$(oc get dc ${APPLICATION_NAME}-postgresql-2 -o=jsonpath='{.status.availableReplicas}'); sleep 2; done;"
								],
								"image": "registry.redhat.io/openshift3/ose-cli",
								"imagePullPolicy": "IfNotPresent",
								"name": "${APPLICATION_NAME}-postgresql-init-2",
								"terminationMessagePolicy": "FallbackToLogsOnError"
							}
						],
						"serviceAccountName": "${APPLICATION_NAME}-kieserver",
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "kieserver-keystore-volume",
								"secret": {
									"secretName": "${KIE_SERVER_HTTPS_SECRET}"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-kieserver-2"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${KIE_SERVER_IMAGE_STREAM_NAME}:${IMAGE_STREAM_TAG}",
								"namespace": "${IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-postgresql-2"
				},
				"name": "${APPLICATION_NAME}-postgresql-2"
			},
			"spec": {
				"replicas": 1,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-postgresql-2"
				},
				"strategy": {
					"type": "Recreate"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"deploymentConfig": "${APPLICATION_NAME}-postgresql-2",
							"service": "${APPLICATION_NAME}-postgresql-2"
						},
						"name": "${APPLICATION_NAME}-postgresql-2"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "POSTGRESQL_USER",
										"value": "${KIE_SERVER_POSTGRESQL_USER}"
									},
									{
										"name": "POSTGRESQL_PASSWORD",
										"value": "${KIE_SERVER_POSTGRESQL_PWD}"
									},
									{
										"name": "POSTGRESQL_DATABASE",
										"value": "${KIE_SERVER_POSTGRESQL_DB}"
									},
									{
										"name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
										"value": "${POSTGRESQL_MAX_PREPARED_TRANSACTIONS}"
									}
								],
								"image": "postgresql",
								"imagePullPolicy": "Always",
								"livenessProbe": {
									"exec": {
										"command": [
											"/usr/libexec/check-container",
											"--live"
										]
									},
									"initialDelaySeconds": 120,
									"timeoutSeconds": 10
								},
								"name": "${APPLICATION_NAME}-postgresql-2",
								"ports": [
									{
										"containerPort": 5432,
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"exec": {
										"command": [
											"/usr/libexec/check-container"
										]
									},
									"initialDelaySeconds": 5,
									"timeoutSeconds": 1
								},
								"volumeMounts": [
									{
										"mountPath": "/var/lib/pgsql/data",
										"name": "${APPLICATION_NAME}-postgresql-pvol"
									}
								]
							}
						],
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "${APPLICATION_NAME}-postgresql-pvol",
								"persistentVolumeClaim": {
									"claimName": "${APPLICATION_NAME}-postgresql-claim-2"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-postgresql-2"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}",
								"namespace": "${POSTGRESQL_IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "PersistentVolumeClaim",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-postgresql-1"
				},
				"name": "${APPLICATION_NAME}-postgresql-claim-1"
			},
			"spec": {
				"accessModes": [
					"ReadWriteOnce"
				],
				"resources": {
					"requests": {
						"storage": "${DB_VOLUME_CAPACITY}"
					}
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "PersistentVolumeClaim",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-postgresql-2"
				},
				"name": "${APPLICATION_NAME}-postgresql-claim-2"
			},
			"spec": {
				"accessModes": [
					"ReadWriteOnce"
				],
				"resources": {
					"requests": {
						"storage": "${DB_VOLUME_CAPACITY}"
					}
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "PersistentVolumeClaim",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-smartrouter"
				},
				"name": "${APPLICATION_NAME}-smartrouter-claim"
			},
			"spec": {
				"accessModes": [
					"ReadWriteMany"
				],
				"resources": {
					"requests": {
						"storage": "64Mi"
					}
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "PersistentVolumeClaim",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-rhpamcentrmon"
				},
				"name": "${APPLICATION_NAME}-rhpamcentr-claim"
			},
			"spec": {
				"accessModes": [
					"ReadWriteMany"
				],
				"resources": {
					"requests": {
						"storage": "64Mi"
					}
				}
			}
		}
	],
	"parameters": [
		{
			"name": "APPLICATION_NAME",
			"displayName": "Application Name",
			"description": "The name for the application.",
			"value": "myapp",
			"required": true
		},
		{
			"name": "MAVEN_MIRROR_URL",
			"displayName": "Maven mirror URL",
			"description": "Maven mirror that the KIE Server must use. If you configure a mirror, this mirror must contain all artifacts that are required for deploying your services."
		},
		{
			"name": "MAVEN_MIRROR_OF",
			"displayName": "Maven mirror of",
			"description": "Maven mirror configuration for KIE Server.",
			"value": "external:*"
		},
		{
			"name": "MAVEN_REPO_ID",
			"displayName": "Maven repository ID",
			"description": "The id to use for the maven repository. If set, it can be excluded from the optionally configured mirror by adding it to MAVEN_MIRROR_OF. For example: external:*,!repo-rhpamcentr,!repo-custom. If MAVEN_MIRROR_URL is set but MAVEN_MIRROR_ID is not set, an id will be generated randomly, but won't be usable in MAVEN_MIRROR_OF.",
			"value": "repo-custom"
		},
		{
			"name": "MAVEN_REPO_URL",
			"displayName": "Maven repository URL",
			"description": "Fully qualified URL to a Maven repository or service.",
			"required": true
		},
		{
			"name": "MAVEN_REPO_USERNAME",
			"displayName": "Maven repository user name",
			"description": "User name for accessing the Maven repository, if required."
		},
		{
			"name": "MAVEN_REPO_PASSWORD",
			"displayName": "Maven repository password",
			"description": "Password to access the Maven repository, if required."
		},
		{
			"name": "BUSINESS_CENTRAL_MAVEN_SERVICE",
			"displayName": "Name of the Maven service hosted by Business Central",
			"description": "The service name for the optional Business Central, where it can be reached, to allow service lookups (for maven repo usage), if required."
		},
		{
			"name": "CREDENTIALS_SECRET",
			"displayName": "Credentials secret",
			"description": "Secret containing the KIE_ADMIN_USER and KIE_ADMIN_PWD values",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_NAMESPACE",
			"displayName": "ImageStream Namespace",
			"description": "Namespace in which the ImageStreams for Red Hat Process Automation Manager images are installed. These ImageStreams are normally installed in the openshift namespace. You need to modify this parameter only if you installed the ImageStream in a different namespace/project. Default is \"openshift\".",
			"value": "openshift",
			"required": true
		},
		{
			"name": "KIE_SERVER_IMAGE_STREAM_NAME",
			"displayName": "KIE Server ImageStream Name",
			"description": "The name of the image stream to use for KIE Server. Default is \"rhpam-kieserver-rhel8\".",
			"value": "rhpam-kieserver-rhel8",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_TAG",
			"displayName": "ImageStream Tag",
			"description": "A named pointer to an image in an image stream. Default is \"7.13.0\".",
			"value": "7.13.0",
			"required": true
		},
		{
			"name": "SMART_ROUTER_HOSTNAME_HTTP",
			"displayName": "Smart Router Custom http Route Hostname",
			"description": "Custom hostname for http service route.  Leave blank for default hostname, e.g. \u003capplication-name\u003e-smartrouter-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e'"
		},
		{
			"name": "SMART_ROUTER_HOSTNAME_HTTPS",
			"displayName": "Smart Router Custom https Route Hostname",
			"description": "Custom hostname for https service route.  Leave blank for default hostname, e.g. secure-\u003capplication-name\u003e-smartrouter-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e'"
		},
		{
			"name": "KIE_SERVER_ROUTER_ID",
			"displayName": "Smart Router ID",
			"description": "Router ID used when connecting to the controller. (router property org.kie.server.router.id)",
			"value": "kie-server-router",
			"required": true
		},
		{
			"name": "KIE_SERVER_ROUTER_PROTOCOL",
			"displayName": "Smart Router protocol",
			"description": "KIE Server router protocol. (Used to build the org.kie.server.router.url.external property)"
		},
		{
			"name": "KIE_SERVER_ROUTER_URL_EXTERNAL",
			"displayName": "Smart Router external URL",
			"description": "Public URL where the router can be found. Format http://\u003chost\u003e:\u003cport\u003e  (router property org.kie.server.router.url.external)"
		},
		{
			"name": "KIE_SERVER_ROUTER_NAME",
			"displayName": "Smart Router name",
			"description": "Router name used when connecting to the controller. (router property org.kie.server.router.name)",
			"value": "KIE Server Router",
			"required": true
		},
		{
			"name": "KIE_SERVER_CONTROLLER_TOKEN",
			"displayName": "KIE Server Controller Token",
			"description": "KIE Server controller token for bearer authentication. (Sets the org.kie.server.controller.token system property)"
		},
		{
			"name": "KIE_SERVER_PERSISTENCE_DS",
			"displayName": "KIE Server Persistence DS",
			"description": "KIE Server persistence datasource. (Sets the org.kie.server.persistence.ds system property)",
			"value": "java:/jboss/datasources/rhpam"
		},
		{
			"name": "POSTGRESQL_IMAGE_STREAM_NAMESPACE",
			"displayName": "PostgreSQL ImageStream Namespace",
			"description": "Namespace in which the ImageStream for the PostgreSQL image is installed. The ImageStream is already installed in the openshift namespace. You need to modify this parameter only if you installed the ImageStream in a different namespace/project. Default is \"openshift\".",
			"value": "openshift"
		},
		{
			"name": "POSTGRESQL_IMAGE_STREAM_TAG",
			"displayName": "PostgreSQL ImageStream Tag",
			"description": "The PostgreSQL image version, which is intended to correspond to the PostgreSQL version. Default is \"10\".",
			"value": "10"
		},
		{
			"name": "KIE_SERVER_POSTGRESQL_USER",
			"displayName": "KIE Server PostgreSQL Database User",
			"description": "KIE Server PostgreSQL database user name.",
			"value": "rhpam"
		},
		{
			"name": "KIE_SERVER_POSTGRESQL_PWD",
			"displayName": "KIE Server PostgreSQL Database Password",
			"description": "KIE Server PostgreSQL database password.",
			"generate": "expression",
			"from": "[a-zA-Z]{6}[0-9]{1}!"
		},
		{
			"name": "KIE_SERVER_POSTGRESQL_DB",
			"displayName": "KIE Server PostgreSQL Database Name",
			"description": "KIE Server PostgreSQL database name.",
			"value": "rhpam7"
		},
		{
			"name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
			"displayName": "PostgreSQL Database max prepared connections",
			"description": "Allows the PostgreSQL to handle XA transactions.",
			"value": "100",
			"required": true
		},
		{
			"name": "DB_VOLUME_CAPACITY",
			"displayName": "Database Volume Capacity",
			"description": "Size of persistent storage for the database volume.",
			"value": "1Gi",
			"required": true
		},
		{
			"name": "KIE_SERVER_POSTGRESQL_DIALECT",
			"displayName": "KIE Server PostgreSQL Dialect",
			"description": "KIE Server PostgreSQL Hibernate dialect.",
			"value": "org.hibernate.dialect.PostgreSQLDialect",
			"required": true
		},
		{
			"name": "KIE_SERVER_MODE",
			"displayName": "KIE Server Mode",
			"description": "The KIE Server mode. Valid values are 'DEVELOPMENT' or 'PRODUCTION'. In production mode, you can not deploy SNAPSHOT versions of artifacts on the KIE Server and can not change the version of an artifact in an existing container. (Sets the org.kie.server.mode system property).",
			"value": "PRODUCTION"
		},
		{
			"name": "KIE_MBEANS",
			"displayName": "KIE MBeans",
			"description": "KIE Server mbeans enabled/disabled. (Sets the kie.mbeans and kie.scanner.mbeans system properties)",
			"value": "enabled"
		},
		{
			"name": "DROOLS_SERVER_FILTER_CLASSES",
			"displayName": "Drools Server Filter Classes",
			"description": "KIE Server class filtering. (Sets the org.drools.server.filter.classes system property)",
			"value": "true"
		},
		{
			"name": "PROMETHEUS_SERVER_EXT_DISABLED",
			"displayName": "Prometheus Server Extension Disabled",
			"description": "If set to false, the prometheus server extension will be enabled. (Sets the org.kie.prometheus.server.ext.disabled system property)"
		},
		{
			"name": "BUSINESS_CENTRAL_HOSTNAME_HTTP",
			"displayName": "Business Central Monitoring Custom http Route Hostname",
			"description": "Custom hostname for http service route. Leave blank for default hostname, e.g.: \u003capplication-name\u003e-rhpamcentrmon-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "BUSINESS_CENTRAL_HOSTNAME_HTTPS",
			"displayName": "Business Central Monitoring Custom https Route Hostname",
			"description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: secure-\u003capplication-name\u003e-rhpamcentrmon-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER1_HOSTNAME_HTTP",
			"displayName": "KIE Server 1 Custom http Route Hostname",
			"description": "Custom hostname for http service route. Leave blank for default hostname, e.g.: \u003capplication-name\u003e-kieserver-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER1_HOSTNAME_HTTPS",
			"displayName": "KIE Server 1 Custom https Route Hostname",
			"description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: secure-\u003capplication-name\u003e-kieserver-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER1_USE_SECURE_ROUTE_NAME",
			"displayName": "Use the secure route name to link application requests to KIE_SERVER1_HOSTNAME_HTTPS vs KIE_SERVER1_HOSTNAME_HTTP.",
			"description": "If true, the KIE Server will use secure-\u003capplication-name\u003e-kieserver vs. \u003capplication-name\u003e-kieserver as the KIE Server route endpoint for Business Central to report. Therefore, Business Central displays the secure link to the user.",
			"value": "false"
		},
		{
			"name": "KIE_SERVER2_HOSTNAME_HTTP",
			"displayName": "KIE Server 2 Custom http Route Hostname",
			"description": "Custom hostname for http service route. Leave blank for default hostname, e.g.: \u003capplication-name\u003e-kieserver-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER2_HOSTNAME_HTTPS",
			"displayName": "KIE Server 2 Custom https Route Hostname",
			"description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: secure-\u003capplication-name\u003e-kieserver-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER2_USE_SECURE_ROUTE_NAME",
			"displayName": "Use the secure route name to link application requests to KIE_SERVER2_HOSTNAME_HTTPS vs KIE_SERVER2_HOSTNAME_HTTP.",
			"description": "If true, will use secure-APPLICATION_NAME-kieserver-2 vs. APPLICATION_NAME-kieserver-2 as the route name.",
			"value": "false"
		},
		{
			"name": "BUSINESS_CENTRAL_HTTPS_SECRET",
			"displayName": "Business Central Monitoring Server Keystore Secret Name",
			"description": "The name of the secret containing the keystore file for Business Central.",
			"required": true
		},
		{
			"name": "BUSINESS_CENTRAL_HTTPS_KEYSTORE",
			"displayName": "Business Central Monitoring Server Keystore Filename",
			"description": "The name of the keystore file within the secret.",
			"value": "keystore.jks"
		},
		{
			"name": "BUSINESS_CENTRAL_HTTPS_NAME",
			"displayName": "Business Central Monitoring Server Certificate Name",
			"description": "The name associated with the server certificate.",
			"value": "jboss"
		},
		{
			"name": "BUSINESS_CENTRAL_HTTPS_PASSWORD",
			"displayName": "Business Central Monitoring Server Keystore Password",
			"description": "The password for the keystore and certificate.",
			"value": "mykeystorepass"
		},
		{
			"name": "KIE_SERVER_ROUTER_HTTPS_SECRET",
			"displayName": "Smart Router Keystore Secret Name",
			"description": "The name of the secret containing the keystore file for Smart Router.",
			"required": true
		},
		{
			"name": "KIE_SERVER_ROUTER_HTTPS_KEYSTORE",
			"displayName": "Smart Router Keystore Filename",
			"description": "The name of the keystore file within the secret.",
			"value": "keystore.jks"
		},
		{
			"name": "KIE_SERVER_ROUTER_HTTPS_NAME",
			"displayName": "Smart Router Certificate Name",
			"description": "The name associated with the server certificate.",
			"value": "jboss"
		},
		{
			"name": "KIE_SERVER_ROUTER_HTTPS_PASSWORD",
			"displayName": "Smart Router Keystore Password",
			"description": "The password for the keystore and certificate.",
			"value": "mykeystorepass"
		},
		{
			"name": "KIE_SERVER_HTTPS_SECRET",
			"displayName": "KIE Server Keystore Secret Name",
			"description": "The name of the secret containing the keystore file for KIE Server.",
			"required": true
		},
		{
			"name": "KIE_SERVER_HTTPS_KEYSTORE",
			"displayName": "KIE Server Keystore Filename",
			"description": "The name of the keystore file within the secret.",
			"value": "keystore.jks"
		},
		{
			"name": "KIE_SERVER_HTTPS_NAME",
			"displayName": "KIE Server Certificate Name",
			"description": "The name associated with the server certificate.",
			"value": "jboss"
		},
		{
			"name": "KIE_SERVER_HTTPS_PASSWORD",
			"displayName": "KIE Server Keystore Password",
			"description": "The password for the keystore and certificate.",
			"value": "mykeystorepass"
		},
		{
			"name": "KIE_SERVER_BYPASS_AUTH_USER",
			"displayName": "KIE Server Bypass Auth User",
			"description": "Allows the KIE Server to bypass the authenticated user for task-related operations, for example, queries. (Sets the org.kie.server.bypass.auth.user system property)",
			"value": "false"
		},
		{
			"name": "TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL",
			"displayName": "Timer service data store refresh interval (in milliseconds)",
			"description": "Sets refresh-interval for the EJB timer service database-data-store.",
			"value": "30000"
		},
		{
			"name": "BUSINESS_CENTRAL_MEMORY_LIMIT",
			"displayName": "Business Central Monitoring Container Memory Limit",
			"description": "Business Central Monitoring Container memory limit.",
			"value": "2Gi",
			"required": true
		},
		{
			"name": "BUSINESS_CENTRAL_MEMORY_REQUEST",
			"displayName": "Business Central Monitoring Container Memory Request",
			"description": "Business Central Monitoring Container memory request.",
			"value": "1536Mi",
			"required": true
		},
		{
			"name": "BUSINESS_CENTRAL_CPU_LIMIT",
			"displayName": "Business Central Monitoring Container CPU Limit",
			"description": "Business Central Monitoring Container CPU limit.",
			"value": "1",
			"required": true
		},
		{
			"name": "BUSINESS_CENTRAL_CPU_REQUEST",
			"displayName": "Business Central Monitoring Container CPU Request",
			"description": "Business Central Monitoring Container CPU request.",
			"value": "750m",
			"required": true
		},
		{
			"name": "KIE_SERVER_MEMORY_LIMIT",
			"displayName": "KIE Server Container Memory Limit",
			"description": "KIE Server Container memory limit.",
			"value": "2Gi",
			"required": true
		},
		{
			"name": "KIE_SERVER_MEMORY_REQUEST",
			"displayName": "KIE Server Container Memory Request",
			"description": "KIE Server Container memory request.",
			"value": "1536Mi",
			"required": true
		},
		{
			"name": "KIE_SERVER_CPU_LIMIT",
			"displayName": "KIE Server Container CPU Limit",
			"description": "KIE Server Container CPU limit.",
			"value": "1",
			"required": true
		},
		{
			"name": "KIE_SERVER_CPU_REQUEST",
			"displayName": "KIE Server Container CPU Request",
			"description": "KIE Server Container CPU request.",
			"value": "750m",
			"required": true
		},
		{
			"name": "SMART_ROUTER_MEMORY_LIMIT",
			"displayName": "Smart Router Container Memory Limit",
			"description": "Smart Router Container memory limit",
			"value": "512Mi"
		},
		{
			"name": "BUSINESS_CENTRAL_MONITORING_CONTAINER_REPLICAS",
			"displayName": "Business Central Monitoring Container Replicas",
			"description": "Business Central Monitoring Container Replicas, defines how many Business Central Monitoring containers will be started.",
			"value": "3",
			"required": true
		},
		{
			"name": "SMART_ROUTER_CONTAINER_REPLICAS",
			"displayName": "Smart Router Container Replicas",
			"description": "Smart Router Container Replicas, defines how many smart router containers will be started.",
			"value": "2",
			"required": true
		},
		{
			"name": "KIE_SERVER_CONTAINER_REPLICAS",
			"displayName": "KIE Server Container Replicas",
			"description": "KIE Server Container Replicas, defines how many KIE Server containers will be started.",
			"value": "3",
			"required": true
		},
		{
			"name": "SSO_URL",
			"displayName": "RH-SSO URL",
			"description": "RH-SSO URL."
		},
		{
			"name": "SSO_REALM",
			"displayName": "RH-SSO Realm name",
			"description": "RH-SSO Realm name."
		},
		{
			"name": "BUSINESS_CENTRAL_SSO_CLIENT",
			"displayName": "Business Central Monitoring RH-SSO Client name",
			"description": "Business Central Monitoring RH-SSO Client name."
		},
		{
			"name": "BUSINESS_CENTRAL_SSO_SECRET",
			"displayName": "Business Central Monitoring RH-SSO Client Secret",
			"description": "Business Central Monitoring RH-SSO Client Secret."
		},
		{
			"name": "KIE_SERVER1_SSO_CLIENT",
			"displayName": "KIE Server 1 RH-SSO Client name",
			"description": "KIE Server 1 RH-SSO Client name."
		},
		{
			"name": "KIE_SERVER1_SSO_SECRET",
			"displayName": "KIE Server 1 RH-SSO Client Secret",
			"description": "KIE Server 1 RH-SSO Client Secret."
		},
		{
			"name": "KIE_SERVER2_SSO_CLIENT",
			"displayName": "KIE Server 2 RH-SSO Client name",
			"description": "KIE Server 2 RH-SSO Client name."
		},
		{
			"name": "KIE_SERVER2_SSO_SECRET",
			"displayName": "KIE Server 2 RH-SSO Client Secret",
			"description": "KIE Server 2 RH-SSO Client Secret."
		},
		{
			"name": "SSO_USERNAME",
			"displayName": "RH-SSO Realm admin user name",
			"description": "RH-SSO Realm admin user name for creating the Client if it doesn't exist."
		},
		{
			"name": "SSO_PASSWORD",
			"displayName": "RH-SSO Realm Admin Password",
			"description": "RH-SSO Realm Admin Password used to create the Client."
		},
		{
			"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
			"displayName": "RH-SSO Disable SSL Certificate Validation",
			"description": "RH-SSO Disable SSL Certificate Validation.",
			"value": "false"
		},
		{
			"name": "SSO_PRINCIPAL_ATTRIBUTE",
			"displayName": "RH-SSO Principal Attribute",
			"description": "RH-SSO Principal Attribute to use as user name.",
			"value": "preferred_username"
		},
		{
			"name": "AUTH_LDAP_URL",
			"displayName": "LDAP Endpoint",
			"description": "LDAP endpoint to connect for authentication. For failover, set two or more LDAP endpoints separated by space."
		},
		{
			"name": "AUTH_LDAP_LOGIN_MODULE",
			"displayName": "LDAP Flag Login Module",
			"description": "LDAP login module flag, adds backward compatibility with the legacy security subsystem on Elytron. 'optional' is the only supported value, if set, it will create a distributed realm on Elytron configuration with LDAP and FileSystem realms with the user added using the KIE_ADMIN_USER."
		},
		{
			"name": "AUTH_LDAP_LOGIN_FAILOVER",
			"displayName": "LDAP login failover",
			"description": "Enable failover, if LDAP Url is unreachable, it will fail over to the KieFsRealm."
		},
		{
			"name": "AUTH_LDAP_BIND_DN",
			"displayName": "LDAP Bind DN",
			"description": "Bind DN used for authentication."
		},
		{
			"name": "AUTH_LDAP_BIND_CREDENTIAL",
			"displayName": "LDAP Bind Credentials",
			"description": "LDAP Credentials used for authentication."
		},
		{
			"name": "AUTH_LDAP_ALLOW_EMPTY_PASSWORDS",
			"displayName": "Allow Empty Passwords",
			"description": "Does this realm support blank password direct verification? Blank password attempt will be rejected otherwise. Boolean flag, defaults to false."
		},
		{
			"name": "AUTH_LDAP_BASE_CTX_DN",
			"displayName": "LDAP Base DN",
			"description": "LDAP Base DN of the top-level context to begin the user search."
		},
		{
			"name": "AUTH_LDAP_BASE_FILTER",
			"displayName": "LDAP Base Search filter",
			"description": "LDAP search filter used to locate the context of the user to authenticate. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. A common example for the search filter is (uid={0})."
		},
		{
			"name": "AUTH_LDAP_RECURSIVE_SEARCH",
			"displayName": "LDAP User resursive search",
			"description": "Indicates if the user queries are recursive."
		},
		{
			"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
			"displayName": "LDAP Search time limit",
			"description": "The timeout in milliseconds for user or role searches."
		},
		{
			"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
			"displayName": "LDAP Role attributeID",
			"description": "Name of the attribute containing the user roles."
		},
		{
			"name": "AUTH_LDAP_ROLES_CTX_DN",
			"displayName": "LDAP Roles Search DN",
			"description": "The fixed DN of the context to search for user roles. This is not the DN where the actual roles are, but the DN where the objects containing the user roles are. For example, in a Microsoft Active Directory server, this is the DN where the user account is."
		},
		{
			"name": "AUTH_LDAP_ROLE_FILTER",
			"displayName": "LDAP Role search filter",
			"description": "A search filter used to locate the roles associated with the authenticated user. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. The authenticated userDN is substituted into the filter anywhere a {1} is used. An example search filter that matches on the input username is (member={0}). An alternative that matches on the authenticated userDN is (member={1})."
		},
		{
			"name": "AUTH_LDAP_ROLE_RECURSION",
			"displayName": "LDAP Role recursion",
			"description": "The number of levels of recursion the role search will go below a matching context. Disable recursion by setting this to 0."
		},
		{
			"name": "AUTH_LDAP_DEFAULT_ROLE",
			"displayName": "LDAP Default role",
			"description": "A role included for all authenticated users."
		},
		{
			"name": "AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES",
			"displayName": "LDAP new identity attributes",
			"description": "Provide new identities for LDAP  identity mapping, the pattern to be used with this env is 'attribute_name=attribute_value;another_attribute_name=value'"
		},
		{
			"name": "AUTH_LDAP_REFERRAL_MODE",
			"displayName": "LDAP follow referrals",
			"description": "If LDAP referrals should be followed. Corresponds to REFERRAL ('java.naming.referral') environment property. Allowed values: 'ignore', 'follow', 'throw'"
		},
		{
			"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
			"displayName": "Role Mapping roles properties file path or one lined roles",
			"description": "When present, the RoleMapping will be configured to use the provided properties file or roles. This parameter defines the fully-qualified file path and name of a properties file or a set of roles with the following pattern 'role=role1;another-role=role2'. The format of every entry in the file is original_role=role1,role2,role3"
		},
		{
			"name": "AUTH_LDAP_MAPPER_KEEP_MAPPED",
			"displayName": "Role Mapper Keep Mapped",
			"description": "When set to 'true' the mapped roles will retain all roles, that have defined mappings."
		},
		{
			"name": "AUTH_LDAP_MAPPER_KEEP_NON_MAPPED",
			"displayName": "Role Mapper Keep Non Mapped",
			"description": "When set to 'true' the mapped roles will retain all roles, that have no defined mappings."
		}
	],
	"labels": {
		"rhpam": "7.13",
		"template": "rhpam713-prod"
	}
}