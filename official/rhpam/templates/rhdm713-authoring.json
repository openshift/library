{
	"kind": "Template",
	"apiVersion": "v1",
	"metadata": {
		"name": "rhdm713-authoring",
		"creationTimestamp": null,
		"annotations": {
			"description": "Application template for a non-HA persistent authoring environment for decision, for Red Hat Process Automation Manager 7.13 - Deprecated",
			"iconClass": "icon-jboss",
			"openshift.io/display-name": "Red Hat Process Automation Manager 7.13 authoring environment (non-HA, persistent, with https) for decisions.",
			"openshift.io/provider-display-name": "Red Hat, Inc.",
			"tags": "rhpam,decision,jboss,authoring",
			"template.openshift.io/bindable": "false",
			"template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.13/html/deploying_a_red_hat_process_automation_manager_7.13_authoring_environment_on_red_hat_openshift_container_platform/",
			"template.openshift.io/long-description": "This template defines resources needed to develop and execute Rules on Red Hat Process Automation Manager 7.13, including application deployment configuration, secure and insecure http communication and a persistent volume to store data that needs to survive to a restart. Template for Red Hat OpenShift Container Platform version 3.11. Deprecated since Red Hat Decision Manager version 7.5; consider using the Red Hat Business Automation Operator.",
			"template.openshift.io/support-url": "https://access.redhat.com",
			"version": "7.13"
		}
	},
	"message": "A new persistent Process Automation Manager application for Decision has been created in your project.\nThe username/password needed for accessing the application are stored in \"${CREDENTIALS_SECRET}\" secret as\nKIE_ADMIN_USER and KIE_ADMIN_PWD\n\nYou must create the secret named \"${CREDENTIALS_SECRET}\" containing the KIE_ADMIN_USER and KIE_ADMIN_PWD values and the secrets named \"${BUSIDECISION_CENTRAL_HTTPS_SECRETNESS_CENTRAL_HTTPS_SECRET}\" and \"${KIE_SERVER_HTTPS_SECRET}\"\ncontaining the ${DECISION_CENTRAL_HTTPS_SECRET} and ${KIE_SERVER_HTTPS_KEYSTORE} files used for serving secure content.",
	"objects": [
		{
			"apiVersion": "v1",
			"kind": "ServiceAccount",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-rhdmsvc"
			}
		},
		{
			"apiVersion": "v1",
			"kind": "RoleBinding",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-rhdmsvc-edit"
			},
			"roleRef": {
				"name": "edit"
			},
			"subjects": [
				{
					"kind": "ServiceAccount",
					"name": "${APPLICATION_NAME}-rhdmsvc"
				}
			]
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "All the Decision Central web server's ports."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-rhdmcentr"
				},
				"name": "${APPLICATION_NAME}-rhdmcentr"
			},
			"spec": {
				"ports": [
					{
						"name": "http",
						"port": 8080,
						"targetPort": 8080
					},
					{
						"name": "https",
						"port": 8443,
						"targetPort": 8443
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-rhdmcentr"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "All the KIE Server web server's ports."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"ports": [
					{
						"name": "http",
						"port": 8080,
						"targetPort": 8080
					},
					{
						"name": "https",
						"port": 8443,
						"targetPort": 8443
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver"
				},
				"sessionAffinity": "ClientIP",
				"sessionAffinityConfig": {
					"clientIP": {
						"timeoutSeconds": 3600
					}
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "insecure-${APPLICATION_NAME}-rhdmcentr-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for Decision Central's http service.",
					"haproxy.router.openshift.io/timeout": "1h"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-rhdmcentr"
				},
				"name": "insecure-${APPLICATION_NAME}-rhdmcentr"
			},
			"spec": {
				"host": "${DECISION_CENTRAL_HOSTNAME_HTTP}",
				"port": {
					"targetPort": "http"
				},
				"to": {
					"name": "${APPLICATION_NAME}-rhdmcentr"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-rhdmcentr-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for Decision Central's https service.",
					"haproxy.router.openshift.io/timeout": "1h"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-rhdmcentr"
				},
				"name": "${APPLICATION_NAME}-rhdmcentr"
			},
			"spec": {
				"host": "${DECISION_CENTRAL_HOSTNAME_HTTPS}",
				"port": {
					"targetPort": "https"
				},
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "${APPLICATION_NAME}-rhdmcentr"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "insecure-${APPLICATION_NAME}-kieserver-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for KIE Server's http service.",
					"haproxy.router.openshift.io/balance": "source"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "insecure-${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"host": "${KIE_SERVER_HOSTNAME_HTTP}",
				"port": {
					"targetPort": "http"
				},
				"to": {
					"name": "${APPLICATION_NAME}-kieserver"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-kieserver-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for KIE Server's https service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"host": "${KIE_SERVER_HOSTNAME_HTTPS}",
				"port": {
					"targetPort": "https"
				},
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "${APPLICATION_NAME}-kieserver"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-rhdmcentr"
				},
				"name": "${APPLICATION_NAME}-rhdmcentr"
			},
			"spec": {
				"replicas": 1,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-rhdmcentr"
				},
				"strategy": {
					"type": "Recreate"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"cluster": "jgrp.k8s.${APPLICATION_NAME}.rhdmcentr",
							"deploymentConfig": "${APPLICATION_NAME}-rhdmcentr",
							"service": "${APPLICATION_NAME}-rhdmcentr"
						},
						"name": "${APPLICATION_NAME}-rhdmcentr"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "APPLICATION_USERS_PROPERTIES",
										"value": "/opt/kie/data/configuration/application-users.properties"
									},
									{
										"name": "APPLICATION_ROLES_PROPERTIES",
										"value": "/opt/kie/data/configuration/application-roles.properties"
									},
									{
										"name": "KIE_ADMIN_USER",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_ADMIN_PWD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_MBEANS",
										"value": "${KIE_MBEANS}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_OPENSHIFT_ENABLED",
										"value": "false"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_OPENSHIFT_GLOBAL_DISCOVERY_ENABLED",
										"value": "${KIE_SERVER_CONTROLLER_OPENSHIFT_GLOBAL_DISCOVERY_ENABLED}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_OPENSHIFT_PREFER_KIESERVER_SERVICE",
										"value": "${KIE_SERVER_CONTROLLER_OPENSHIFT_PREFER_KIESERVER_SERVICE}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_TEMPLATE_CACHE_TTL",
										"value": "${KIE_SERVER_CONTROLLER_TEMPLATE_CACHE_TTL}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_TOKEN",
										"value": "${KIE_SERVER_CONTROLLER_TOKEN}"
									},
									{
										"name": "WORKBENCH_ROUTE_NAME",
										"value": "${APPLICATION_NAME}-rhdmcentr"
									},
									{
										"name": "MAVEN_MIRROR_URL",
										"value": "${MAVEN_MIRROR_URL}"
									},
									{
										"name": "MAVEN_REPO_ID",
										"value": "${MAVEN_REPO_ID}"
									},
									{
										"name": "MAVEN_REPO_URL",
										"value": "${MAVEN_REPO_URL}"
									},
									{
										"name": "MAVEN_REPO_USERNAME",
										"value": "${MAVEN_REPO_USERNAME}"
									},
									{
										"name": "MAVEN_REPO_PASSWORD",
										"value": "${MAVEN_REPO_PASSWORD}"
									},
									{
										"name": "GIT_HOOKS_DIR",
										"value": "${GIT_HOOKS_DIR}"
									},
									{
										"name": "HTTPS_KEYSTORE_DIR",
										"value": "/etc/decisioncentral-secret-volume"
									},
									{
										"name": "HTTPS_KEYSTORE",
										"value": "${DECISION_CENTRAL_HTTPS_KEYSTORE}"
									},
									{
										"name": "HTTPS_NAME",
										"value": "${DECISION_CENTRAL_HTTPS_NAME}"
									},
									{
										"name": "HTTPS_PASSWORD",
										"value": "${DECISION_CENTRAL_HTTPS_PASSWORD}"
									},
									{
										"name": "KUBERNETES_NAMESPACE",
										"valueFrom": {
											"fieldRef": {
												"fieldPath": "metadata.namespace"
											}
										}
									},
									{
										"name": "KUBERNETES_LABELS",
										"value": "cluster=jgrp.k8s.${APPLICATION_NAME}.rhdmcentr"
									},
									{
										"name": "SSO_URL",
										"value": "${SSO_URL}"
									},
									{
										"name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
										"value": "ROOT.war"
									},
									{
										"name": "SSO_REALM",
										"value": "${SSO_REALM}"
									},
									{
										"name": "SSO_SECRET",
										"value": "${DECISION_CENTRAL_SSO_SECRET}"
									},
									{
										"name": "SSO_CLIENT",
										"value": "${DECISION_CENTRAL_SSO_CLIENT}"
									},
									{
										"name": "SSO_USERNAME",
										"value": "${SSO_USERNAME}"
									},
									{
										"name": "SSO_PASSWORD",
										"value": "${SSO_PASSWORD}"
									},
									{
										"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
										"value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"
									},
									{
										"name": "SSO_PRINCIPAL_ATTRIBUTE",
										"value": "${SSO_PRINCIPAL_ATTRIBUTE}"
									},
									{
										"name": "HOSTNAME_HTTP",
										"value": "${DECISION_CENTRAL_HOSTNAME_HTTP}"
									},
									{
										"name": "HOSTNAME_HTTPS",
										"value": "${DECISION_CENTRAL_HOSTNAME_HTTPS}"
									},
									{
										"name": "AUTH_LDAP_URL",
										"value": "${AUTH_LDAP_URL}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_MODULE",
										"value": "${AUTH_LDAP_LOGIN_MODULE}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_FAILOVER",
										"value": "${AUTH_LDAP_LOGIN_FAILOVER}"
									},
									{
										"name": "AUTH_LDAP_BIND_DN",
										"value": "${AUTH_LDAP_BIND_DN}"
									},
									{
										"name": "AUTH_LDAP_BIND_CREDENTIAL",
										"value": "${AUTH_LDAP_BIND_CREDENTIAL}"
									},
									{
										"name": "AUTH_LDAP_ALLOW_EMPTY_PASSWORDS",
										"value": "${AUTH_LDAP_ALLOW_EMPTY_PASSWORDS}"
									},
									{
										"name": "AUTH_LDAP_BASE_CTX_DN",
										"value": "${AUTH_LDAP_BASE_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_BASE_FILTER",
										"value": "${AUTH_LDAP_BASE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_RECURSIVE_SEARCH",
										"value": "${AUTH_LDAP_RECURSIVE_SEARCH}"
									},
									{
										"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
										"value": "${AUTH_LDAP_SEARCH_TIME_LIMIT}"
									},
									{
										"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
										"value": "${AUTH_LDAP_ROLE_ATTRIBUTE_ID}"
									},
									{
										"name": "AUTH_LDAP_ROLES_CTX_DN",
										"value": "${AUTH_LDAP_ROLES_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_ROLE_FILTER",
										"value": "${AUTH_LDAP_ROLE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_ROLE_RECURSION",
										"value": "${AUTH_LDAP_ROLE_RECURSION}"
									},
									{
										"name": "AUTH_LDAP_DEFAULT_ROLE",
										"value": "${AUTH_LDAP_DEFAULT_ROLE}"
									},
									{
										"name": "AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES",
										"value": "${AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES}"
									},
									{
										"name": "AUTH_LDAP_REFERRAL_MODE",
										"value": "${AUTH_LDAP_REFERRAL_MODE}"
									},
									{
										"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
										"value": "${AUTH_ROLE_MAPPER_ROLES_PROPERTIES}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_MAPPED}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_NON_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_NON_MAPPED}"
									}
								],
								"image": "rhpam-businesscentral-rhel8",
								"imagePullPolicy": "Always",
								"livenessProbe": {
									"failureThreshold": 36,
									"httpGet": {
										"path": "/rest/healthy",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 180,
									"periodSeconds": 15,
									"timeoutSeconds": 2
								},
								"name": "${APPLICATION_NAME}-rhdmcentr",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8443,
										"name": "https",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"failureThreshold": 36,
									"httpGet": {
										"path": "/rest/ready",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 60,
									"periodSeconds": 5,
									"timeoutSeconds": 2
								},
								"resources": {
									"limits": {
										"cpu": "${DECISION_CENTRAL_CPU_LIMIT}",
										"memory": "${DECISION_CENTRAL_MEMORY_LIMIT}"
									},
									"requests": {
										"cpu": "${DECISION_CENTRAL_CPU_REQUEST}",
										"memory": "${DECISION_CENTRAL_MEMORY_REQUEST}"
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/etc/decisioncentral-secret-volume",
										"name": "decisioncentral-keystore-volume",
										"readOnly": true
									},
									{
										"mountPath": "/opt/kie/data",
										"name": "${APPLICATION_NAME}-rhdmcentr-pvol"
									}
								]
							}
						],
						"serviceAccountName": "${APPLICATION_NAME}-rhdmsvc",
						"terminationGracePeriodSeconds": 60,
						"volumes": [
							{
								"name": "decisioncentral-keystore-volume",
								"secret": {
									"secretName": "${DECISION_CENTRAL_HTTPS_SECRET}"
								}
							},
							{
								"name": "${APPLICATION_NAME}-rhdmcentr-pvol",
								"persistentVolumeClaim": {
									"claimName": "${APPLICATION_NAME}-rhdmcentr-claim"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-rhdmcentr"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "rhpam-businesscentral-rhel8:${IMAGE_STREAM_TAG}",
								"namespace": "${IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver",
					"services.server.kie.org/kie-server-id": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"replicas": 1,
				"revisionHistoryLimit": 10,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver"
				},
				"strategy": {
					"type": "Recreate"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"cluster": "jgrp.k8s.${APPLICATION_NAME}.kieserver",
							"deploymentConfig": "${APPLICATION_NAME}-kieserver",
							"service": "${APPLICATION_NAME}-kieserver",
							"services.server.kie.org/kie-server-id": "${APPLICATION_NAME}-kieserver"
						},
						"name": "${APPLICATION_NAME}-kieserver"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "WORKBENCH_SERVICE_NAME",
										"value": "${APPLICATION_NAME}-rhdmcentr"
									},
									{
										"name": "KIE_ADMIN_USER",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_ADMIN_PWD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_SERVER_MODE",
										"value": "${KIE_SERVER_MODE}"
									},
									{
										"name": "KIE_MBEANS",
										"value": "${KIE_MBEANS}"
									},
									{
										"name": "DROOLS_SERVER_FILTER_CLASSES",
										"value": "${DROOLS_SERVER_FILTER_CLASSES}"
									},
									{
										"name": "KIE_SERVER_DECISIONS_ONLY",
										"value": "${KIE_SERVER_DECISIONS_ONLY}"
									},
									{
										"name": "PROMETHEUS_SERVER_EXT_DISABLED",
										"value": "${PROMETHEUS_SERVER_EXT_DISABLED}"
									},
									{
										"name": "KIE_SERVER_BYPASS_AUTH_USER",
										"value": "${KIE_SERVER_BYPASS_AUTH_USER}"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_SERVICE",
										"value": "${APPLICATION_NAME}-rhdmcentr"
									},
									{
										"name": "KIE_SERVER_CONTROLLER_PROTOCOL",
										"value": "ws"
									},
									{
										"name": "KIE_SERVER_ID",
										"valueFrom": {
											"fieldRef": {
												"fieldPath": "metadata.labels['services.server.kie.org/kie-server-id']"
											}
										}
									},
									{
										"name": "KIE_SERVER_ROUTE_NAME",
										"value": "insecure-${APPLICATION_NAME}-kieserver"
									},
									{
										"name": "KIE_SERVER_STARTUP_STRATEGY",
										"value": "ControllerBasedStartupStrategy"
									},
									{
										"name": "MAVEN_MIRROR_URL",
										"value": "${MAVEN_MIRROR_URL}"
									},
									{
										"name": "MAVEN_MIRROR_OF",
										"value": "${MAVEN_MIRROR_OF}"
									},
									{
										"name": "MAVEN_REPOS",
										"value": "RHDMCENTR,EXTERNAL"
									},
									{
										"name": "RHDMCENTR_MAVEN_REPO_ID",
										"value": "repo-rhdmcentr"
									},
									{
										"name": "RHDMCENTR_MAVEN_REPO_SERVICE",
										"value": "${APPLICATION_NAME}-rhdmcentr"
									},
									{
										"name": "RHDMCENTR_MAVEN_REPO_PATH",
										"value": "/maven2/"
									},
									{
										"name": "RHDMCENTR_MAVEN_REPO_USERNAME",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "RHDMCENTR_MAVEN_REPO_PASSWORD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_ID",
										"value": "${MAVEN_REPO_ID}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_URL",
										"value": "${MAVEN_REPO_URL}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_USERNAME",
										"value": "${MAVEN_REPO_USERNAME}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_PASSWORD",
										"value": "${MAVEN_REPO_PASSWORD}"
									},
									{
										"name": "HTTPS_KEYSTORE_DIR",
										"value": "/etc/kieserver-secret-volume"
									},
									{
										"name": "HTTPS_KEYSTORE",
										"value": "${KIE_SERVER_HTTPS_KEYSTORE}"
									},
									{
										"name": "HTTPS_NAME",
										"value": "${KIE_SERVER_HTTPS_NAME}"
									},
									{
										"name": "HTTPS_PASSWORD",
										"value": "${KIE_SERVER_HTTPS_PASSWORD}"
									},
									{
										"name": "KUBERNETES_NAMESPACE",
										"valueFrom": {
											"fieldRef": {
												"apiVersion": "v1",
												"fieldPath": "metadata.namespace"
											}
										}
									},
									{
										"name": "KUBERNETES_LABELS",
										"value": "cluster=jgrp.k8s.${APPLICATION_NAME}.kieserver"
									},
									{
										"name": "SSO_URL",
										"value": "${SSO_URL}"
									},
									{
										"name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
										"value": "ROOT.war"
									},
									{
										"name": "SSO_REALM",
										"value": "${SSO_REALM}"
									},
									{
										"name": "SSO_SECRET",
										"value": "${KIE_SERVER_SSO_SECRET}"
									},
									{
										"name": "SSO_CLIENT",
										"value": "${KIE_SERVER_SSO_CLIENT}"
									},
									{
										"name": "SSO_USERNAME",
										"value": "${SSO_USERNAME}"
									},
									{
										"name": "SSO_PASSWORD",
										"value": "${SSO_PASSWORD}"
									},
									{
										"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
										"value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"
									},
									{
										"name": "SSO_PRINCIPAL_ATTRIBUTE",
										"value": "${SSO_PRINCIPAL_ATTRIBUTE}"
									},
									{
										"name": "HOSTNAME_HTTP",
										"value": "${KIE_SERVER_HOSTNAME_HTTP}"
									},
									{
										"name": "HOSTNAME_HTTPS",
										"value": "${KIE_SERVER_HOSTNAME_HTTPS}"
									},
									{
										"name": "AUTH_LDAP_URL",
										"value": "${AUTH_LDAP_URL}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_MODULE",
										"value": "${AUTH_LDAP_LOGIN_MODULE}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_FAILOVER",
										"value": "${AUTH_LDAP_LOGIN_FAILOVER}"
									},
									{
										"name": "AUTH_LDAP_BIND_DN",
										"value": "${AUTH_LDAP_BIND_DN}"
									},
									{
										"name": "AUTH_LDAP_BIND_CREDENTIAL",
										"value": "${AUTH_LDAP_BIND_CREDENTIAL}"
									},
									{
										"name": "AUTH_LDAP_ALLOW_EMPTY_PASSWORDS",
										"value": "${AUTH_LDAP_ALLOW_EMPTY_PASSWORDS}"
									},
									{
										"name": "AUTH_LDAP_BASE_CTX_DN",
										"value": "${AUTH_LDAP_BASE_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_BASE_FILTER",
										"value": "${AUTH_LDAP_BASE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_RECURSIVE_SEARCH",
										"value": "${AUTH_LDAP_RECURSIVE_SEARCH}"
									},
									{
										"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
										"value": "${AUTH_LDAP_SEARCH_TIME_LIMIT}"
									},
									{
										"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
										"value": "${AUTH_LDAP_ROLE_ATTRIBUTE_ID}"
									},
									{
										"name": "AUTH_LDAP_ROLES_CTX_DN",
										"value": "${AUTH_LDAP_ROLES_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_ROLE_FILTER",
										"value": "${AUTH_LDAP_ROLE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_ROLE_RECURSION",
										"value": "${AUTH_LDAP_ROLE_RECURSION}"
									},
									{
										"name": "AUTH_LDAP_DEFAULT_ROLE",
										"value": "${AUTH_LDAP_DEFAULT_ROLE}"
									},
									{
										"name": "AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES",
										"value": "${AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES}"
									},
									{
										"name": "AUTH_LDAP_REFERRAL_MODE",
										"value": "${AUTH_LDAP_REFERRAL_MODE}"
									},
									{
										"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
										"value": "${AUTH_ROLE_MAPPER_ROLES_PROPERTIES}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_MAPPED}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_NON_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_NON_MAPPED}"
									}
								],
								"image": "${KIE_SERVER_IMAGE_STREAM_NAME}",
								"imagePullPolicy": "Always",
								"lifecycle": {
									"postStart": {
										"exec": {
											"command": [
												"/bin/sh",
												"/opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh"
											]
										}
									},
									"preStop": {
										"exec": {
											"command": [
												"/bin/sh",
												"/opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh"
											]
										}
									}
								},
								"livenessProbe": {
									"failureThreshold": 3,
									"httpGet": {
										"path": "/services/rest/server/healthcheck",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 180,
									"periodSeconds": 15,
									"timeoutSeconds": 2
								},
								"name": "${APPLICATION_NAME}-kieserver",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8443,
										"name": "https",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"failureThreshold": 36,
									"httpGet": {
										"path": "/services/rest/server/readycheck",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 30,
									"periodSeconds": 5,
									"timeoutSeconds": 2
								},
								"resources": {
									"limits": {
										"cpu": "${KIE_SERVER_CPU_LIMIT}",
										"memory": "${KIE_SERVER_MEMORY_LIMIT}"
									},
									"requests": {
										"cpu": "${KIE_SERVER_CPU_REQUEST}",
										"memory": "${KIE_SERVER_MEMORY_REQUEST}"
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/etc/kieserver-secret-volume",
										"name": "kieserver-keystore-volume",
										"readOnly": true
									}
								]
							}
						],
						"serviceAccountName": "${APPLICATION_NAME}-rhdmsvc",
						"terminationGracePeriodSeconds": 90,
						"volumes": [
							{
								"name": "kieserver-keystore-volume",
								"secret": {
									"secretName": "${KIE_SERVER_HTTPS_SECRET}"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-kieserver"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${KIE_SERVER_IMAGE_STREAM_NAME}:${IMAGE_STREAM_TAG}",
								"namespace": "${IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "PersistentVolumeClaim",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-rhdmcentr"
				},
				"name": "${APPLICATION_NAME}-rhdmcentr-claim"
			},
			"spec": {
				"accessModes": [
					"ReadWriteOnce"
				],
				"resources": {
					"requests": {
						"storage": "${DECISION_CENTRAL_VOLUME_CAPACITY}"
					}
				}
			}
		}
	],
	"parameters": [
		{
			"name": "APPLICATION_NAME",
			"displayName": "Application Name",
			"description": "The name for the application.",
			"value": "myapp",
			"required": true
		},
		{
			"name": "CREDENTIALS_SECRET",
			"displayName": "Credentials secret",
			"description": "Secret containing the KIE_ADMIN_USER and KIE_ADMIN_PWD values.",
			"required": true
		},
		{
			"name": "KIE_SERVER_CONTROLLER_TOKEN",
			"displayName": "KIE Server Controller Token",
			"description": "KIE Server controller token for bearer authentication. (Sets the org.kie.server.controller.token system property)"
		},
		{
			"name": "KIE_SERVER_BYPASS_AUTH_USER",
			"displayName": "KIE Server Bypass Auth User",
			"description": "Allows the KIE Server to bypass the authenticated user for task-related operations, for example, queries. (Sets the org.kie.server.bypass.auth.user system property)",
			"value": "false"
		},
		{
			"name": "KIE_SERVER_MODE",
			"displayName": "KIE Server Mode",
			"description": "The KIE Server mode. Valid values are 'DEVELOPMENT' or 'PRODUCTION'. In production mode, you can not deploy SNAPSHOT versions of artifacts on the KIE Server and can not change the version of an artifact in an existing container. (Sets the org.kie.server.mode system property).",
			"value": "DEVELOPMENT"
		},
		{
			"name": "KIE_MBEANS",
			"displayName": "KIE MBeans",
			"description": "KIE Server mbeans enabled/disabled (Sets the kie.mbeans and kie.scanner.mbeans system properties)",
			"value": "enabled"
		},
		{
			"name": "DROOLS_SERVER_FILTER_CLASSES",
			"displayName": "Drools Server Filter Classes",
			"description": "KIE Server class filtering (Sets the org.drools.server.filter.classes system property)",
			"value": "true"
		},
		{
			"name": "KIE_SERVER_DECISIONS_ONLY",
			"displayName": "KIE Server with Decisions only capabilities",
			"description": "KIE Server capabilities filtering to disable everything that it is not related to decisions (i.e jBPM and case management)",
			"value": "true"
		},
		{
			"name": "PROMETHEUS_SERVER_EXT_DISABLED",
			"displayName": "Prometheus Server Extension Disabled",
			"description": "If set to false, the prometheus server extension will be enabled. (Sets the org.kie.prometheus.server.ext.disabled system property)"
		},
		{
			"name": "DECISION_CENTRAL_HOSTNAME_HTTP",
			"displayName": "Decision Central Custom http Route Hostname",
			"description": "Custom hostname for http service route for Decision Central. Leave blank for default hostname, e.g.: insecure-\u003capplication-name\u003e-rhdmcentr-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "DECISION_CENTRAL_HOSTNAME_HTTPS",
			"displayName": "Decision Central Custom https Route Hostname",
			"description": "Custom hostname for https service route for Decision Central.  Leave blank for default hostname, e.g.: \u003capplication-name\u003e-rhdmcentr-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER_HOSTNAME_HTTP",
			"displayName": "KIE Server Custom http Route Hostname",
			"description": "Custom hostname for http service route for KIE Server. Leave blank for default hostname, e.g.: insecure-\u003capplication-name\u003e-kieserver-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER_HOSTNAME_HTTPS",
			"displayName": "KIE Server Custom https Route Hostname",
			"description": "Custom hostname for https service route for KIE Server.  Leave blank for default hostname, e.g.: \u003capplication-name\u003e-kieserver-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "DECISION_CENTRAL_HTTPS_SECRET",
			"displayName": "Decision Central Server Keystore Secret Name",
			"description": "The name of the secret containing the keystore file for Decision Central.",
			"required": true
		},
		{
			"name": "DECISION_CENTRAL_HTTPS_KEYSTORE",
			"displayName": "Decision Central Server Keystore Filename",
			"description": "The name of the keystore file within the secret.",
			"value": "keystore.jks"
		},
		{
			"name": "DECISION_CENTRAL_HTTPS_NAME",
			"displayName": "Decision Central Server Certificate Name",
			"description": "The name associated with the server certificate.",
			"value": "jboss"
		},
		{
			"name": "DECISION_CENTRAL_HTTPS_PASSWORD",
			"displayName": "Decision Central Server Keystore Password",
			"description": "The password for the keystore and certificate.",
			"value": "mykeystorepass"
		},
		{
			"name": "KIE_SERVER_HTTPS_SECRET",
			"displayName": "KIE Server Keystore Secret Name",
			"description": "The name of the secret containing the keystore file.",
			"required": true
		},
		{
			"name": "KIE_SERVER_HTTPS_KEYSTORE",
			"displayName": "KIE Server Keystore Filename",
			"description": "The name of the keystore file within the secret.",
			"value": "keystore.jks"
		},
		{
			"name": "KIE_SERVER_HTTPS_NAME",
			"displayName": "KIE Server Certificate Name",
			"description": "The name associated with the server certificate.",
			"value": "jboss"
		},
		{
			"name": "KIE_SERVER_HTTPS_PASSWORD",
			"displayName": "KIE Server Keystore Password",
			"description": "The password for the keystore and certificate.",
			"value": "mykeystorepass"
		},
		{
			"name": "KIE_SERVER_CONTROLLER_OPENSHIFT_GLOBAL_DISCOVERY_ENABLED",
			"displayName": "Enable KIE Server global discovery",
			"description": "If set to true, turns on KIE Server global discovery feature (Sets the org.kie.server.controller.openshift.global.discovery.enabled system property)",
			"value": "false"
		},
		{
			"name": "KIE_SERVER_CONTROLLER_OPENSHIFT_PREFER_KIESERVER_SERVICE",
			"displayName": "Prefer KIE Server OpenShift Service",
			"description": "If OpenShift integration of Business Central is turned on, setting this parameter to true enables connection to KIE Server via an OpenShift internal Service endpoint. (Sets the org.kie.server.controller.openshift.prefer.kieserver.service system property)",
			"value": "true"
		},
		{
			"name": "KIE_SERVER_CONTROLLER_TEMPLATE_CACHE_TTL",
			"displayName": "KIE ServerTemplate Cache TTL",
			"description": "KIE ServerTemplate Cache TTL in milliseconds. (Sets the org.kie.server.controller.template.cache.ttl system property)",
			"value": "60000"
		},
		{
			"name": "IMAGE_STREAM_NAMESPACE",
			"displayName": "ImageStream Namespace",
			"description": "Namespace in which the ImageStreams for Red Hat Decision Manager images are installed. These ImageStreams are normally installed in the openshift namespace. You need to modify this parameter only if you installed the ImageStreams in a different namespace/project.",
			"value": "openshift",
			"required": true
		},
		{
			"name": "KIE_SERVER_IMAGE_STREAM_NAME",
			"displayName": "KIE Server ImageStream Name",
			"description": "The name of the image stream to use for KIE Server. Default is \"rhpam-kieserver-rhel8\".",
			"value": "rhpam-kieserver-rhel8",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_TAG",
			"displayName": "ImageStream Tag",
			"description": "A named pointer to an image in an image stream. Default is \"7.13.0\".",
			"value": "7.13.0",
			"required": true
		},
		{
			"name": "MAVEN_MIRROR_URL",
			"displayName": "Maven mirror URL",
			"description": "Maven mirror that Decision Central and KIE Server must use. If you configure a mirror, this mirror must contain all artifacts that are required for building and deploying your services."
		},
		{
			"name": "MAVEN_MIRROR_OF",
			"displayName": "Maven mirror of",
			"description": "Maven mirror configuration for KIE Server.",
			"value": "external:*,!repo-rhdmcentr"
		},
		{
			"name": "MAVEN_REPO_ID",
			"displayName": "Maven repository ID",
			"description": "The id to use for the maven repository. If set, it can be excluded from the optionally configured mirror by adding it to MAVEN_MIRROR_OF. For example: external:*,!repo-rhdmcentr,!repo-custom. If MAVEN_MIRROR_URL is set but MAVEN_MIRROR_ID is not set, an id will be generated randomly, but won't be usable in MAVEN_MIRROR_OF.",
			"value": "repo-custom"
		},
		{
			"name": "MAVEN_REPO_URL",
			"displayName": "Maven repository URL",
			"description": "Fully qualified URL to a Maven repository or service."
		},
		{
			"name": "MAVEN_REPO_USERNAME",
			"displayName": "Maven repository user name",
			"description": "User name for accessing the Maven repository, if required."
		},
		{
			"name": "MAVEN_REPO_PASSWORD",
			"displayName": "Maven repository password",
			"description": "Password to access the Maven repository, if required."
		},
		{
			"name": "GIT_HOOKS_DIR",
			"displayName": "Git hooks directory",
			"description": "The directory to use for git hooks, if required."
		},
		{
			"name": "DECISION_CENTRAL_VOLUME_CAPACITY",
			"displayName": "Decision Central Volume Capacity",
			"description": "Size of the persistent storage for Decision Central's runtime data.",
			"value": "1Gi",
			"required": true
		},
		{
			"name": "DECISION_CENTRAL_MEMORY_LIMIT",
			"displayName": "Decision Central Container Memory Limit",
			"description": "Decision Central Container memory limit.",
			"value": "4Gi",
			"required": true
		},
		{
			"name": "DECISION_CENTRAL_CPU_LIMIT",
			"displayName": "Decision Central Container CPU Limit",
			"description": "Decision Central Container CPU limit.",
			"value": "2",
			"required": true
		},
		{
			"name": "DECISION_CENTRAL_MEMORY_REQUEST",
			"displayName": "Decision Central Container Memory Request",
			"description": "Decision Central Container memory request.",
			"value": "3Gi",
			"required": true
		},
		{
			"name": "DECISION_CENTRAL_CPU_REQUEST",
			"displayName": "Decision Central Container CPU Request",
			"description": "Decision Central Container CPU request.",
			"value": "1500m",
			"required": true
		},
		{
			"name": "KIE_SERVER_MEMORY_LIMIT",
			"displayName": "KIE Server Container Memory Limit",
			"description": "KIE Server Container memory limit.",
			"value": "2Gi",
			"required": true
		},
		{
			"name": "KIE_SERVER_MEMORY_REQUEST",
			"displayName": "KIE Server Container Memory Request",
			"description": "KIE Server Container memory Request.",
			"value": "1536Mi",
			"required": true
		},
		{
			"name": "KIE_SERVER_CPU_LIMIT",
			"displayName": "KIE Server Container CPU Limit",
			"description": "KIE Server Container CPU limit.",
			"value": "1",
			"required": true
		},
		{
			"name": "KIE_SERVER_CPU_REQUEST",
			"displayName": "KIE Server Container CPU Request",
			"description": "KIE Server Container CPU Request.",
			"value": "750m",
			"required": true
		},
		{
			"name": "SSO_URL",
			"displayName": "RH-SSO URL",
			"description": "RH-SSO URL."
		},
		{
			"name": "SSO_REALM",
			"displayName": "RH-SSO Realm name",
			"description": "RH-SSO Realm name."
		},
		{
			"name": "DECISION_CENTRAL_SSO_CLIENT",
			"displayName": "Decision Central RH-SSO Client name",
			"description": "Decision Central RH-SSO Client name"
		},
		{
			"name": "DECISION_CENTRAL_SSO_SECRET",
			"displayName": "Decision Central RH-SSO Client Secret",
			"description": "Decision Central RH-SSO Client Secret."
		},
		{
			"name": "KIE_SERVER_SSO_CLIENT",
			"displayName": "KIE Server RH-SSO Client name",
			"description": "KIE Server RH-SSO Client name."
		},
		{
			"name": "KIE_SERVER_SSO_SECRET",
			"displayName": "KIE Server RH-SSO Client Secret",
			"description": "KIE Server RH-SSO Client Secret."
		},
		{
			"name": "SSO_USERNAME",
			"displayName": "RH-SSO Realm admin user name",
			"description": "RH-SSO Realm admin user name used to create the Client if it doesn't exist."
		},
		{
			"name": "SSO_PASSWORD",
			"displayName": "RH-SSO Realm Admin Password",
			"description": "RH-SSO Realm Admin Password used to create the Client."
		},
		{
			"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
			"displayName": "RH-SSO Disable SSL Certificate Validation",
			"description": "RH-SSO Disable SSL Certificate Validation.",
			"value": "false"
		},
		{
			"name": "SSO_PRINCIPAL_ATTRIBUTE",
			"displayName": "RH-SSO Principal Attribute",
			"description": "RH-SSO Principal Attribute to use as user name.",
			"value": "preferred_username"
		},
		{
			"name": "AUTH_LDAP_URL",
			"displayName": "LDAP Endpoint",
			"description": "LDAP endpoint to connect for authentication. For failover, set two or more LDAP endpoints separated by space."
		},
		{
			"name": "AUTH_LDAP_LOGIN_MODULE",
			"displayName": "LDAP Flag Login Module",
			"description": "LDAP login module flag, adds backward compatibility with the legacy security subsystem on Elytron. 'optional' is the only supported value, if set, it will create a distributed realm on Elytron configuration with LDAP and FileSystem realms with the user added using the KIE_ADMIN_USER."
		},
		{
			"name": "AUTH_LDAP_LOGIN_FAILOVER",
			"displayName": "LDAP login failover",
			"description": "Enable failover, if LDAP Url is unreachable, it will fail over to the KieFsRealm."
		},
		{
			"name": "AUTH_LDAP_BIND_DN",
			"displayName": "LDAP Bind DN",
			"description": "Bind DN used for authentication."
		},
		{
			"name": "AUTH_LDAP_BIND_CREDENTIAL",
			"displayName": "LDAP Bind Credentials",
			"description": "LDAP Credentials used for authentication."
		},
		{
			"name": "AUTH_LDAP_ALLOW_EMPTY_PASSWORDS",
			"displayName": "Allow Empty Passwords",
			"description": "Does this realm support blank password direct verification? Blank password attempt will be rejected otherwise. Boolean flag, defaults to false."
		},
		{
			"name": "AUTH_LDAP_BASE_CTX_DN",
			"displayName": "LDAP Base DN",
			"description": "LDAP Base DN of the top-level context to begin the user search."
		},
		{
			"name": "AUTH_LDAP_BASE_FILTER",
			"displayName": "LDAP Base Search filter",
			"description": "LDAP search filter used to locate the context of the user to authenticate. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. A common example for the search filter is (uid={0})."
		},
		{
			"name": "AUTH_LDAP_RECURSIVE_SEARCH",
			"displayName": "LDAP User resursive search",
			"description": "Indicates if the user queries are recursive."
		},
		{
			"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
			"displayName": "LDAP Search time limit",
			"description": "The timeout in milliseconds for user or role searches."
		},
		{
			"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
			"displayName": "LDAP Role attributeID",
			"description": "Name of the attribute containing the user roles."
		},
		{
			"name": "AUTH_LDAP_ROLES_CTX_DN",
			"displayName": "LDAP Roles Search DN",
			"description": "The fixed DN of the context to search for user roles. This is not the DN where the actual roles are, but the DN where the objects containing the user roles are. For example, in a Microsoft Active Directory server, this is the DN where the user account is."
		},
		{
			"name": "AUTH_LDAP_ROLE_FILTER",
			"displayName": "LDAP Role search filter",
			"description": "A search filter used to locate the roles associated with the authenticated user. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. The authenticated userDN is substituted into the filter anywhere a {1} is used. An example search filter that matches on the input username is (member={0}). An alternative that matches on the authenticated userDN is (member={1})."
		},
		{
			"name": "AUTH_LDAP_ROLE_RECURSION",
			"displayName": "LDAP Role recursion",
			"description": "The number of levels of recursion the role search will go below a matching context. Disable recursion by setting this to 0."
		},
		{
			"name": "AUTH_LDAP_DEFAULT_ROLE",
			"displayName": "LDAP Default role",
			"description": "A role included for all authenticated users"
		},
		{
			"name": "AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES",
			"displayName": "LDAP new identity attributes",
			"description": "Provide new identities for LDAP  identity mapping, the pattern to be used with this env is 'attribute_name=attribute_value;another_attribute_name=value'"
		},
		{
			"name": "AUTH_LDAP_REFERRAL_MODE",
			"displayName": "LDAP follow referrals",
			"description": "If LDAP referrals should be followed. Corresponds to REFERRAL ('java.naming.referral') environment property. Allowed values: 'ignore', 'follow', 'throw'"
		},
		{
			"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
			"displayName": "Role Mapping roles properties file path or one lined roles",
			"description": "When present, the RoleMapping will be configured to use the provided properties file or roles. This parameter defines the fully-qualified file path and name of a properties file or a set of roles with the following pattern 'role=role1;another-role=role2'. The format of every entry in the file is original_role=role1,role2,role3"
		},
		{
			"name": "AUTH_LDAP_MAPPER_KEEP_MAPPED",
			"displayName": "Role Mapper Keep Mapped",
			"description": "When set to 'true' the mapped roles will retain all roles, that have defined mappings. Defaults to false."
		},
		{
			"name": "AUTH_LDAP_MAPPER_KEEP_NON_MAPPED",
			"displayName": "Role Mapper Keep Non Mapped",
			"description": "When set to 'true' the mapped roles will retain all roles, that have no defined mappings. Defaults to false."
		}
	],
	"labels": {
		"rhdm": "7.13",
		"template": "rhdm713-authoring"
	}
}