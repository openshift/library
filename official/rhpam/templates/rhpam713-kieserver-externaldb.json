{
	"kind": "Template",
	"apiVersion": "v1",
	"metadata": {
		"name": "rhpam713-kieserver-externaldb",
		"creationTimestamp": null,
		"annotations": {
			"description": "Application template for a managed KIE Server with an external database, for Red Hat Process Automation Manager 7.13 - Deprecated",
			"iconClass": "icon-jboss",
			"openshift.io/display-name": "Red Hat Process Automation Manager 7.13 managed KIE Server with an external database",
			"openshift.io/provider-display-name": "Red Hat, Inc.",
			"tags": "rhpam,processserver,jboss,kieserver,externaldb",
			"template.openshift.io/bindable": "false",
			"template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.13/html/deploying_a_red_hat_process_automation_manager_7.13_managed_server_environment_on_red_hat_openshift_container_platform/",
			"template.openshift.io/long-description": "This template defines resources needed to execute Rules and Processes on Red Hat Process Automation Manager KIE Server 7.13, including application deployment configuration, secure and insecure http communication, using a external database. Template for Red Hat OpenShift Container Platform version 3.11. Deprecated since Red Hat Process Automation Manager version 7.5; consider using the Red Hat Business Automation Operator.",
			"template.openshift.io/support-url": "https://access.redhat.com",
			"version": "7.13"
		}
	},
	"message": "A new Process Automation Manager KIE Server application have been created in your project.\nThe username/password needed for accessing the application are stored in \"${CREDENTIALS_SECRET}\" secret as\nKIE_ADMIN_USER and KIE_ADMIN_PWD\n\nYou must create the secret named \"${CREDENTIALS_SECRET}\" containing the KIE_ADMIN_USER and KIE_ADMIN_PWD values and the secret named \"${KIE_SERVER_HTTPS_SECRET}\" containing the ${KIE_SERVER_HTTPS_KEYSTORE} file used for serving secure content.",
	"objects": [
		{
			"apiVersion": "v1",
			"kind": "ServiceAccount",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			}
		},
		{
			"apiVersion": "v1",
			"kind": "RoleBinding",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-kieserver-edit"
			},
			"roleRef": {
				"name": "edit"
			},
			"subjects": [
				{
					"kind": "ServiceAccount",
					"name": "${APPLICATION_NAME}-kieserver"
				}
			]
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "All the KIE Server web server's ports."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"ports": [
					{
						"name": "http",
						"port": 8080,
						"targetPort": 8080
					},
					{
						"name": "https",
						"port": 8443,
						"targetPort": 8443
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver"
				},
				"sessionAffinity": "ClientIP",
				"sessionAffinityConfig": {
					"clientIP": {
						"timeoutSeconds": 3600
					}
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "insecure-${APPLICATION_NAME}-kieserver-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for KIE Server's http service.",
					"haproxy.router.openshift.io/balance": "source"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "insecure-${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"host": "${KIE_SERVER_HOSTNAME_HTTP}",
				"port": {
					"targetPort": "http"
				},
				"to": {
					"name": "${APPLICATION_NAME}-kieserver"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-kieserver-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for KIE Server's https service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"host": "${KIE_SERVER_HOSTNAME_HTTPS}",
				"port": {
					"targetPort": "https"
				},
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "${APPLICATION_NAME}-kieserver"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "ImageStream",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			}
		},
		{
			"apiVersion": "v1",
			"kind": "BuildConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"output": {
					"to": {
						"kind": "ImageStreamTag",
						"name": "${APPLICATION_NAME}-kieserver:latest"
					}
				},
				"source": {
					"images": [
						{
							"from": {
								"kind": "ImageStreamTag",
								"name": "${EXTENSIONS_IMAGE}",
								"namespace": "${EXTENSIONS_IMAGE_NAMESPACE}"
							},
							"paths": [
								{
									"destinationDir": "./extensions/extras",
									"sourcePath": "${EXTENSIONS_INSTALL_DIR}/."
								}
							]
						}
					]
				},
				"strategy": {
					"sourceStrategy": {
						"env": [
							{
								"name": "CUSTOM_INSTALL_DIRECTORIES",
								"value": "extensions/*"
							}
						],
						"forcePull": true,
						"from": {
							"kind": "ImageStreamTag",
							"name": "${KIE_SERVER_IMAGE_STREAM_NAME}:${IMAGE_STREAM_TAG}",
							"namespace": "${IMAGE_STREAM_NAMESPACE}"
						}
					},
					"type": "Source"
				},
				"triggers": [
					{
						"imageChange": {},
						"type": "ImageChange"
					},
					{
						"imageChange": {
							"from": {
								"kind": "ImageStreamTag",
								"name": "${EXTENSIONS_IMAGE}",
								"namespace": "${EXTENSIONS_IMAGE_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver",
					"services.server.kie.org/kie-server-id": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"replicas": 1,
				"revisionHistoryLimit": 10,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver"
				},
				"strategy": {
					"rollingParams": {
						"maxSurge": "100%",
						"maxUnavailable": 0
					},
					"type": "Rolling"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"cluster": "jgrp.k8s.${APPLICATION_NAME}.kieserver",
							"deploymentConfig": "${APPLICATION_NAME}-kieserver",
							"service": "${APPLICATION_NAME}-kieserver",
							"services.server.kie.org/kie-server-id": "${APPLICATION_NAME}-kieserver"
						},
						"name": "${APPLICATION_NAME}-kieserver"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "WORKBENCH_SERVICE_NAME",
										"value": "${BUSINESS_CENTRAL_SERVICE}"
									},
									{
										"name": "KIE_ADMIN_USER",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_ADMIN_PWD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_SERVER_MODE",
										"value": "${KIE_SERVER_MODE}"
									},
									{
										"name": "KIE_MBEANS",
										"value": "${KIE_MBEANS}"
									},
									{
										"name": "DROOLS_SERVER_FILTER_CLASSES",
										"value": "${DROOLS_SERVER_FILTER_CLASSES}"
									},
									{
										"name": "PROMETHEUS_SERVER_EXT_DISABLED",
										"value": "${PROMETHEUS_SERVER_EXT_DISABLED}"
									},
									{
										"name": "KIE_SERVER_BYPASS_AUTH_USER",
										"value": "${KIE_SERVER_BYPASS_AUTH_USER}"
									},
									{
										"name": "KIE_SERVER_ID",
										"valueFrom": {
											"fieldRef": {
												"fieldPath": "metadata.labels['services.server.kie.org/kie-server-id']"
											}
										}
									},
									{
										"name": "KIE_SERVER_ROUTE_NAME",
										"value": "${APPLICATION_NAME}-kieserver"
									},
									{
										"name": "KIE_SERVER_CONTAINER_DEPLOYMENT",
										"value": "${KIE_SERVER_CONTAINER_DEPLOYMENT}"
									},
									{
										"name": "MAVEN_MIRROR_URL",
										"value": "${MAVEN_MIRROR_URL}"
									},
									{
										"name": "MAVEN_MIRROR_OF",
										"value": "${MAVEN_MIRROR_OF}"
									},
									{
										"name": "MAVEN_REPOS",
										"value": "RHPAMCENTR,EXTERNAL"
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_ID",
										"value": "repo-rhpamcentr"
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_SERVICE",
										"value": "${BUSINESS_CENTRAL_SERVICE}"
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_PATH",
										"value": "/maven2/"
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_USERNAME",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "RHPAMCENTR_MAVEN_REPO_PASSWORD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_ID",
										"value": "${MAVEN_REPO_ID}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_URL",
										"value": "${MAVEN_REPO_URL}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_USERNAME",
										"value": "${MAVEN_REPO_USERNAME}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_PASSWORD",
										"value": "${MAVEN_REPO_PASSWORD}"
									},
									{
										"name": "KIE_SERVER_MGMT_DISABLED",
										"value": "${KIE_SERVER_MGMT_DISABLED}"
									},
									{
										"name": "KIE_SERVER_STARTUP_STRATEGY",
										"value": "OpenShiftStartupStrategy"
									},
									{
										"name": "KIE_SERVER_PERSISTENCE_DS",
										"value": "${KIE_SERVER_EXTERNALDB_JNDI}"
									},
									{
										"name": "KIE_SERVER_PERSISTENCE_SCHEMA",
										"value": "${KIE_SERVER_PERSISTENCE_SCHEMA}"
									},
									{
										"name": "KIE_SERVER_PERSISTENCE_DIALECT",
										"value": "${KIE_SERVER_EXTERNALDB_DIALECT}"
									},
									{
										"name": "DATASOURCES",
										"value": "RHPAM"
									},
									{
										"name": "RHPAM_DATABASE",
										"value": "${KIE_SERVER_EXTERNALDB_DB}"
									},
									{
										"name": "RHPAM_SERVICE_HOST",
										"value": "${KIE_SERVER_EXTERNALDB_SERVICE_HOST}"
									},
									{
										"name": "RHPAM_SERVICE_PORT",
										"value": "${KIE_SERVER_EXTERNALDB_SERVICE_PORT}"
									},
									{
										"name": "RHPAM_JNDI",
										"value": "${KIE_SERVER_EXTERNALDB_JNDI}"
									},
									{
										"name": "RHPAM_DRIVER",
										"value": "${KIE_SERVER_EXTERNALDB_DRIVER}"
									},
									{
										"name": "RHPAM_USERNAME",
										"value": "${KIE_SERVER_EXTERNALDB_USER}"
									},
									{
										"name": "RHPAM_PASSWORD",
										"value": "${KIE_SERVER_EXTERNALDB_PWD}"
									},
									{
										"name": "RHPAM_NONXA",
										"value": "${KIE_SERVER_EXTERNALDB_NONXA}"
									},
									{
										"name": "RHPAM_URL",
										"value": "${KIE_SERVER_EXTERNALDB_URL}"
									},
									{
										"name": "RHPAM_XA_CONNECTION_PROPERTY_URL",
										"value": "${KIE_SERVER_EXTERNALDB_URL}"
									},
									{
										"name": "RHPAM_MIN_POOL_SIZE",
										"value": "${KIE_SERVER_EXTERNALDB_MIN_POOL_SIZE}"
									},
									{
										"name": "RHPAM_MAX_POOL_SIZE",
										"value": "${KIE_SERVER_EXTERNALDB_MAX_POOL_SIZE}"
									},
									{
										"name": "RHPAM_CONNECTION_CHECKER",
										"value": "${KIE_SERVER_EXTERNALDB_CONNECTION_CHECKER}"
									},
									{
										"name": "RHPAM_EXCEPTION_SORTER",
										"value": "${KIE_SERVER_EXTERNALDB_EXCEPTION_SORTER}"
									},
									{
										"name": "RHPAM_BACKGROUND_VALIDATION",
										"value": "${KIE_SERVER_EXTERNALDB_BACKGROUND_VALIDATION}"
									},
									{
										"name": "RHPAM_VALIDATION_MILLIS",
										"value": "${KIE_SERVER_EXTERNALDB_BACKGROUND_VALIDATION_MILLIS}"
									},
									{
										"name": "RHPAM_DRIVER_TYPE",
										"value": "${KIE_SERVER_EXTERNALDB_DRIVER_TYPE}"
									},
									{
										"name": "RHPAM_JTA",
										"value": "true"
									},
									{
										"name": "TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL",
										"value": "${TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL}"
									},
									{
										"name": "HTTPS_KEYSTORE_DIR",
										"value": "/etc/kieserver-secret-volume"
									},
									{
										"name": "HTTPS_KEYSTORE",
										"value": "${KIE_SERVER_HTTPS_KEYSTORE}"
									},
									{
										"name": "HTTPS_NAME",
										"value": "${KIE_SERVER_HTTPS_NAME}"
									},
									{
										"name": "HTTPS_PASSWORD",
										"value": "${KIE_SERVER_HTTPS_PASSWORD}"
									},
									{
										"name": "JGROUPS_PING_PROTOCOL",
										"value": "kubernetes.KUBE_PING"
									},
									{
										"name": "KUBERNETES_NAMESPACE",
										"valueFrom": {
											"fieldRef": {
												"fieldPath": "metadata.namespace"
											}
										}
									},
									{
										"name": "KUBERNETES_LABELS",
										"value": "cluster=jgrp.k8s.${APPLICATION_NAME}.kieserver"
									},
									{
										"name": "SSO_URL",
										"value": "${SSO_URL}"
									},
									{
										"name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
										"value": "ROOT.war"
									},
									{
										"name": "SSO_REALM",
										"value": "${SSO_REALM}"
									},
									{
										"name": "SSO_SECRET",
										"value": "${KIE_SERVER_SSO_SECRET}"
									},
									{
										"name": "SSO_CLIENT",
										"value": "${KIE_SERVER_SSO_CLIENT}"
									},
									{
										"name": "SSO_USERNAME",
										"value": "${SSO_USERNAME}"
									},
									{
										"name": "SSO_PASSWORD",
										"value": "${SSO_PASSWORD}"
									},
									{
										"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
										"value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"
									},
									{
										"name": "SSO_PRINCIPAL_ATTRIBUTE",
										"value": "${SSO_PRINCIPAL_ATTRIBUTE}"
									},
									{
										"name": "HOSTNAME_HTTP",
										"value": "${KIE_SERVER_HOSTNAME_HTTP}"
									},
									{
										"name": "HOSTNAME_HTTPS",
										"value": "${KIE_SERVER_HOSTNAME_HTTPS}"
									},
									{
										"name": "AUTH_LDAP_URL",
										"value": "${AUTH_LDAP_URL}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_MODULE",
										"value": "${AUTH_LDAP_LOGIN_MODULE}"
									},
									{
										"name": "AUTH_LDAP_LOGIN_FAILOVER",
										"value": "${AUTH_LDAP_LOGIN_FAILOVER}"
									},
									{
										"name": "AUTH_LDAP_BIND_DN",
										"value": "${AUTH_LDAP_BIND_DN}"
									},
									{
										"name": "AUTH_LDAP_BIND_CREDENTIAL",
										"value": "${AUTH_LDAP_BIND_CREDENTIAL}"
									},
									{
										"name": "AUTH_LDAP_ALLOW_EMPTY_PASSWORDS",
										"value": "${AUTH_LDAP_ALLOW_EMPTY_PASSWORDS}"
									},
									{
										"name": "AUTH_LDAP_BASE_CTX_DN",
										"value": "${AUTH_LDAP_BASE_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_BASE_FILTER",
										"value": "${AUTH_LDAP_BASE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_RECURSIVE_SEARCH",
										"value": "${AUTH_LDAP_RECURSIVE_SEARCH}"
									},
									{
										"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
										"value": "${AUTH_LDAP_SEARCH_TIME_LIMIT}"
									},
									{
										"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
										"value": "${AUTH_LDAP_ROLE_ATTRIBUTE_ID}"
									},
									{
										"name": "AUTH_LDAP_ROLES_CTX_DN",
										"value": "${AUTH_LDAP_ROLES_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_ROLE_FILTER",
										"value": "${AUTH_LDAP_ROLE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_ROLE_RECURSION",
										"value": "${AUTH_LDAP_ROLE_RECURSION}"
									},
									{
										"name": "AUTH_LDAP_DEFAULT_ROLE",
										"value": "${AUTH_LDAP_DEFAULT_ROLE}"
									},
									{
										"name": "AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES",
										"value": "${AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES}"
									},
									{
										"name": "AUTH_LDAP_REFERRAL_MODE",
										"value": "${AUTH_LDAP_REFERRAL_MODE}"
									},
									{
										"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
										"value": "${AUTH_ROLE_MAPPER_ROLES_PROPERTIES}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_MAPPED}"
									},
									{
										"name": "AUTH_LDAP_MAPPER_KEEP_NON_MAPPED",
										"value": "${AUTH_LDAP_MAPPER_KEEP_NON_MAPPED}"
									}
								],
								"image": "${KIE_SERVER_IMAGE_STREAM_NAME}",
								"imagePullPolicy": "Always",
								"lifecycle": {
									"postStart": {
										"exec": {
											"command": [
												"/bin/sh",
												"/opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh"
											]
										}
									},
									"preStop": {
										"exec": {
											"command": [
												"/bin/sh",
												"/opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh"
											]
										}
									}
								},
								"livenessProbe": {
									"failureThreshold": 3,
									"httpGet": {
										"path": "/services/rest/server/healthcheck",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 180,
									"periodSeconds": 15,
									"timeoutSeconds": 2
								},
								"name": "${APPLICATION_NAME}-kieserver",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8443,
										"name": "https",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"failureThreshold": 36,
									"httpGet": {
										"path": "/services/rest/server/readycheck",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 30,
									"periodSeconds": 5,
									"timeoutSeconds": 2
								},
								"resources": {
									"limits": {
										"cpu": "${KIE_SERVER_CPU_LIMIT}",
										"memory": "${KIE_SERVER_MEMORY_LIMIT}"
									},
									"requests": {
										"cpu": "${KIE_SERVER_CPU_REQUEST}",
										"memory": "${KIE_SERVER_MEMORY_REQUEST}"
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/etc/kieserver-secret-volume",
										"name": "kieserver-keystore-volume",
										"readOnly": true
									}
								]
							}
						],
						"serviceAccountName": "${APPLICATION_NAME}-kieserver",
						"terminationGracePeriodSeconds": 90,
						"volumes": [
							{
								"name": "kieserver-keystore-volume",
								"secret": {
									"secretName": "${KIE_SERVER_HTTPS_SECRET}"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-kieserver"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${APPLICATION_NAME}-kieserver:latest"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		}
	],
	"parameters": [
		{
			"name": "APPLICATION_NAME",
			"displayName": "Application Name",
			"description": "The name for the application.",
			"value": "myapp",
			"required": true
		},
		{
			"name": "MAVEN_MIRROR_URL",
			"displayName": "Maven mirror URL",
			"description": "Maven mirror that the KIE Server must use. If you configure a mirror, this mirror must contain all artifacts that are required for deploying your services."
		},
		{
			"name": "MAVEN_MIRROR_OF",
			"displayName": "Maven mirror of",
			"description": "Maven mirror configuration for KIE Server.",
			"value": "external:*"
		},
		{
			"name": "MAVEN_REPO_ID",
			"displayName": "Maven repository ID",
			"description": "The id to use for the maven repository. If set, it can be excluded from the optionally configured mirror by adding it to MAVEN_MIRROR_OF. For example: external:*,!repo-rhpamcentr,!repo-custom. If MAVEN_MIRROR_URL is set but MAVEN_MIRROR_ID is not set, an id will be generated randomly, but won't be usable in MAVEN_MIRROR_OF.",
			"value": "repo-custom"
		},
		{
			"name": "MAVEN_REPO_URL",
			"displayName": "Maven repository URL",
			"description": "Fully qualified URL to a Maven repository or service."
		},
		{
			"name": "MAVEN_REPO_USERNAME",
			"displayName": "Maven repository user name",
			"description": "User name for accessing the Maven repository, if required."
		},
		{
			"name": "MAVEN_REPO_PASSWORD",
			"displayName": "Maven repository password",
			"description": "Password to access the Maven repository, if required."
		},
		{
			"name": "BUSINESS_CENTRAL_SERVICE",
			"displayName": "Name of the Business Central service",
			"description": "The Service name for the optional Business Central, where it can be reached, to allow service lookups (for example,  maven repo usage), if required."
		},
		{
			"name": "CREDENTIALS_SECRET",
			"displayName": "Credentials secret",
			"description": "Secret containing the KIE_ADMIN_USER and KIE_ADMIN_PWD values",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_NAMESPACE",
			"displayName": "ImageStream Namespace",
			"description": "Namespace in which the ImageStreams for Red Hat Process Automation Manager images are installed. These ImageStreams are normally installed in the openshift namespace. You need to modify this parameter only if you installed the ImageStream in a different namespace/project. Default is \"openshift\".",
			"value": "openshift",
			"required": true
		},
		{
			"name": "KIE_SERVER_IMAGE_STREAM_NAME",
			"displayName": "KIE Server ImageStream Name",
			"description": "The name of the image stream to use for KIE Server. Default is \"rhpam-kieserver-rhel8\".",
			"value": "rhpam-kieserver-rhel8",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_TAG",
			"displayName": "ImageStream Tag",
			"description": "A named pointer to an image in an image stream. Default is \"7.13.0\".",
			"value": "7.13.0",
			"required": true
		},
		{
			"name": "KIE_SERVER_PERSISTENCE_SCHEMA",
			"displayName": "KIE Server Persistence Schema",
			"description": "Hibernate persistence schema."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_DIALECT",
			"displayName": "KIE Server External Database Dialect",
			"description": "KIE Server external database Hibernate dialect.",
			"required": true
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_SERVICE_HOST",
			"displayName": "Datasource Service Host",
			"description": "Sets the datasource service host. Use this if you want to use the predefined mysql or postgresql datasource properties. Leave blank if the KIE_SERVER_EXTERNALDB_URL parameter is set."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_SERVICE_PORT",
			"displayName": "Database service Port",
			"description": "Sets the datasource service port. Use this if you want to use the predefined mysql or postgresql datasource properties. Leave blank if the KIE_SERVER_EXTERNALDB_URL parameter is set."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_NONXA",
			"displayName": "Non XA datasource",
			"description": "Sets the datasources type. It can be XA or NONXA. For non XA set it to true. Default value is true."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_URL",
			"displayName": "KIE Server External Database URL",
			"description": "Sets the datasource jdbc connection url. Note that, if you are using PostgreSQL do not use this field, use the SERVICE_HOST and PORT. If using SERVICE_PORT and HOST there is no need to fill this parameter."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_DRIVER",
			"displayName": "KIE Server External Database Driver",
			"description": "The predefined driver name, available values are mysql, postgresql or the preferred name for the external driver.",
			"required": true
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_JNDI",
			"displayName": "Database JNDI Name",
			"description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS.",
			"value": "java:jboss/datasources/jbpmDS",
			"required": true
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_DB",
			"displayName": "KIE Server External Database name",
			"description": "KIE Server external database name. Leave blank if the KIE_SERVER_EXTERNALDB_URL is set."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_USER",
			"displayName": "KIE Server External Database User",
			"description": "KIE Server external database user name.",
			"required": true
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_PWD",
			"displayName": "KIE Server External Database Password",
			"description": "KIE Server external database password.",
			"required": true
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_MIN_POOL_SIZE",
			"displayName": "Datasource Minimum Pool Size",
			"description": "Sets xa-pool/min-pool-size for the configured datasource."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_MAX_POOL_SIZE",
			"displayName": "Datasource Maximum Pool Size",
			"description": "Sets xa-pool/max-pool-size for the configured datasource."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_CONNECTION_CHECKER",
			"displayName": "JDBC Connection Checker class",
			"description": "An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides a SQLException isValidConnection(Connection e) method to validate if a connection is valid."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_EXCEPTION_SORTER",
			"displayName": "JDBC Exception Sorter class",
			"description": "An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides a boolean isExceptionFatal(SQLException e) method to validate if an exception should be broadcast to all javax.resource.spi.ConnectionEventListener as a connectionErrorOccurred."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_BACKGROUND_VALIDATION",
			"displayName": "JDBC background validation",
			"description": "Sets the sql validation method to background-validation, if set to false the validate-on-match method will be used."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_BACKGROUND_VALIDATION_MILLIS",
			"displayName": "JDBC Background Validation Millis",
			"description": "Defines the interval for the background-validation check for the jdbc connections."
		},
		{
			"name": "KIE_SERVER_EXTERNALDB_DRIVER_TYPE",
			"displayName": "KIE Server External Database Driver Type",
			"description": "KIE Server external database driver type, applicable only for DB2, possible values are 4 (default) or 2."
		},
		{
			"name": "EXTENSIONS_IMAGE",
			"displayName": "Drivers Extension Image",
			"description": "ImageStreamTag definition for the image containing the drivers and configuration. For example, custom-driver-image:7.13.0.",
			"value": "custom-driver-extension:7.13.0",
			"required": true
		},
		{
			"name": "EXTENSIONS_IMAGE_NAMESPACE",
			"displayName": "Drivers ImageStream Namespace",
			"description": "Namespace within which the ImageStream definition for the image containing the drivers and configuration is located.",
			"value": "openshift",
			"required": true
		},
		{
			"name": "EXTENSIONS_INSTALL_DIR",
			"displayName": "Drivers Image Install Directory",
			"description": "Full path to the directory within the extensions image where the extensions are located (e.g. install.sh, modules/, etc.).",
			"value": "/extensions",
			"required": true
		},
		{
			"name": "KIE_SERVER_MODE",
			"displayName": "KIE Server Mode",
			"description": "The KIE Server mode. Valid values are 'DEVELOPMENT' or 'PRODUCTION'. In production mode, you can not deploy SNAPSHOT versions of artifacts on the KIE Server and can not change the version of an artifact in an existing container. (Sets the org.kie.server.mode system property).",
			"value": "PRODUCTION"
		},
		{
			"name": "KIE_MBEANS",
			"displayName": "KIE MBeans",
			"description": "KIE Server mbeans enabled/disabled (Sets the kie.mbeans and kie.scanner.mbeans system properties).",
			"value": "enabled"
		},
		{
			"name": "DROOLS_SERVER_FILTER_CLASSES",
			"displayName": "Drools Server Filter Classes",
			"description": "KIE Server class filtering (Sets the org.drools.server.filter.classes system property).",
			"value": "true"
		},
		{
			"name": "PROMETHEUS_SERVER_EXT_DISABLED",
			"displayName": "Prometheus Server Extension Disabled",
			"description": "If set to false, the prometheus server extension will be enabled. (Sets the org.kie.prometheus.server.ext.disabled system property)"
		},
		{
			"name": "KIE_SERVER_HOSTNAME_HTTP",
			"displayName": "KIE Server Custom http Route Hostname",
			"description": "Custom hostname for http service route. Leave blank for default hostname, e.g.: insecure-\u003capplication-name\u003e-kieserver-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER_HOSTNAME_HTTPS",
			"displayName": "KIE Server Custom https Route Hostname",
			"description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: \u003capplication-name\u003e-kieserver-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER_HTTPS_SECRET",
			"displayName": "KIE Server Keystore Secret Name",
			"description": "The name of the secret containing the keystore file.",
			"required": true
		},
		{
			"name": "KIE_SERVER_HTTPS_KEYSTORE",
			"displayName": "KIE Server Keystore Filename",
			"description": "The name of the keystore file within the secret.",
			"value": "keystore.jks"
		},
		{
			"name": "KIE_SERVER_HTTPS_NAME",
			"displayName": "KIE Server Certificate Name",
			"description": "The name associated with the server certificate.",
			"value": "jboss"
		},
		{
			"name": "KIE_SERVER_HTTPS_PASSWORD",
			"displayName": "KIE Server Keystore Password",
			"description": "The password for the keystore and certificate.",
			"value": "mykeystorepass"
		},
		{
			"name": "KIE_SERVER_BYPASS_AUTH_USER",
			"displayName": "KIE Server Bypass Auth User",
			"description": "Allows the KIE Server to bypass the authenticated user for task-related operations, for example, queries. (Sets the org.kie.server.bypass.auth.user system property)",
			"value": "false"
		},
		{
			"name": "TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL",
			"displayName": "Timer service data store refresh interval (in milliseconds)",
			"description": "Sets refresh-interval for the EJB timer database data-store service.",
			"value": "30000"
		},
		{
			"name": "KIE_SERVER_MEMORY_LIMIT",
			"displayName": "KIE Server Container Memory Limit",
			"description": "KIE Server Container memory limit.",
			"value": "2Gi",
			"required": true
		},
		{
			"name": "KIE_SERVER_MEMORY_REQUEST",
			"displayName": "KIE Server Container Memory Request",
			"description": "KIE Server Container memory request.",
			"value": "1536Mi",
			"required": true
		},
		{
			"name": "KIE_SERVER_CPU_LIMIT",
			"displayName": "KIE Server Container CPU Limit",
			"description": "KIE Server Container CPU limit.",
			"value": "1",
			"required": true
		},
		{
			"name": "KIE_SERVER_CPU_REQUEST",
			"displayName": "KIE Server Container CPU Request",
			"description": "KIE Server Container CPU request.",
			"value": "750m",
			"required": true
		},
		{
			"name": "KIE_SERVER_CONTAINER_DEPLOYMENT",
			"displayName": "KIE Server Container Deployment",
			"description": "KIE Server Container deployment configuration with optional alias. Format: containerId=groupId:artifactId:version|c2(alias2)=g2:a2:v2"
		},
		{
			"name": "KIE_SERVER_MGMT_DISABLED",
			"displayName": "Disable KIE Server Management",
			"description": "Disable management api and don't allow KIE containers to be deployed/undeployed or started/stopped. Sets the property org.kie.server.mgmt.api.disabled to true and org.kie.server.startup.strategy to LocalContainersStartupStrategy."
		},
		{
			"name": "SSO_URL",
			"displayName": "RH-SSO URL",
			"description": "RH-SSO URL."
		},
		{
			"name": "SSO_REALM",
			"displayName": "RH-SSO Realm name",
			"description": "RH-SSO Realm name."
		},
		{
			"name": "KIE_SERVER_SSO_CLIENT",
			"displayName": "KIE Server RH-SSO Client name",
			"description": "KIE Server RH-SSO Client name."
		},
		{
			"name": "KIE_SERVER_SSO_SECRET",
			"displayName": "KIE Server RH-SSO Client Secret",
			"description": "KIE Server RH-SSO Client Secret."
		},
		{
			"name": "SSO_USERNAME",
			"displayName": "RH-SSO Realm admin user name",
			"description": "RH-SSO Realm admin user name for creating the Client if it doesn't exist."
		},
		{
			"name": "SSO_PASSWORD",
			"displayName": "RH-SSO Realm Admin Password",
			"description": "RH-SSO Realm Admin Password used to create the Client."
		},
		{
			"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
			"displayName": "RH-SSO Disable SSL Certificate Validation",
			"description": "RH-SSO Disable SSL Certificate Validation.",
			"value": "false"
		},
		{
			"name": "SSO_PRINCIPAL_ATTRIBUTE",
			"displayName": "RH-SSO Principal Attribute",
			"description": "RH-SSO Principal Attribute to use as user name.",
			"value": "preferred_username"
		},
		{
			"name": "AUTH_LDAP_URL",
			"displayName": "LDAP Endpoint",
			"description": "LDAP endpoint to connect for authentication. For failover, set two or more LDAP endpoints separated by space."
		},
		{
			"name": "AUTH_LDAP_LOGIN_MODULE",
			"displayName": "LDAP Flag Login Module",
			"description": "LDAP login module flag, adds backward compatibility with the legacy security subsystem on Elytron. 'optional' is the only supported value, if set, it will create a distributed realm on Elytron configuration with LDAP and FileSystem realms with the user added using the KIE_ADMIN_USER."
		},
		{
			"name": "AUTH_LDAP_LOGIN_FAILOVER",
			"displayName": "LDAP login failover",
			"description": "Enable failover, if LDAP Url is unreachable, it will fail over to the KieFsRealm."
		},
		{
			"name": "AUTH_LDAP_BIND_DN",
			"displayName": "LDAP Bind DN",
			"description": "Bind DN used for authentication."
		},
		{
			"name": "AUTH_LDAP_BIND_CREDENTIAL",
			"displayName": "LDAP Bind Credentials",
			"description": "LDAP Credentials used for authentication."
		},
		{
			"name": "AUTH_LDAP_ALLOW_EMPTY_PASSWORDS",
			"displayName": "Allow Empty Passwords",
			"description": "Does this realm support blank password direct verification? Blank password attempt will be rejected otherwise. Boolean flag, defaults to false."
		},
		{
			"name": "AUTH_LDAP_BASE_CTX_DN",
			"displayName": "LDAP Base DN",
			"description": "LDAP Base DN of the top-level context to begin the user search."
		},
		{
			"name": "AUTH_LDAP_BASE_FILTER",
			"displayName": "LDAP Base Search filter",
			"description": "LDAP search filter used to locate the context of the user to authenticate. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. A common example for the search filter is (uid={0})."
		},
		{
			"name": "AUTH_LDAP_RECURSIVE_SEARCH",
			"displayName": "LDAP User resursive search",
			"description": "Indicates if the user queries are recursive."
		},
		{
			"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
			"displayName": "LDAP Search time limit",
			"description": "The timeout in milliseconds for user or role searches."
		},
		{
			"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
			"displayName": "LDAP Role attributeID",
			"description": "Name of the attribute containing the user roles."
		},
		{
			"name": "AUTH_LDAP_ROLES_CTX_DN",
			"displayName": "LDAP Roles Search DN",
			"description": "The fixed DN of the context to search for user roles. This is not the DN where the actual roles are, but the DN where the objects containing the user roles are. For example, in a Microsoft Active Directory server, this is the DN where the user account is."
		},
		{
			"name": "AUTH_LDAP_ROLE_FILTER",
			"displayName": "LDAP Role search filter",
			"description": "A search filter used to locate the roles associated with the authenticated user. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. The authenticated userDN is substituted into the filter anywhere a {1} is used. An example search filter that matches on the input username is (member={0}). An alternative that matches on the authenticated userDN is (member={1})."
		},
		{
			"name": "AUTH_LDAP_ROLE_RECURSION",
			"displayName": "LDAP Role recursion",
			"description": "The number of levels of recursion the role search will go below a matching context. Disable recursion by setting this to 0."
		},
		{
			"name": "AUTH_LDAP_DEFAULT_ROLE",
			"displayName": "LDAP Default role",
			"description": "A role included for all authenticated users."
		},
		{
			"name": "AUTH_LDAP_NEW_IDENTITY_ATTRIBUTES",
			"displayName": "LDAP new identity attributes",
			"description": "Provide new identities for LDAP  identity mapping, the pattern to be used with this env is 'attribute_name=attribute_value;another_attribute_name=value'"
		},
		{
			"name": "AUTH_LDAP_REFERRAL_MODE",
			"displayName": "LDAP follow referrals",
			"description": "If LDAP referrals should be followed. Corresponds to REFERRAL ('java.naming.referral') environment property. Allowed values: 'ignore', 'follow', 'throw'"
		},
		{
			"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
			"displayName": "Role Mapping roles properties file path or one lined roles",
			"description": "When present, the RoleMapping will be configured to use the provided properties file or roles. This parameter defines the fully-qualified file path and name of a properties file or a set of roles with the following pattern 'role=role1;another-role=role2'. The format of every entry in the file is original_role=role1,role2,role3"
		},
		{
			"name": "AUTH_LDAP_MAPPER_KEEP_MAPPED",
			"displayName": "Role Mapper Keep Mapped",
			"description": "When set to 'true' the mapped roles will retain all roles, that have defined mappings."
		},
		{
			"name": "AUTH_LDAP_MAPPER_KEEP_NON_MAPPED",
			"displayName": "Role Mapper Keep Non Mapped",
			"description": "When set to 'true' the mapped roles will retain all roles, that have no defined mappings."
		}
	],
	"labels": {
		"rhpam": "7.13",
		"template": "rhpam713-kieserver-externaldb"
	}
}