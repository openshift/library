{
    "apiVersion": "v1",
    "kind": "Template",
    "labels": {
        "template": "infinispan-ephemeral"
    },
    "metadata": {
        "annotations": {
            "description": "Infinispan 9 (Ephemeral)",
            "iconClass": "icon-infinispan",
            "openshift.io/display-name": "Infinispan 9 (Ephemeral)",
            "openshift.io/documentation-url": "http://infinispan.org/documentation/",
            "openshift.io/long-description": "This template provides a standalone Infinispan server (a high performance, scalable, key/value data grid solution) without persistence (in other words your data will be lost upon restart). In order to provide custom configuration, please update the $ApplicationName-configuration ConfigMap and restart a Pod.",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "openshift.io/support-url": "http://infinispan.org",
            "tags": "java,database,datagrid,jboss"
        },
        "creationTimestamp": null,
        "labels": {
            "template": "infinispan-ephemeral"
        },
        "name": "infinispan-ephemeral"
    },
    "objects": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "name": "${APPLICATION_NAME}"
            }
        },
        {
            "apiVersion": "v1",
            "groupNames": null,
            "kind": "RoleBinding",
            "metadata": {
                "name": "${APPLICATION_NAME}-view"
            },
            "roleRef": {
                "name": "view"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "${APPLICATION_NAME}"
                }
            ],
            "userNames": [
                "system:serviceaccount:${NAMESPACE}:${APPLICATION_NAME}"
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Secret",
            "metadata": {
                "annotations": {
                    "template.openshift.io/expose-infinispan.client.hotrod.auth_password": "{.data['application-password']}",
                    "template.openshift.io/expose-infinispan.client.hotrod.auth_username": "{.data['application-user']}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "stringData": {
                "application-password": "${APPLICATION_PASSWORD}",
                "application-user": "${APPLICATION_USER}",
                "management-password": "${MANAGEMENT_PASSWORD}",
                "management-user": "${MANAGEMENT_USER}"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "Headless service for StatefulSets"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-headless"
            },
            "spec": {
                "clusterIP": "None",
                "ports": [
                    {
                        "name": "http",
                        "port": 8080,
                        "targetPort": 8080
                    },
                    {
                        "name": "hotrod",
                        "port": 11222,
                        "targetPort": 11222
                    }
                ],
                "selector": {
                    "application": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The web server's HTTP port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-http"
            },
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "Hot Rod's port.",
                    "template.openshift.io/expose-infinispan.client.hotrod.server_list": "{.spec.clusterIP}:{.spec.ports[0].port}"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-hotrod"
            },
            "spec": {
                "ports": [
                    {
                        "port": 11222,
                        "targetPort": 11222
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The management console."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-management"
            },
            "spec": {
                "ports": [
                    {
                        "port": 9990,
                        "targetPort": 9990
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "data": {
                "cloud-ephemeral.xml": "<?xml version='1.0' encoding='UTF-8'?>\n\n<server xmlns=\"urn:jboss:domain:8.0\">\n    <extensions>\n        <extension module=\"org.infinispan.extension\"/>\n        <extension module=\"org.infinispan.server.endpoint\"/>\n        <extension module=\"org.jboss.as.connector\"/>\n        <extension module=\"org.jboss.as.deployment-scanner\"/>\n        <extension module=\"org.jboss.as.jdr\"/>\n        <extension module=\"org.jboss.as.jmx\"/>\n        <extension module=\"org.jboss.as.logging\"/>\n        <extension module=\"org.jboss.as.naming\"/>\n        <extension module=\"org.jboss.as.remoting\"/>\n        <extension module=\"org.jboss.as.security\"/>\n        <extension module=\"org.jboss.as.transactions\"/>\n        <extension module=\"org.jgroups.extension\"/>\n        <extension module=\"org.wildfly.extension.elytron\"/>\n        <extension module=\"org.wildfly.extension.io\"/>\n    </extensions>\n    <management>\n        <security-realms>\n            <security-realm name=\"ManagementRealm\">\n                <authentication>\n                    <local default-user=\"$local\"/>\n                    <properties path=\"mgmt-users.properties\" relative-to=\"jboss.server.config.dir\"/>\n                </authentication>\n                <authorization map-groups-to-roles=\"false\">\n                    <properties path=\"mgmt-groups.properties\" relative-to=\"jboss.server.config.dir\"/>\n                </authorization>\n            </security-realm>\n            <security-realm name=\"ApplicationRealm\">\n                <server-identities>\n                    <ssl>\n                        <keystore path=\"application.keystore\" relative-to=\"jboss.server.config.dir\" keystore-password=\"password\" alias=\"server\" key-password=\"password\" generate-self-signed-certificate-host=\"localhost\"/>\n                    </ssl>\n                </server-identities>\n                <authentication>\n                    <local default-user=\"$local\" allowed-users=\"*\"/>\n                    <properties path=\"application-users.properties\" relative-to=\"jboss.server.config.dir\"/>\n                </authentication>\n                <authorization>\n                    <properties path=\"application-roles.properties\" relative-to=\"jboss.server.config.dir\"/>\n                </authorization>\n            </security-realm>\n        </security-realms>\n        <audit-log>\n            <formatters>\n                <json-formatter name=\"json-formatter\"/>\n            </formatters>\n            <handlers>\n                <file-handler name=\"file\" formatter=\"json-formatter\" relative-to=\"jboss.server.data.dir\" path=\"audit-log.log\"/>\n            </handlers>\n            <logger log-boot=\"true\" enabled=\"false\">\n                <handlers>\n                    <handler name=\"file\"/>\n                </handlers>\n            </logger>\n        </audit-log>\n        <management-interfaces>\n            <http-interface security-realm=\"ManagementRealm\">\n                <http-upgrade enabled=\"true\"/>\n                <socket-binding http=\"management-http\"/>\n            </http-interface>\n        </management-interfaces>\n        <access-control>\n            <role-mapping>\n                <role name=\"SuperUser\">\n                    <include>\n                        <user name=\"$local\"/>\n                    </include>\n                </role>\n            </role-mapping>\n        </access-control>\n    </management>\n    <profile>\n        <subsystem xmlns=\"urn:jboss:domain:logging:3.0\">\n            <console-handler name=\"CONSOLE\">\n                <level name=\"INFO\"/>\n                <formatter>\n                    <named-formatter name=\"COLOR-PATTERN\"/>\n                </formatter>\n            </console-handler>\n            <periodic-rotating-file-handler name=\"FILE\" autoflush=\"true\">\n                <formatter>\n                    <named-formatter name=\"PATTERN\"/>\n                </formatter>\n                <file relative-to=\"jboss.server.log.dir\" path=\"server.log\"/>\n                <suffix value=\".yyyy-MM-dd\"/>\n                <append value=\"true\"/>\n            </periodic-rotating-file-handler>\n            <size-rotating-file-handler name=\"HR-ACCESS-FILE\" autoflush=\"true\">\n                <formatter>\n                    <named-formatter name=\"ACCESS-LOG\"/>\n                </formatter>\n                <file relative-to=\"jboss.server.log.dir\" path=\"hotrod-access.log\"/>\n                <append value=\"true\"/>\n                <rotate-size value=\"10M\"/>\n                <max-backup-index value=\"10\"/>\n            </size-rotating-file-handler>\n            <size-rotating-file-handler name=\"REST-ACCESS-FILE\" autoflush=\"true\">\n                <formatter>\n                    <named-formatter name=\"ACCESS-LOG\"/>\n                </formatter>\n                <file relative-to=\"jboss.server.log.dir\" path=\"rest-access.log\"/>\n                <append value=\"true\"/>\n                <rotate-size value=\"10M\"/>\n                <max-backup-index value=\"10\"/>\n            </size-rotating-file-handler>\n            <logger category=\"com.arjuna\">\n                <level name=\"WARN\"/>\n            </logger>\n            <logger category=\"org.jboss.as.config\">\n                <level name=\"DEBUG\"/>\n            </logger>\n            <logger category=\"sun.rmi\">\n                <level name=\"WARN\"/>\n            </logger>\n            <logger category=\"org.infinispan.HOTROD_ACCESS_LOG\" use-parent-handlers=\"false\">\n                <!-- Set to TRACE to enable access logging for hot rod or use DMR -->\n                <level name=\"INFO\"/>\n                <handlers>\n                    <handler name=\"HR-ACCESS-FILE\"/>\n                </handlers>\n            </logger>\n            <logger category=\"org.infinispan.REST_ACCESS_LOG\" use-parent-handlers=\"false\">\n                <!-- Set to TRACE to enable access logging for rest or use DMR -->\n                <level name=\"INFO\"/>\n                <handlers>\n                    <handler name=\"REST-ACCESS-FILE\"/>\n                </handlers>\n            </logger>\n            <root-logger>\n                <level name=\"INFO\"/>\n                <handlers>\n                    <handler name=\"CONSOLE\"/>\n                    <handler name=\"FILE\"/>\n                </handlers>\n            </root-logger>\n            <formatter name=\"PATTERN\">\n                <pattern-formatter pattern=\"%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n\"/>\n            </formatter>\n            <formatter name=\"COLOR-PATTERN\">\n                <pattern-formatter pattern=\"%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n\"/>\n            </formatter>\n            <formatter name=\"ACCESS-LOG\">\n                <pattern-formatter pattern=\"%X{address} %X{user} [%d{dd/MMM/yyyy:HH:mm:ss z}] &quot;%X{method} %m %X{protocol}&quot; %X{status} %X{requestSize} %X{responseSize} %X{duration}%n\"/>\n            </formatter>\n        </subsystem>\n        <subsystem xmlns=\"urn:jboss:domain:deployment-scanner:2.0\">\n            <deployment-scanner path=\"deployments\" relative-to=\"jboss.server.base.dir\" scan-interval=\"5000\" runtime-failure-causes-rollback=\"${jboss.deployment.scanner.rollback.on.failure:false}\"/>\n        </subsystem>\n        <subsystem xmlns=\"urn:jboss:domain:datasources:5.0\">\n            <datasources>\n                <datasource jndi-name=\"java:jboss/datasources/ExampleDS\" pool-name=\"ExampleDS\" enabled=\"true\" use-java-context=\"true\">\n                    <connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url>\n                    <driver>h2</driver>\n                    <security>\n                        <user-name>sa</user-name>\n                        <password>sa</password>\n                    </security>\n                </datasource>\n                <drivers>\n                    <driver name=\"h2\" module=\"com.h2database.h2\">\n                        <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>\n                    </driver>\n                </drivers>\n            </datasources>\n        </subsystem>\n        <subsystem xmlns=\"urn:wildfly:elytron:4.0\" final-providers=\"combined-providers\" disallowed-providers=\"OracleUcrypto\">\n            <providers>\n                <aggregate-providers name=\"combined-providers\">\n                    <providers name=\"elytron\"/>\n                    <providers name=\"openssl\"/>\n                </aggregate-providers>\n                <provider-loader name=\"elytron\" module=\"org.wildfly.security.elytron\"/>\n                <provider-loader name=\"openssl\" module=\"org.wildfly.openssl\"/>\n            </providers>\n            <audit-logging>\n                <file-audit-log name=\"local-audit\" path=\"audit.log\" relative-to=\"jboss.server.log.dir\" format=\"JSON\"/>\n            </audit-logging>\n            <security-domains>\n                <security-domain name=\"ApplicationDomain\" default-realm=\"ApplicationRealm\" permission-mapper=\"default-permission-mapper\">\n                    <realm name=\"ApplicationRealm\" role-decoder=\"groups-to-roles\"/>\n                    <realm name=\"local\"/>\n                </security-domain>\n                <security-domain name=\"ManagementDomain\" default-realm=\"ManagementRealm\" permission-mapper=\"default-permission-mapper\">\n                    <realm name=\"ManagementRealm\" role-decoder=\"groups-to-roles\"/>\n                    <realm name=\"local\" role-mapper=\"super-user-mapper\"/>\n                </security-domain>\n            </security-domains>\n            <security-realms>\n                <identity-realm name=\"local\" identity=\"$local\"/>\n                <properties-realm name=\"ApplicationRealm\">\n                    <users-properties path=\"application-users.properties\" relative-to=\"jboss.server.config.dir\" digest-realm-name=\"ApplicationRealm\"/>\n                    <groups-properties path=\"application-roles.properties\" relative-to=\"jboss.server.config.dir\"/>\n                </properties-realm>\n                <properties-realm name=\"ManagementRealm\">\n                    <users-properties path=\"mgmt-users.properties\" relative-to=\"jboss.server.config.dir\" digest-realm-name=\"ManagementRealm\"/>\n                    <groups-properties path=\"mgmt-groups.properties\" relative-to=\"jboss.server.config.dir\"/>\n                </properties-realm>\n            </security-realms>\n            <mappers>\n                <simple-permission-mapper name=\"default-permission-mapper\" mapping-mode=\"first\">\n                    <permission-mapping>\n                        <principal name=\"anonymous\"/>\n                        <permission-set name=\"default-permissions\"/>\n                    </permission-mapping>\n                    <permission-mapping match-all=\"true\">\n                        <permission-set name=\"login-permission\"/>\n                        <permission-set name=\"default-permissions\"/>\n                    </permission-mapping>\n                </simple-permission-mapper>\n                <constant-realm-mapper name=\"local\" realm-name=\"local\"/>\n                <simple-role-decoder name=\"groups-to-roles\" attribute=\"groups\"/>\n                <constant-role-mapper name=\"super-user-mapper\">\n                    <role name=\"SuperUser\"/>\n                </constant-role-mapper>\n            </mappers>\n            <permission-sets>\n                <permission-set name=\"login-permission\">\n                    <permission class-name=\"org.wildfly.security.auth.permission.LoginPermission\"/>\n                </permission-set>\n                <permission-set name=\"default-permissions\"/>\n            </permission-sets>\n            <http>\n                <http-authentication-factory name=\"management-http-authentication\" security-domain=\"ManagementDomain\" http-server-mechanism-factory=\"global\">\n                    <mechanism-configuration>\n                        <mechanism mechanism-name=\"DIGEST\">\n                            <mechanism-realm realm-name=\"ManagementRealm\"/>\n                        </mechanism>\n                    </mechanism-configuration>\n                </http-authentication-factory>\n                <provider-http-server-mechanism-factory name=\"global\"/>\n            </http>\n            <sasl>\n                <sasl-authentication-factory name=\"application-sasl-authentication\" sasl-server-factory=\"configured\" security-domain=\"ApplicationDomain\">\n                    <mechanism-configuration>\n                        <mechanism mechanism-name=\"JBOSS-LOCAL-USER\" realm-mapper=\"local\"/>\n                        <mechanism mechanism-name=\"DIGEST-MD5\">\n                            <mechanism-realm realm-name=\"ApplicationRealm\"/>\n                        </mechanism>\n                    </mechanism-configuration>\n                </sasl-authentication-factory>\n                <sasl-authentication-factory name=\"management-sasl-authentication\" sasl-server-factory=\"configured\" security-domain=\"ManagementDomain\">\n                    <mechanism-configuration>\n                        <mechanism mechanism-name=\"JBOSS-LOCAL-USER\" realm-mapper=\"local\"/>\n                        <mechanism mechanism-name=\"DIGEST-MD5\">\n                            <mechanism-realm realm-name=\"ManagementRealm\"/>\n                        </mechanism>\n                    </mechanism-configuration>\n                </sasl-authentication-factory>\n                <configurable-sasl-server-factory name=\"configured\" sasl-server-factory=\"elytron\">\n                    <properties>\n                        <property name=\"wildfly.sasl.local-user.default-user\" value=\"$local\"/>\n                    </properties>\n                </configurable-sasl-server-factory>\n                <mechanism-provider-filtering-sasl-server-factory name=\"elytron\" sasl-server-factory=\"global\">\n                    <filters>\n                        <filter provider-name=\"WildFlyElytron\"/>\n                    </filters>\n                </mechanism-provider-filtering-sasl-server-factory>\n                <provider-sasl-server-factory name=\"global\"/>\n            </sasl>\n        </subsystem>\n        <subsystem xmlns=\"urn:infinispan:server:core:9.4\" default-cache-container=\"clustered\">\n            <cache-container name=\"clustered\" default-cache=\"default\" statistics=\"true\">\n                <transport lock-timeout=\"60000\"/>\n                <global-state/>\n                <distributed-cache-configuration name=\"transactional\">\n                    <transaction mode=\"NON_XA\" locking=\"PESSIMISTIC\"/>\n                </distributed-cache-configuration>\n                <distributed-cache-configuration name=\"async\" mode=\"ASYNC\"/>\n                <replicated-cache-configuration name=\"replicated\"/>\n                <distributed-cache-configuration name=\"persistent-file-store\">\n                    <file-store shared=\"false\" fetch-state=\"true\" passivation=\"false\"/>\n                </distributed-cache-configuration>\n                <distributed-cache-configuration name=\"indexed\">\n                    <indexing index=\"LOCAL\" auto-config=\"true\"/>\n                </distributed-cache-configuration>\n                <distributed-cache-configuration name=\"memory-bounded\">\n                    <memory>\n                        <binary size=\"10000000\" eviction=\"MEMORY\"/>\n                    </memory>\n                </distributed-cache-configuration>\n                <distributed-cache-configuration name=\"persistent-file-store-passivation\">\n                    <memory>\n                        <object size=\"10000\"/>\n                    </memory>\n                    <file-store shared=\"false\" fetch-state=\"true\" passivation=\"true\">\n                        <write-behind modification-queue-size=\"1024\" thread-pool-size=\"1\"/>\n                    </file-store>\n                </distributed-cache-configuration>\n                <distributed-cache-configuration name=\"persistent-file-store-write-behind\">\n                    <file-store shared=\"false\" fetch-state=\"true\" passivation=\"false\">\n                        <write-behind modification-queue-size=\"1024\" thread-pool-size=\"1\"/>\n                    </file-store>\n                </distributed-cache-configuration>\n                <distributed-cache-configuration name=\"persistent-rocksdb-store\">\n                    <rocksdb-store shared=\"false\" fetch-state=\"true\" passivation=\"false\"/>\n                </distributed-cache-configuration>\n                <distributed-cache-configuration name=\"persistent-jdbc-string-keyed\">\n                    <string-keyed-jdbc-store datasource=\"java:jboss/datasources/ExampleDS\" fetch-state=\"true\" preload=\"false\" purge=\"false\" shared=\"false\" passivation=\"false\">\n                        <string-keyed-table prefix=\"ISPN\">\n                            <id-column name=\"id\" type=\"VARCHAR\"/>\n                            <data-column name=\"datum\" type=\"BINARY\"/>\n                            <timestamp-column name=\"version\" type=\"BIGINT\"/>\n                        </string-keyed-table>\n                        <write-behind modification-queue-size=\"1024\" thread-pool-size=\"1\"/>\n                    </string-keyed-jdbc-store>\n                </distributed-cache-configuration>\n                <distributed-cache name=\"default\"/>\n                <replicated-cache name=\"repl\" configuration=\"replicated\"/>\n            </cache-container>\n        </subsystem>\n        <subsystem xmlns=\"urn:infinispan:server:endpoint:9.4\">\n            <hotrod-connector socket-binding=\"hotrod\" cache-container=\"clustered\">\n                <topology-state-transfer lazy-retrieval=\"false\" lock-timeout=\"1000\" replication-timeout=\"5000\"/>\n            </hotrod-connector>\n            <rest-connector socket-binding=\"rest\" cache-container=\"clustered\">\n                <authentication security-realm=\"ApplicationRealm\" auth-method=\"BASIC\"/>\n            </rest-connector>\n        </subsystem>\n        <subsystem xmlns=\"urn:infinispan:server:jgroups:9.4\">\n            <channels default=\"cluster\">\n                <channel name=\"cluster\"/>\n            </channels>\n            <stacks default=\"${jboss.default.jgroups.stack:tcp-gossip}\">\n                <stack name=\"tcp-gossip\">\n                    <transport type=\"TCP\" socket-binding=\"jgroups-tcp\"/>\n                    <protocol type=\"TCPGOSSIP\">\n                        <property name=\"initial_hosts\">${jgroups.gossip.initial_hosts:}</property>\n                    </protocol>\n                    <protocol type=\"MERGE3\"/>\n                    <protocol type=\"FD_SOCK\" socket-binding=\"jgroups-tcp-fd\"/>\n                    <protocol type=\"FD_ALL\"/>\n                    <protocol type=\"VERIFY_SUSPECT\"/>\n                    <protocol type=\"pbcast.NAKACK2\">\n                        <property name=\"use_mcast_xmit\">false</property>\n                    </protocol>\n                    <protocol type=\"UNICAST3\"/>\n                    <protocol type=\"pbcast.STABLE\"/>\n                    <protocol type=\"pbcast.GMS\"/>\n                    <protocol type=\"MFC\"/>\n                </stack>\n                <stack name=\"azure\">\n                    <transport type=\"TCP\" socket-binding=\"jgroups-tcp\"/>\n                    <protocol type=\"azure.AZURE_PING\">\n                        <property name=\"storage_account_name\">${jgroups.azure.storage_account_name:}</property>\n                        <property name=\"storage_access_key\">${jgroups.azure.storage_access_key:}</property>\n                        <property name=\"container\">${jgroups.azure.container:}</property>\n                    </protocol>\n                    <protocol type=\"MERGE3\"/>\n                    <protocol type=\"FD_SOCK\" socket-binding=\"jgroups-tcp-fd\"/>\n                    <protocol type=\"FD_ALL\"/>\n                    <protocol type=\"VERIFY_SUSPECT\"/>\n                    <protocol type=\"pbcast.NAKACK2\">\n                        <property name=\"use_mcast_xmit\">false</property>\n                    </protocol>\n                    <protocol type=\"UNICAST3\"/>\n                    <protocol type=\"pbcast.STABLE\"/>\n                    <protocol type=\"pbcast.GMS\"/>\n                    <protocol type=\"MFC\"/>\n                    <protocol type=\"FRAG3\"/>\n                </stack>\n                <stack name=\"s3-private\">\n                    <transport type=\"TCP\" socket-binding=\"jgroups-tcp\"/>\n                    <protocol type=\"S3_PING\">\n                        <property name=\"location\">${jgroups.s3.bucket:}</property>\n                        <property name=\"access_key\">${jgroups.s3.access_key:}</property>\n                        <property name=\"secret_access_key\">${jgroups.s3.secret_access_key:}</property>\n                    </protocol>\n                    <protocol type=\"MERGE3\"/>\n                    <protocol type=\"FD_SOCK\" socket-binding=\"jgroups-tcp-fd\"/>\n                    <protocol type=\"FD_ALL\"/>\n                    <protocol type=\"VERIFY_SUSPECT\"/>\n                    <protocol type=\"pbcast.NAKACK2\">\n                        <property name=\"use_mcast_xmit\">false</property>\n                    </protocol>\n                    <protocol type=\"UNICAST3\"/>\n                    <protocol type=\"pbcast.STABLE\"/>\n                    <protocol type=\"pbcast.GMS\"/>\n                    <protocol type=\"MFC\"/>\n                    <protocol type=\"FRAG3\"/>\n                </stack>\n                <stack name=\"s3-presigned\">\n                    <transport type=\"TCP\" socket-binding=\"jgroups-tcp\"/>\n                    <protocol type=\"S3_PING\">\n                        <property name=\"pre_signed_delete_url\">${jgroups.s3.pre_signed_delete_url:}</property>\n                        <property name=\"pre_signed_put_url\">${jgroups.s3.pre_signed_put_url:}</property>\n                    </protocol>\n                    <protocol type=\"MERGE3\"/>\n                    <protocol type=\"FD_SOCK\" socket-binding=\"jgroups-tcp-fd\"/>\n                    <protocol type=\"FD_ALL\"/>\n                    <protocol type=\"VERIFY_SUSPECT\"/>\n                    <protocol type=\"pbcast.NAKACK2\">\n                        <property name=\"use_mcast_xmit\">false</property>\n                    </protocol>\n                    <protocol type=\"UNICAST3\"/>\n                    <protocol type=\"pbcast.STABLE\"/>\n                    <protocol type=\"pbcast.GMS\"/>\n                    <protocol type=\"MFC\"/>\n                    <protocol type=\"FRAG3\"/>\n                </stack>\n                <stack name=\"s3-public\">\n                    <transport type=\"TCP\" socket-binding=\"jgroups-tcp\"/>\n                    <protocol type=\"S3_PING\">\n                        <property name=\"location\">${jgroups.s3.bucket:}</property>\n                    </protocol>\n                    <protocol type=\"MERGE3\"/>\n                    <protocol type=\"FD_SOCK\" socket-binding=\"jgroups-tcp-fd\"/>\n                    <protocol type=\"FD_ALL\"/>\n                    <protocol type=\"VERIFY_SUSPECT\"/>\n                    <protocol type=\"pbcast.NAKACK2\">\n                        <property name=\"use_mcast_xmit\">false</property>\n                    </protocol>\n                    <protocol type=\"UNICAST3\"/>\n                    <protocol type=\"pbcast.STABLE\"/>\n                    <protocol type=\"pbcast.GMS\"/>\n                    <protocol type=\"MFC\"/>\n                    <protocol type=\"FRAG3\"/>\n                </stack>\n                <stack name=\"google\">\n                    <transport type=\"TCP\" socket-binding=\"jgroups-tcp\"/>\n                    <protocol type=\"GOOGLE_PING\">\n                        <property name=\"location\">${jgroups.google.bucket:}</property>\n                        <property name=\"access_key\">${jgroups.google.access_key:}</property>\n                        <property name=\"secret_access_key\">${jgroups.google.secret_access_key:}</property>\n                    </protocol>\n                    <protocol type=\"MERGE3\"/>\n                    <protocol type=\"FD_SOCK\" socket-binding=\"jgroups-tcp-fd\"/>\n                    <protocol type=\"FD_ALL\"/>\n                    <protocol type=\"VERIFY_SUSPECT\"/>\n                    <protocol type=\"pbcast.NAKACK2\">\n                        <property name=\"use_mcast_xmit\">false</property>\n                    </protocol>\n                    <protocol type=\"UNICAST3\"/>\n                    <protocol type=\"pbcast.STABLE\"/>\n                    <protocol type=\"pbcast.GMS\"/>\n                    <protocol type=\"MFC\"/>\n                    <protocol type=\"FRAG3\"/>\n                </stack>\n                <stack name=\"kubernetes\">\n                    <transport type=\"TCP\" socket-binding=\"jgroups-tcp\">\n                        <property name=\"logical_addr_cache_expiration\">360000</property>\n                    </transport>\n                    <protocol type=\"kubernetes.KUBE_PING\"/>\n                    <protocol type=\"MERGE3\"/>\n                    <protocol type=\"FD_SOCK\" socket-binding=\"jgroups-tcp-fd\"/>\n                    <protocol type=\"FD_ALL\"/>\n                    <protocol type=\"VERIFY_SUSPECT\"/>\n                    <protocol type=\"pbcast.NAKACK2\">\n                        <property name=\"use_mcast_xmit\">false</property>\n                    </protocol>\n                    <protocol type=\"UNICAST3\"/>\n                    <protocol type=\"pbcast.STABLE\"/>\n                    <protocol type=\"pbcast.GMS\"/>\n                    <protocol type=\"MFC\"/>\n                    <protocol type=\"FRAG3\"/>\n                </stack>\n            </stacks>\n        </subsystem>\n        <subsystem xmlns=\"urn:jboss:domain:io:3.0\">\n            <worker name=\"default\" io-threads=\"2\" task-max-threads=\"2\"/>\n            <buffer-pool name=\"default\"/>\n        </subsystem>\n        <subsystem xmlns=\"urn:jboss:domain:jca:5.0\">\n            <archive-validation enabled=\"true\" fail-on-error=\"true\" fail-on-warn=\"false\"/>\n            <bean-validation enabled=\"true\"/>\n            <default-workmanager>\n                <short-running-threads>\n                    <core-threads count=\"50\"/>\n                    <queue-length count=\"50\"/>\n                    <max-threads count=\"50\"/>\n                    <keepalive-time time=\"10\" unit=\"seconds\"/>\n                </short-running-threads>\n                <long-running-threads>\n                    <core-threads count=\"50\"/>\n                    <queue-length count=\"50\"/>\n                    <max-threads count=\"50\"/>\n                    <keepalive-time time=\"10\" unit=\"seconds\"/>\n                </long-running-threads>\n            </default-workmanager>\n            <cached-connection-manager/>\n        </subsystem>\n        <subsystem xmlns=\"urn:jboss:domain:jdr:1.0\"/>\n        <subsystem xmlns=\"urn:jboss:domain:jmx:1.3\">\n            <expose-resolved-model/>\n            <expose-expression-model/>\n            <remoting-connector/>\n        </subsystem>\n        <subsystem xmlns=\"urn:jboss:domain:naming:2.0\">\n            <remote-naming/>\n        </subsystem>\n        <subsystem xmlns=\"urn:jboss:domain:remoting:4.0\">\n            <http-connector name=\"http-remoting-connector\" connector-ref=\"default\" security-realm=\"ApplicationRealm\"/>\n        </subsystem>\n        <subsystem xmlns=\"urn:jboss:domain:security:2.0\">\n            <security-domains>\n                <security-domain name=\"other\" cache-type=\"default\">\n                    <authentication>\n                        <login-module code=\"Remoting\" flag=\"optional\">\n                            <module-option name=\"password-stacking\" value=\"useFirstPass\"/>\n                        </login-module>\n                        <login-module code=\"RealmDirect\" flag=\"required\">\n                            <module-option name=\"password-stacking\" value=\"useFirstPass\"/>\n                        </login-module>\n                    </authentication>\n                </security-domain>\n                <security-domain name=\"jboss-web-policy\" cache-type=\"default\">\n                    <authorization>\n                        <policy-module code=\"Delegating\" flag=\"required\"/>\n                    </authorization>\n                </security-domain>\n                <security-domain name=\"jaspitest\" cache-type=\"default\">\n                    <authentication-jaspi>\n                        <login-module-stack name=\"dummy\">\n                            <login-module code=\"Dummy\" flag=\"optional\"/>\n                        </login-module-stack>\n                        <auth-module code=\"Dummy\"/>\n                    </authentication-jaspi>\n                </security-domain>\n                <security-domain name=\"jboss-ejb-policy\" cache-type=\"default\">\n                    <authorization>\n                        <policy-module code=\"Delegating\" flag=\"required\"/>\n                    </authorization>\n                </security-domain>\n            </security-domains>\n        </subsystem>\n        <subsystem xmlns=\"urn:jboss:domain:transactions:5.0\">\n            <core-environment node-identifier=\"${jboss.tx.node.id:1}\">\n                <process-id>\n                    <uuid/>\n                </process-id>\n            </core-environment>\n            <recovery-environment socket-binding=\"txn-recovery-environment\" status-socket-binding=\"txn-status-manager\"/>\n            <object-store path=\"tx-object-store\" relative-to=\"jboss.server.data.dir\"/>\n        </subsystem>\n    </profile>\n    <interfaces>\n        <interface name=\"management\">\n            <inet-address value=\"${jboss.bind.address.management:127.0.0.1}\"/>\n        </interface>\n        <interface name=\"public\">\n            <inet-address value=\"${jboss.bind.address:127.0.0.1}\"/>\n        </interface>\n    </interfaces>\n    <socket-binding-group name=\"standard-sockets\" default-interface=\"public\" port-offset=\"${jboss.socket.binding.port-offset:0}\">\n        <socket-binding name=\"management-http\" interface=\"management\" port=\"${jboss.management.http.port:9990}\"/>\n        <socket-binding name=\"management-https\" interface=\"management\" port=\"${jboss.management.https.port:9993}\"/>\n        <socket-binding name=\"hotrod\" port=\"11222\"/>\n        <socket-binding name=\"hotrod-internal\" port=\"11223\"/>\n        <socket-binding name=\"hotrod-multi-tenancy\" port=\"11224\"/>\n        <socket-binding name=\"jgroups-mping\" port=\"0\" multicast-address=\"${jboss.default.multicast.address:234.99.54.14}\" multicast-port=\"45700\"/>\n        <socket-binding name=\"jgroups-tcp\" port=\"7600\"/>\n        <socket-binding name=\"jgroups-tcp-fd\" port=\"57600\"/>\n        <socket-binding name=\"jgroups-udp\" port=\"55200\" multicast-address=\"${jboss.default.multicast.address:234.99.54.14}\" multicast-port=\"45688\"/>\n        <socket-binding name=\"jgroups-udp-fd\" port=\"54200\"/>\n        <socket-binding name=\"memcached\" port=\"11211\"/>\n        <socket-binding name=\"rest\" port=\"8080\"/>\n        <socket-binding name=\"rest-multi-tenancy\" port=\"8081\"/>\n        <socket-binding name=\"rest-ssl\" port=\"8443\"/>\n        <socket-binding name=\"txn-recovery-environment\" port=\"4712\"/>\n        <socket-binding name=\"txn-status-manager\" port=\"4713\"/>\n        <outbound-socket-binding name=\"remote-store-hotrod-server\">\n            <remote-destination host=\"remote-host\" port=\"11222\"/>\n        </outbound-socket-binding>\n        <outbound-socket-binding name=\"remote-store-rest-server\">\n            <remote-destination host=\"remote-host\" port=\"8080\"/>\n        </outbound-socket-binding>\n    </socket-binding-group>\n</server>\n"
            },
            "kind": "ConfigMap",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-configuration"
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-management",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for the management console."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-management"
            },
            "spec": {
                "to": {
                    "kind": "Service",
                    "name": "${APPLICATION_NAME}-management"
                }
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "StatefulSet",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "replicas": "${{NUMBER_OF_INSTANCES}}",
                "serviceName": "${APPLICATION_NAME}-headless",
                "strategy": {
                    "rollingParams": {
                        "intervalSeconds": 20,
                        "maxSurge": 1,
                        "maxUnavailable": 1,
                        "timeoutSeconds": 1200,
                        "updatePeriodSeconds": 20
                    },
                    "type": "Rolling"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}"
                        },
                        "name": "${APPLICATION_NAME}"
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "custom/cloud-ephemeral.xml",
                                    "-Djboss.default.jgroups.stack=kubernetes"
                                ],
                                "env": [
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_LABELS",
                                        "value": "application=${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KUBERNETES_LABELS",
                                        "value": "application=${APPLICATION_NAME}"
                                    },
                                    {
                                        "name": "KUBERNETES_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MGMT_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "management-user",
                                                "name": "${APPLICATION_NAME}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MGMT_PASS",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "management-password",
                                                "name": "${APPLICATION_NAME}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "APP_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "application-user",
                                                "name": "${APPLICATION_NAME}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "APP_PASS",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "application-password",
                                                "name": "${APPLICATION_NAME}"
                                            }
                                        }
                                    }
                                ],
                                "image": "${IMAGE}",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/local/bin/is_running.sh"
                                        ]
                                    },
                                    "failureThreshold": 5,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 80
                                },
                                "name": "${APPLICATION_NAME}",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9990,
                                        "name": "management",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8888,
                                        "name": "ping",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 11222,
                                        "name": "hotrod",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/local/bin/is_healthy.sh"
                                        ]
                                    },
                                    "failureThreshold": 5,
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 80
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "0.5",
                                        "memory": "512Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/opt/jboss/infinispan-server/standalone/configuration/custom",
                                        "name": "${APPLICATION_NAME}-configuration"
                                    }
                                ]
                            }
                        ],
                        "serviceAccountName": "${APPLICATION_NAME}",
                        "terminationGracePeriodSeconds": 120,
                        "volumes": [
                            {
                                "configMap": {
                                    "name": "${APPLICATION_NAME}-configuration"
                                },
                                "name": "${APPLICATION_NAME}-configuration"
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        }
    ],
    "parameters": [
        {
            "description": "Namespace for the application. Note: The namespace is required for creating proper RoleBindings. Specifying wrong namespace will prevent cluster from forming.",
            "name": "NAMESPACE",
            "required": true,
            "value": "myproject"
        },
        {
            "description": "The name for the application.",
            "name": "APPLICATION_NAME",
            "required": true,
            "value": "infinispan-app"
        },
        {
            "description": "Username for accessing REST (and possible Hot Rod) endpoint.",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "APPLICATION_USER",
            "required": true
        },
        {
            "description": "Password for accessing REST (and possible Hot Rod) endpoint.",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "APPLICATION_PASSWORD",
            "required": true
        },
        {
            "description": "Username for accessing management console.",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "MANAGEMENT_USER",
            "required": true
        },
        {
            "description": "Password for accessing management console.",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "MANAGEMENT_PASSWORD",
            "required": true
        },
        {
            "description": "Infinispan image.",
            "name": "IMAGE",
            "required": true,
            "value": "jboss/infinispan-server:9.4.1.Final"
        },
        {
            "description": "Number of instances in the cluster.",
            "name": "NUMBER_OF_INSTANCES",
            "required": true,
            "value": "1"
        }
    ]
}