{
	"kind": "Template",
	"apiVersion": "template.openshift.io/v1",
	"metadata": {
		"name": "eap-xp3-basic-s2i",
		"creationTimestamp": null,
		"annotations": {
			"description": "Example of an application based on JBoss EAP XP. For more information about using this template, see https://github.com/jboss-container-images/jboss-eap-openshift-templates/blob/eap-xp3/README.adoc",
			"iconClass": "icon-eap",
			"openshift.io/display-name": "JBoss EAP XP 3.0 basic template",
			"openshift.io/provider-display-name": "Red Hat, Inc.",
			"tags": "eap,eap-xp,javaee,java,jboss",
			"template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/",
			"template.openshift.io/long-description": "This template defines resources needed to develop a JBoss Enterprise Application Platform XP based application, including a build configuration, application deployment configuration and secure communication using edge TLS.",
			"template.openshift.io/support-url": "https://access.redhat.com",
			"version": "1.0"
		}
	},
	"message": "A new JBoss EAP XP based application has been created in your project.",
	"objects": [
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The web server's http port."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"ports": [
					{
						"port": 8080,
						"targetPort": 8080
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The JGroups ping port for clustering.",
					"service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-ping"
			},
			"spec": {
				"clusterIP": "None",
				"ports": [
					{
						"name": "ping",
						"port": 8888
					}
				],
				"publishNotReadyAddresses": true,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "route.openshift.io/v1",
			"id": "${APPLICATION_NAME}-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for application's https service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"tls": {
					"insecureEdgeTerminationPolicy": "Redirect",
					"termination": "edge"
				},
				"to": {
					"name": "${APPLICATION_NAME}"
				}
			}
		},
		{
			"apiVersion": "image.openshift.io/v1",
			"kind": "ImageStream",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			}
		},
		{
			"apiVersion": "image.openshift.io/v1",
			"kind": "ImageStream",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-build-artifacts"
			}
		},
		{
			"apiVersion": "build.openshift.io/v1",
			"kind": "BuildConfig",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-build-artifacts"
			},
			"spec": {
				"output": {
					"to": {
						"kind": "ImageStreamTag",
						"name": "${APPLICATION_NAME}-build-artifacts:latest"
					}
				},
				"source": {
					"contextDir": "${CONTEXT_DIR}",
					"git": {
						"ref": "${SOURCE_REPOSITORY_REF}",
						"uri": "${SOURCE_REPOSITORY_URL}"
					},
					"type": "Git"
				},
				"strategy": {
					"sourceStrategy": {
						"env": [
							{
								"name": "MAVEN_MIRROR_URL",
								"value": "${MAVEN_MIRROR_URL}"
							},
							{
								"name": "MAVEN_ARGS_APPEND",
								"value": "${MAVEN_ARGS_APPEND}"
							},
							{
								"name": "GALLEON_PROVISION_LAYERS",
								"value": "${GALLEON_PROVISION_LAYERS}"
							},
							{
								"name": "GALLEON_PROVISION_DEFAULT_FAT_SERVER",
								"value": "true"
							},
							{
								"name": "ARTIFACT_DIR",
								"value": "${ARTIFACT_DIR}"
							}
						],
						"forcePull": true,
						"from": {
							"kind": "ImageStreamTag",
							"name": "${EAP_IMAGE_NAME}",
							"namespace": "${IMAGE_STREAM_NAMESPACE}"
						},
						"incremental": true
					},
					"type": "Source"
				},
				"triggers": [
					{
						"github": {
							"secret": "${GITHUB_WEBHOOK_SECRET}"
						},
						"type": "GitHub"
					},
					{
						"generic": {
							"secret": "${GENERIC_WEBHOOK_SECRET}"
						},
						"type": "Generic"
					},
					{
						"imageChange": {},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "build.openshift.io/v1",
			"kind": "BuildConfig",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"output": {
					"to": {
						"kind": "ImageStreamTag",
						"name": "${APPLICATION_NAME}:latest"
					}
				},
				"source": {
					"dockerfile": "FROM ${EAP_RUNTIME_IMAGE_NAME}\nCOPY /server $JBOSS_HOME\nUSER root\nRUN chown -R jboss:root $JBOSS_HOME \u0026\u0026 chmod -R ug+rwX $JBOSS_HOME\nUSER jboss\nCMD $JBOSS_HOME/bin/openshift-launch.sh",
					"images": [
						{
							"from": {
								"kind": "ImageStreamTag",
								"name": "${APPLICATION_NAME}-build-artifacts:latest"
							},
							"paths": [
								{
									"destinationDir": ".",
									"sourcePath": "/s2i-output/server/"
								}
							]
						}
					]
				},
				"strategy": {
					"dockerStrategy": {
						"from": {
							"kind": "ImageStreamTag",
							"name": "${EAP_RUNTIME_IMAGE_NAME}",
							"namespace": "${IMAGE_STREAM_NAMESPACE}"
						},
						"imageOptimizationPolicy": "SkipLayers"
					},
					"type": "Docker"
				},
				"triggers": [
					{
						"imageChange": {
							"from": {
								"kind": "ImageStreamTag",
								"name": "${APPLICATION_NAME}-build-artifacts:latest"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		},
		{
			"apiVersion": "apps.openshift.io/v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}"
			},
			"spec": {
				"replicas": 1,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}"
				},
				"strategy": {
					"type": "Recreate"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"com.company": "Red_Hat",
							"com.redhat.component-name": "EAP_XP",
							"com.redhat.component-type": "application",
							"com.redhat.component-version": "3.0",
							"com.redhat.product-name": "Red_Hat_Runtimes",
							"com.redhat.product-version": "2021-Q3",
							"deploymentConfig": "${APPLICATION_NAME}"
						},
						"name": "${APPLICATION_NAME}"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "JGROUPS_PING_PROTOCOL",
										"value": "dns.DNS_PING"
									},
									{
										"name": "OPENSHIFT_DNS_PING_SERVICE_NAME",
										"value": "${APPLICATION_NAME}-ping"
									},
									{
										"name": "OPENSHIFT_DNS_PING_SERVICE_PORT",
										"value": "8888"
									},
									{
										"name": "MQ_CLUSTER_PASSWORD",
										"value": "${MQ_CLUSTER_PASSWORD}"
									},
									{
										"name": "MQ_QUEUES",
										"value": "${MQ_QUEUES}"
									},
									{
										"name": "MQ_TOPICS",
										"value": "${MQ_TOPICS}"
									},
									{
										"name": "JGROUPS_CLUSTER_PASSWORD",
										"value": "${JGROUPS_CLUSTER_PASSWORD}"
									},
									{
										"name": "AUTO_DEPLOY_EXPLODED",
										"value": "${AUTO_DEPLOY_EXPLODED}"
									},
									{
										"name": "ENABLE_GENERATE_DEFAULT_DATASOURCE",
										"value": "${ENABLE_GENERATE_DEFAULT_DATASOURCE}"
									}
								],
								"image": "${APPLICATION_NAME}",
								"imagePullPolicy": "Always",
								"livenessProbe": {
									"exec": {
										"command": [
											"/bin/bash",
											"-c",
											"/opt/eap/bin/livenessProbe.sh"
										]
									},
									"initialDelaySeconds": 60
								},
								"name": "${APPLICATION_NAME}",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8888,
										"name": "ping",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"exec": {
										"command": [
											"/bin/bash",
											"-c",
											"/opt/eap/bin/readinessProbe.sh"
										]
									},
									"initialDelaySeconds": 10
								},
								"resources": {
									"limits": {
										"memory": "${MEMORY_LIMIT}"
									}
								}
							}
						],
						"terminationGracePeriodSeconds": 75
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${APPLICATION_NAME}:latest"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		}
	],
	"parameters": [
		{
			"name": "APPLICATION_NAME",
			"displayName": "Application Name",
			"description": "The name for the application.",
			"value": "eap-xp3-basic-app",
			"required": true
		},
		{
			"name": "EAP_IMAGE_NAME",
			"displayName": "EAP XP Image Name",
			"description": "EAP XP imagestream tag to be used, example: jboss-eap-xp3-openjdk11-openshift:latest",
			"value": "jboss-eap-xp3-openjdk11-openshift:latest",
			"required": true
		},
		{
			"name": "EAP_RUNTIME_IMAGE_NAME",
			"displayName": "EAP XP Runtime Image Name",
			"description": "EAP XP Runtime imagestream tag to be used, example: jboss-eap-xp3-openjdk11-runtime-openshift:latest",
			"value": "jboss-eap-xp3-openjdk11-runtime-openshift:latest",
			"required": true
		},
		{
			"name": "SOURCE_REPOSITORY_URL",
			"displayName": "Git Repository URL",
			"description": "Git source URI for application",
			"value": "https://github.com/jboss-developer/jboss-eap-quickstarts.git",
			"required": true
		},
		{
			"name": "SOURCE_REPOSITORY_REF",
			"displayName": "Git Reference",
			"description": "Git branch/tag reference",
			"value": "xp-3.0.x"
		},
		{
			"name": "CONTEXT_DIR",
			"displayName": "Context Directory",
			"description": "Path within Git project to build; empty for root project directory.",
			"value": "microprofile-config"
		},
		{
			"name": "GALLEON_PROVISION_LAYERS",
			"displayName": "Galleon layers",
			"description": "Comma separated list of Galleon layers to provision a server."
		},
		{
			"name": "ENABLE_GENERATE_DEFAULT_DATASOURCE",
			"displayName": "Enable ExampleDS datasource",
			"description": "Enable ExampleDS datasource.",
			"value": "false"
		},
		{
			"name": "MQ_QUEUES",
			"displayName": "Queues",
			"description": "Queue names, separated by commas. These queues will be automatically created when the broker starts. Also, they will be made accessible as JNDI resources in EAP. Note that all queues used by the application *must* be specified here in order to be created automatically on the remote AMQ broker."
		},
		{
			"name": "MQ_TOPICS",
			"displayName": "Topics",
			"description": "Topic names, separated by commas. These topics will be automatically created when the broker starts. Also, they will be made accessible as JNDI resources in EAP. Note that all topics used by the application *must* be specified here in order to be created automatically on the remote AMQ broker."
		},
		{
			"name": "MQ_CLUSTER_PASSWORD",
			"displayName": "AMQ cluster password",
			"description": "AMQ cluster admin password",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "GITHUB_WEBHOOK_SECRET",
			"displayName": "Github Webhook Secret",
			"description": "GitHub trigger secret",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "GENERIC_WEBHOOK_SECRET",
			"displayName": "Generic Webhook Secret",
			"description": "Generic build trigger secret",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_NAMESPACE",
			"displayName": "ImageStream Namespace",
			"description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
			"value": "openshift",
			"required": true
		},
		{
			"name": "JGROUPS_CLUSTER_PASSWORD",
			"displayName": "JGroups Cluster Password",
			"description": "JGroups cluster password",
			"generate": "expression",
			"from": "[a-zA-Z0-9]{8}",
			"required": true
		},
		{
			"name": "AUTO_DEPLOY_EXPLODED",
			"displayName": "Deploy Exploded Archives",
			"description": "Controls whether exploded deployment content should be automatically deployed",
			"value": "false"
		},
		{
			"name": "MAVEN_MIRROR_URL",
			"displayName": "Maven mirror URL",
			"description": "Maven mirror to use for S2I builds"
		},
		{
			"name": "MAVEN_ARGS_APPEND",
			"displayName": "Maven Additional Arguments",
			"description": "Maven additional arguments to use for S2I builds",
			"value": "-Dcom.redhat.xpaas.repo.jbossorg"
		},
		{
			"name": "ARTIFACT_DIR",
			"description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied."
		},
		{
			"name": "MEMORY_LIMIT",
			"description": "Container memory limit",
			"value": "1Gi"
		}
	],
	"labels": {
		"template": "eap-xp3-basic-s2i",
		"xpaas": "1.0"
	}
}